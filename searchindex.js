Search.setIndex({"alltitles": {"Activations": [[1102, "activations"], [1103, "activations"]], "Basic": [[1111, "basic"]], "Blocks": [[1102, "blocks"]], "Building models": [[1099, "building-models"]], "Compyute documentation": [[1099, null]], "Compyute reference": [[1113, null]], "Constants": [[1100, "constants"]], "Containers": [[1102, "containers"]], "Convolution": [[1102, "convolution"]], "Convolutions": [[1103, "convolutions"]], "Creating and Combining Operations": [[1100, "creating-and-combining-operations"]], "Data Types": [[1100, "data-types"]], "Dataloader": [[1107, "dataloader"]], "Devices": [[1100, "devices"]], "Early stopping": [[1106, "early-stopping"]], "Embedding": [[1102, "embedding"]], "Embeddings": [[1103, "embeddings"]], "Examples": [[1099, "examples"]], "Final notes": [[1099, "final-notes"]], "Installation": [[1099, "installation"]], "Learning Rate Schedulers": [[1106, "learning-rate-schedulers"]], "Linear": [[1102, "linear"], [1103, "linear"]], "Logging": [[1106, "logging"]], "Losses": [[1102, "losses"], [1103, "losses"]], "Metrics": [[1102, "metrics"], [1103, "metrics"]], "Module Utils": [[1107, "module-utils"]], "Modules": [[1102, "modules"]], "Multinary Operations": [[1100, "multinary-operations"]], "Normalization": [[1103, "normalization"]], "Normalizations": [[1102, "normalizations"]], "Parameter and Buffer": [[1102, "parameter-and-buffer"]], "Pooling": [[1102, "pooling"], [1103, "pooling"]], "Python API": [[1113, null]], "Recurrent": [[1102, "recurrent"], [1103, "recurrent"]], "Reducing Operations": [[1100, "reducing-operations"]], "Regularization": [[1102, "regularization"], [1103, "regularization"]], "Selecting Operations": [[1100, "selecting-operations"]], "Shape": [[1102, "shape"]], "Shape Operations": [[1100, "shape-operations"]], "Tensor Operations": [[1100, "tensor-operations"]], "Tensors": [[1099, "tensors"], [1100, "tensors"]], "Training Utils": [[1107, "training-utils"]], "Training models": [[1099, "training-models"]], "Unary Operations": [[1100, "unary-operations"]], "Usage": [[1099, "usage"]], "Utility Functions": [[1100, "utility-functions"]], "compyute": [[1100, null]], "compyute.Device": [[961, null]], "compyute.Device.__init__": [[962, null]], "compyute.Tensor": [[963, null]], "compyute.Tensor.__init__": [[964, null]], "compyute.Tensor.abs": [[965, null]], "compyute.Tensor.all": [[966, null]], "compyute.Tensor.any": [[967, null]], "compyute.Tensor.argmax": [[968, null]], "compyute.Tensor.copy": [[969, null]], "compyute.Tensor.imag": [[970, null]], "compyute.Tensor.item": [[971, null]], "compyute.Tensor.ito_device": [[972, null]], "compyute.Tensor.ito_type": [[973, null]], "compyute.Tensor.max": [[974, null]], "compyute.Tensor.mean": [[975, null]], "compyute.Tensor.min": [[976, null]], "compyute.Tensor.permute": [[977, null]], "compyute.Tensor.real": [[978, null]], "compyute.Tensor.squeeze": [[979, null]], "compyute.Tensor.std": [[980, null]], "compyute.Tensor.sum": [[981, null]], "compyute.Tensor.to_complex": [[982, null]], "compyute.Tensor.to_contiguous": [[983, null]], "compyute.Tensor.to_cpu": [[984, null]], "compyute.Tensor.to_cuda": [[985, null]], "compyute.Tensor.to_device": [[986, null]], "compyute.Tensor.to_double": [[987, null]], "compyute.Tensor.to_float": [[988, null]], "compyute.Tensor.to_half": [[989, null]], "compyute.Tensor.to_int": [[990, null]], "compyute.Tensor.to_list": [[991, null]], "compyute.Tensor.to_long": [[992, null]], "compyute.Tensor.to_numpy": [[993, null]], "compyute.Tensor.to_type": [[994, null]], "compyute.Tensor.transpose": [[995, null]], "compyute.Tensor.var": [[996, null]], "compyute.Tensor.view": [[997, null]], "compyute.abs": [[998, null]], "compyute.all": [[999, null]], "compyute.allclose": [[1000, null]], "compyute.any": [[1001, null]], "compyute.append": [[1002, null]], "compyute.arange": [[1003, null]], "compyute.argmax": [[1004, null]], "compyute.backend": [[1101, null]], "compyute.backend.free_memory": [[0, null]], "compyute.backend.get_device_count": [[1, null]], "compyute.backend.gpu_available": [[2, null]], "compyute.backend.synchronize": [[3, null]], "compyute.bool_": [[1005, null]], "compyute.broadcast_to": [[1006, null]], "compyute.clip": [[1007, null]], "compyute.complex128": [[1008, null]], "compyute.complex64": [[1009, null]], "compyute.concat": [[1010, null]], "compyute.convolve1d_fft": [[1011, null]], "compyute.convolve2d_fft": [[1012, null]], "compyute.cos": [[1013, null]], "compyute.cosh": [[1014, null]], "compyute.cpu": [[1015, null]], "compyute.cuda": [[1016, null]], "compyute.debug": [[1017, null]], "compyute.diagonal": [[1018, null]], "compyute.dot": [[1019, null]], "compyute.einsum": [[1020, null]], "compyute.empty": [[1021, null]], "compyute.empty_like": [[1022, null]], "compyute.exp": [[1023, null]], "compyute.fft1d": [[1024, null]], "compyute.fft2d": [[1025, null]], "compyute.flatten": [[1026, null]], "compyute.flip": [[1027, null]], "compyute.float16": [[1028, null]], "compyute.float32": [[1029, null]], "compyute.float64": [[1030, null]], "compyute.full": [[1031, null]], "compyute.full_like": [[1032, null]], "compyute.get_diagonal": [[1033, null]], "compyute.histogram": [[1034, null]], "compyute.identity": [[1035, null]], "compyute.ifft1d": [[1036, null]], "compyute.ifft2d": [[1037, null]], "compyute.inner": [[1038, null]], "compyute.insert_dim": [[1039, null]], "compyute.int16": [[1040, null]], "compyute.int32": [[1041, null]], "compyute.int64": [[1042, null]], "compyute.int8": [[1043, null]], "compyute.is_nan": [[1044, null]], "compyute.linspace": [[1045, null]], "compyute.load": [[1046, null]], "compyute.log": [[1047, null]], "compyute.log10": [[1048, null]], "compyute.log2": [[1049, null]], "compyute.max": [[1050, null]], "compyute.maximum": [[1051, null]], "compyute.mean": [[1052, null]], "compyute.min": [[1053, null]], "compyute.minimum": [[1054, null]], "compyute.movedim": [[1055, null]], "compyute.nn": [[1102, null]], "compyute.nn.Accuracy": [[189, null]], "compyute.nn.Accuracy.__init__": [[190, null]], "compyute.nn.AvgPooling2D": [[191, null]], "compyute.nn.AvgPooling2D.__init__": [[192, null]], "compyute.nn.AvgPooling2D.backward": [[193, null]], "compyute.nn.AvgPooling2D.clean": [[194, null]], "compyute.nn.AvgPooling2D.forward": [[195, null]], "compyute.nn.AvgPooling2D.get_buffers": [[196, null]], "compyute.nn.AvgPooling2D.get_modules": [[197, null]], "compyute.nn.AvgPooling2D.get_parameters": [[198, null]], "compyute.nn.AvgPooling2D.get_state_dict": [[199, null]], "compyute.nn.AvgPooling2D.inference": [[200, null]], "compyute.nn.AvgPooling2D.load_state_dict": [[201, null]], "compyute.nn.AvgPooling2D.register_backward": [[202, null]], "compyute.nn.AvgPooling2D.register_forward": [[203, null]], "compyute.nn.AvgPooling2D.to_device": [[204, null]], "compyute.nn.AvgPooling2D.to_type": [[205, null]], "compyute.nn.AvgPooling2D.training": [[206, null]], "compyute.nn.AvgPooling2D.update_parameter_grad": [[207, null]], "compyute.nn.BCELoss": [[208, null]], "compyute.nn.BCELoss.__init__": [[209, null]], "compyute.nn.BCELoss.backward": [[210, null]], "compyute.nn.BCELoss.forward": [[211, null]], "compyute.nn.BCELoss.register_backward": [[212, null]], "compyute.nn.BCELoss.register_forward": [[213, null]], "compyute.nn.BatchNorm1D": [[214, null]], "compyute.nn.BatchNorm1D.__init__": [[215, null]], "compyute.nn.BatchNorm1D.backward": [[216, null]], "compyute.nn.BatchNorm1D.clean": [[217, null]], "compyute.nn.BatchNorm1D.forward": [[218, null]], "compyute.nn.BatchNorm1D.get_buffers": [[219, null]], "compyute.nn.BatchNorm1D.get_modules": [[220, null]], "compyute.nn.BatchNorm1D.get_parameters": [[221, null]], "compyute.nn.BatchNorm1D.get_state_dict": [[222, null]], "compyute.nn.BatchNorm1D.inference": [[223, null]], "compyute.nn.BatchNorm1D.load_state_dict": [[224, null]], "compyute.nn.BatchNorm1D.register_backward": [[225, null]], "compyute.nn.BatchNorm1D.register_forward": [[226, null]], "compyute.nn.BatchNorm1D.to_device": [[227, null]], "compyute.nn.BatchNorm1D.to_type": [[228, null]], "compyute.nn.BatchNorm1D.training": [[229, null]], "compyute.nn.BatchNorm1D.update_parameter_grad": [[230, null]], "compyute.nn.BatchNorm2D": [[231, null]], "compyute.nn.BatchNorm2D.__init__": [[232, null]], "compyute.nn.BatchNorm2D.backward": [[233, null]], "compyute.nn.BatchNorm2D.clean": [[234, null]], "compyute.nn.BatchNorm2D.forward": [[235, null]], "compyute.nn.BatchNorm2D.get_buffers": [[236, null]], "compyute.nn.BatchNorm2D.get_modules": [[237, null]], "compyute.nn.BatchNorm2D.get_parameters": [[238, null]], "compyute.nn.BatchNorm2D.get_state_dict": [[239, null]], "compyute.nn.BatchNorm2D.inference": [[240, null]], "compyute.nn.BatchNorm2D.load_state_dict": [[241, null]], "compyute.nn.BatchNorm2D.register_backward": [[242, null]], "compyute.nn.BatchNorm2D.register_forward": [[243, null]], "compyute.nn.BatchNorm2D.to_device": [[244, null]], "compyute.nn.BatchNorm2D.to_type": [[245, null]], "compyute.nn.BatchNorm2D.training": [[246, null]], "compyute.nn.BatchNorm2D.update_parameter_grad": [[247, null]], "compyute.nn.Buffer": [[248, null]], "compyute.nn.Buffer.__init__": [[249, null]], "compyute.nn.Buffer.abs": [[250, null]], "compyute.nn.Buffer.all": [[251, null]], "compyute.nn.Buffer.any": [[252, null]], "compyute.nn.Buffer.argmax": [[253, null]], "compyute.nn.Buffer.copy": [[254, null]], "compyute.nn.Buffer.imag": [[255, null]], "compyute.nn.Buffer.item": [[256, null]], "compyute.nn.Buffer.ito_device": [[257, null]], "compyute.nn.Buffer.ito_type": [[258, null]], "compyute.nn.Buffer.max": [[259, null]], "compyute.nn.Buffer.mean": [[260, null]], "compyute.nn.Buffer.min": [[261, null]], "compyute.nn.Buffer.permute": [[262, null]], "compyute.nn.Buffer.real": [[263, null]], "compyute.nn.Buffer.squeeze": [[264, null]], "compyute.nn.Buffer.std": [[265, null]], "compyute.nn.Buffer.sum": [[266, null]], "compyute.nn.Buffer.to_complex": [[267, null]], "compyute.nn.Buffer.to_contiguous": [[268, null]], "compyute.nn.Buffer.to_cpu": [[269, null]], "compyute.nn.Buffer.to_cuda": [[270, null]], "compyute.nn.Buffer.to_device": [[271, null]], "compyute.nn.Buffer.to_double": [[272, null]], "compyute.nn.Buffer.to_float": [[273, null]], "compyute.nn.Buffer.to_half": [[274, null]], "compyute.nn.Buffer.to_int": [[275, null]], "compyute.nn.Buffer.to_list": [[276, null]], "compyute.nn.Buffer.to_long": [[277, null]], "compyute.nn.Buffer.to_numpy": [[278, null]], "compyute.nn.Buffer.to_type": [[279, null]], "compyute.nn.Buffer.transpose": [[280, null]], "compyute.nn.Buffer.var": [[281, null]], "compyute.nn.Buffer.view": [[282, null]], "compyute.nn.Conv1D": [[283, null]], "compyute.nn.Conv1D.__init__": [[284, null]], "compyute.nn.Conv1D.backward": [[285, null]], "compyute.nn.Conv1D.clean": [[286, null]], "compyute.nn.Conv1D.forward": [[287, null]], "compyute.nn.Conv1D.get_buffers": [[288, null]], "compyute.nn.Conv1D.get_modules": [[289, null]], "compyute.nn.Conv1D.get_parameters": [[290, null]], "compyute.nn.Conv1D.get_state_dict": [[291, null]], "compyute.nn.Conv1D.inference": [[292, null]], "compyute.nn.Conv1D.load_state_dict": [[293, null]], "compyute.nn.Conv1D.register_backward": [[294, null]], "compyute.nn.Conv1D.register_forward": [[295, null]], "compyute.nn.Conv1D.to_device": [[296, null]], "compyute.nn.Conv1D.to_type": [[297, null]], "compyute.nn.Conv1D.training": [[298, null]], "compyute.nn.Conv1D.update_parameter_grad": [[299, null]], "compyute.nn.Conv1DBlock": [[300, null]], "compyute.nn.Conv1DBlock.__init__": [[301, null]], "compyute.nn.Conv1DBlock.add": [[302, null]], "compyute.nn.Conv1DBlock.backward": [[303, null]], "compyute.nn.Conv1DBlock.clean": [[304, null]], "compyute.nn.Conv1DBlock.forward": [[305, null]], "compyute.nn.Conv1DBlock.get_buffers": [[306, null]], "compyute.nn.Conv1DBlock.get_modules": [[307, null]], "compyute.nn.Conv1DBlock.get_parameters": [[308, null]], "compyute.nn.Conv1DBlock.get_state_dict": [[309, null]], "compyute.nn.Conv1DBlock.inference": [[310, null]], "compyute.nn.Conv1DBlock.load_state_dict": [[311, null]], "compyute.nn.Conv1DBlock.register_backward": [[312, null]], "compyute.nn.Conv1DBlock.register_forward": [[313, null]], "compyute.nn.Conv1DBlock.to_device": [[314, null]], "compyute.nn.Conv1DBlock.to_type": [[315, null]], "compyute.nn.Conv1DBlock.training": [[316, null]], "compyute.nn.Conv1DBlock.update_parameter_grad": [[317, null]], "compyute.nn.Conv2D": [[318, null]], "compyute.nn.Conv2D.__init__": [[319, null]], "compyute.nn.Conv2D.backward": [[320, null]], "compyute.nn.Conv2D.clean": [[321, null]], "compyute.nn.Conv2D.forward": [[322, null]], "compyute.nn.Conv2D.get_buffers": [[323, null]], "compyute.nn.Conv2D.get_modules": [[324, null]], "compyute.nn.Conv2D.get_parameters": [[325, null]], "compyute.nn.Conv2D.get_state_dict": [[326, null]], "compyute.nn.Conv2D.inference": [[327, null]], "compyute.nn.Conv2D.load_state_dict": [[328, null]], "compyute.nn.Conv2D.register_backward": [[329, null]], "compyute.nn.Conv2D.register_forward": [[330, null]], "compyute.nn.Conv2D.to_device": [[331, null]], "compyute.nn.Conv2D.to_type": [[332, null]], "compyute.nn.Conv2D.training": [[333, null]], "compyute.nn.Conv2D.update_parameter_grad": [[334, null]], "compyute.nn.Conv2DBlock": [[335, null]], "compyute.nn.Conv2DBlock.__init__": [[336, null]], "compyute.nn.Conv2DBlock.add": [[337, null]], "compyute.nn.Conv2DBlock.backward": [[338, null]], "compyute.nn.Conv2DBlock.clean": [[339, null]], "compyute.nn.Conv2DBlock.forward": [[340, null]], "compyute.nn.Conv2DBlock.get_buffers": [[341, null]], "compyute.nn.Conv2DBlock.get_modules": [[342, null]], "compyute.nn.Conv2DBlock.get_parameters": [[343, null]], "compyute.nn.Conv2DBlock.get_state_dict": [[344, null]], "compyute.nn.Conv2DBlock.inference": [[345, null]], "compyute.nn.Conv2DBlock.load_state_dict": [[346, null]], "compyute.nn.Conv2DBlock.register_backward": [[347, null]], "compyute.nn.Conv2DBlock.register_forward": [[348, null]], "compyute.nn.Conv2DBlock.to_device": [[349, null]], "compyute.nn.Conv2DBlock.to_type": [[350, null]], "compyute.nn.Conv2DBlock.training": [[351, null]], "compyute.nn.Conv2DBlock.update_parameter_grad": [[352, null]], "compyute.nn.ConvTranspose1D": [[353, null]], "compyute.nn.ConvTranspose1D.__init__": [[354, null]], "compyute.nn.ConvTranspose1D.backward": [[355, null]], "compyute.nn.ConvTranspose1D.clean": [[356, null]], "compyute.nn.ConvTranspose1D.forward": [[357, null]], "compyute.nn.ConvTranspose1D.get_buffers": [[358, null]], "compyute.nn.ConvTranspose1D.get_modules": [[359, null]], "compyute.nn.ConvTranspose1D.get_parameters": [[360, null]], "compyute.nn.ConvTranspose1D.get_state_dict": [[361, null]], "compyute.nn.ConvTranspose1D.inference": [[362, null]], "compyute.nn.ConvTranspose1D.load_state_dict": [[363, null]], "compyute.nn.ConvTranspose1D.register_backward": [[364, null]], "compyute.nn.ConvTranspose1D.register_forward": [[365, null]], "compyute.nn.ConvTranspose1D.to_device": [[366, null]], "compyute.nn.ConvTranspose1D.to_type": [[367, null]], "compyute.nn.ConvTranspose1D.training": [[368, null]], "compyute.nn.ConvTranspose1D.update_parameter_grad": [[369, null]], "compyute.nn.ConvTranspose2D": [[370, null]], "compyute.nn.ConvTranspose2D.__init__": [[371, null]], "compyute.nn.ConvTranspose2D.backward": [[372, null]], "compyute.nn.ConvTranspose2D.clean": [[373, null]], "compyute.nn.ConvTranspose2D.forward": [[374, null]], "compyute.nn.ConvTranspose2D.get_buffers": [[375, null]], "compyute.nn.ConvTranspose2D.get_modules": [[376, null]], "compyute.nn.ConvTranspose2D.get_parameters": [[377, null]], "compyute.nn.ConvTranspose2D.get_state_dict": [[378, null]], "compyute.nn.ConvTranspose2D.inference": [[379, null]], "compyute.nn.ConvTranspose2D.load_state_dict": [[380, null]], "compyute.nn.ConvTranspose2D.register_backward": [[381, null]], "compyute.nn.ConvTranspose2D.register_forward": [[382, null]], "compyute.nn.ConvTranspose2D.to_device": [[383, null]], "compyute.nn.ConvTranspose2D.to_type": [[384, null]], "compyute.nn.ConvTranspose2D.training": [[385, null]], "compyute.nn.ConvTranspose2D.update_parameter_grad": [[386, null]], "compyute.nn.CrossEntropyLoss": [[387, null]], "compyute.nn.CrossEntropyLoss.__init__": [[388, null]], "compyute.nn.CrossEntropyLoss.backward": [[389, null]], "compyute.nn.CrossEntropyLoss.forward": [[390, null]], "compyute.nn.CrossEntropyLoss.register_backward": [[391, null]], "compyute.nn.CrossEntropyLoss.register_forward": [[392, null]], "compyute.nn.DenseBlock": [[393, null]], "compyute.nn.DenseBlock.__init__": [[394, null]], "compyute.nn.DenseBlock.add": [[395, null]], "compyute.nn.DenseBlock.backward": [[396, null]], "compyute.nn.DenseBlock.clean": [[397, null]], "compyute.nn.DenseBlock.forward": [[398, null]], "compyute.nn.DenseBlock.get_buffers": [[399, null]], "compyute.nn.DenseBlock.get_modules": [[400, null]], "compyute.nn.DenseBlock.get_parameters": [[401, null]], "compyute.nn.DenseBlock.get_state_dict": [[402, null]], "compyute.nn.DenseBlock.inference": [[403, null]], "compyute.nn.DenseBlock.load_state_dict": [[404, null]], "compyute.nn.DenseBlock.register_backward": [[405, null]], "compyute.nn.DenseBlock.register_forward": [[406, null]], "compyute.nn.DenseBlock.to_device": [[407, null]], "compyute.nn.DenseBlock.to_type": [[408, null]], "compyute.nn.DenseBlock.training": [[409, null]], "compyute.nn.DenseBlock.update_parameter_grad": [[410, null]], "compyute.nn.DiceLoss": [[411, null]], "compyute.nn.DiceLoss.__init__": [[412, null]], "compyute.nn.DiceLoss.backward": [[413, null]], "compyute.nn.DiceLoss.forward": [[414, null]], "compyute.nn.DiceLoss.register_backward": [[415, null]], "compyute.nn.DiceLoss.register_forward": [[416, null]], "compyute.nn.Dropout": [[417, null]], "compyute.nn.Dropout.__init__": [[418, null]], "compyute.nn.Dropout.backward": [[419, null]], "compyute.nn.Dropout.clean": [[420, null]], "compyute.nn.Dropout.forward": [[421, null]], "compyute.nn.Dropout.get_buffers": [[422, null]], "compyute.nn.Dropout.get_modules": [[423, null]], "compyute.nn.Dropout.get_parameters": [[424, null]], "compyute.nn.Dropout.get_state_dict": [[425, null]], "compyute.nn.Dropout.inference": [[426, null]], "compyute.nn.Dropout.load_state_dict": [[427, null]], "compyute.nn.Dropout.register_backward": [[428, null]], "compyute.nn.Dropout.register_forward": [[429, null]], "compyute.nn.Dropout.to_device": [[430, null]], "compyute.nn.Dropout.to_type": [[431, null]], "compyute.nn.Dropout.training": [[432, null]], "compyute.nn.Dropout.update_parameter_grad": [[433, null]], "compyute.nn.Embedding": [[434, null]], "compyute.nn.Embedding.__init__": [[435, null]], "compyute.nn.Embedding.backward": [[436, null]], "compyute.nn.Embedding.clean": [[437, null]], "compyute.nn.Embedding.forward": [[438, null]], "compyute.nn.Embedding.get_buffers": [[439, null]], "compyute.nn.Embedding.get_modules": [[440, null]], "compyute.nn.Embedding.get_parameters": [[441, null]], "compyute.nn.Embedding.get_state_dict": [[442, null]], "compyute.nn.Embedding.inference": [[443, null]], "compyute.nn.Embedding.load_state_dict": [[444, null]], "compyute.nn.Embedding.register_backward": [[445, null]], "compyute.nn.Embedding.register_forward": [[446, null]], "compyute.nn.Embedding.to_device": [[447, null]], "compyute.nn.Embedding.to_type": [[448, null]], "compyute.nn.Embedding.training": [[449, null]], "compyute.nn.Embedding.update_parameter_grad": [[450, null]], "compyute.nn.FastGELU": [[451, null]], "compyute.nn.FastGELU.__init__": [[452, null]], "compyute.nn.FastGELU.backward": [[453, null]], "compyute.nn.FastGELU.clean": [[454, null]], "compyute.nn.FastGELU.forward": [[455, null]], "compyute.nn.FastGELU.get_buffers": [[456, null]], "compyute.nn.FastGELU.get_modules": [[457, null]], "compyute.nn.FastGELU.get_parameters": [[458, null]], "compyute.nn.FastGELU.get_state_dict": [[459, null]], "compyute.nn.FastGELU.inference": [[460, null]], "compyute.nn.FastGELU.load_state_dict": [[461, null]], "compyute.nn.FastGELU.register_backward": [[462, null]], "compyute.nn.FastGELU.register_forward": [[463, null]], "compyute.nn.FastGELU.to_device": [[464, null]], "compyute.nn.FastGELU.to_type": [[465, null]], "compyute.nn.FastGELU.training": [[466, null]], "compyute.nn.FastGELU.update_parameter_grad": [[467, null]], "compyute.nn.Flatten": [[468, null]], "compyute.nn.Flatten.__init__": [[469, null]], "compyute.nn.Flatten.backward": [[470, null]], "compyute.nn.Flatten.clean": [[471, null]], "compyute.nn.Flatten.forward": [[472, null]], "compyute.nn.Flatten.get_buffers": [[473, null]], "compyute.nn.Flatten.get_modules": [[474, null]], "compyute.nn.Flatten.get_parameters": [[475, null]], "compyute.nn.Flatten.get_state_dict": [[476, null]], "compyute.nn.Flatten.inference": [[477, null]], "compyute.nn.Flatten.load_state_dict": [[478, null]], "compyute.nn.Flatten.register_backward": [[479, null]], "compyute.nn.Flatten.register_forward": [[480, null]], "compyute.nn.Flatten.to_device": [[481, null]], "compyute.nn.Flatten.to_type": [[482, null]], "compyute.nn.Flatten.training": [[483, null]], "compyute.nn.Flatten.update_parameter_grad": [[484, null]], "compyute.nn.Function": [[485, null]], "compyute.nn.Function.__init__": [[486, null]], "compyute.nn.Function.backward": [[487, null]], "compyute.nn.Function.forward": [[488, null]], "compyute.nn.FunctionContext": [[489, null]], "compyute.nn.FunctionContext.__init__": [[490, null]], "compyute.nn.FunctionContext.add": [[491, null]], "compyute.nn.FunctionContext.get": [[492, null]], "compyute.nn.GELU": [[493, null]], "compyute.nn.GELU.__init__": [[494, null]], "compyute.nn.GELU.backward": [[495, null]], "compyute.nn.GELU.clean": [[496, null]], "compyute.nn.GELU.forward": [[497, null]], "compyute.nn.GELU.get_buffers": [[498, null]], "compyute.nn.GELU.get_modules": [[499, null]], "compyute.nn.GELU.get_parameters": [[500, null]], "compyute.nn.GELU.get_state_dict": [[501, null]], "compyute.nn.GELU.inference": [[502, null]], "compyute.nn.GELU.load_state_dict": [[503, null]], "compyute.nn.GELU.register_backward": [[504, null]], "compyute.nn.GELU.register_forward": [[505, null]], "compyute.nn.GELU.to_device": [[506, null]], "compyute.nn.GELU.to_type": [[507, null]], "compyute.nn.GELU.training": [[508, null]], "compyute.nn.GELU.update_parameter_grad": [[509, null]], "compyute.nn.GRU": [[510, null]], "compyute.nn.GRU.__init__": [[511, null]], "compyute.nn.GRU.backward": [[512, null]], "compyute.nn.GRU.clean": [[513, null]], "compyute.nn.GRU.forward": [[514, null]], "compyute.nn.GRU.get_buffers": [[515, null]], "compyute.nn.GRU.get_modules": [[516, null]], "compyute.nn.GRU.get_parameters": [[517, null]], "compyute.nn.GRU.get_state_dict": [[518, null]], "compyute.nn.GRU.inference": [[519, null]], "compyute.nn.GRU.load_state_dict": [[520, null]], "compyute.nn.GRU.register_backward": [[521, null]], "compyute.nn.GRU.register_forward": [[522, null]], "compyute.nn.GRU.to_device": [[523, null]], "compyute.nn.GRU.to_type": [[524, null]], "compyute.nn.GRU.training": [[525, null]], "compyute.nn.GRU.update_parameter_grad": [[526, null]], "compyute.nn.Identity": [[527, null]], "compyute.nn.Identity.__init__": [[528, null]], "compyute.nn.Identity.backward": [[529, null]], "compyute.nn.Identity.clean": [[530, null]], "compyute.nn.Identity.forward": [[531, null]], "compyute.nn.Identity.get_buffers": [[532, null]], "compyute.nn.Identity.get_modules": [[533, null]], "compyute.nn.Identity.get_parameters": [[534, null]], "compyute.nn.Identity.get_state_dict": [[535, null]], "compyute.nn.Identity.inference": [[536, null]], "compyute.nn.Identity.load_state_dict": [[537, null]], "compyute.nn.Identity.register_backward": [[538, null]], "compyute.nn.Identity.register_forward": [[539, null]], "compyute.nn.Identity.to_device": [[540, null]], "compyute.nn.Identity.to_type": [[541, null]], "compyute.nn.Identity.training": [[542, null]], "compyute.nn.Identity.update_parameter_grad": [[543, null]], "compyute.nn.LSTM": [[544, null]], "compyute.nn.LSTM.__init__": [[545, null]], "compyute.nn.LSTM.backward": [[546, null]], "compyute.nn.LSTM.clean": [[547, null]], "compyute.nn.LSTM.forward": [[548, null]], "compyute.nn.LSTM.get_buffers": [[549, null]], "compyute.nn.LSTM.get_modules": [[550, null]], "compyute.nn.LSTM.get_parameters": [[551, null]], "compyute.nn.LSTM.get_state_dict": [[552, null]], "compyute.nn.LSTM.inference": [[553, null]], "compyute.nn.LSTM.load_state_dict": [[554, null]], "compyute.nn.LSTM.register_backward": [[555, null]], "compyute.nn.LSTM.register_forward": [[556, null]], "compyute.nn.LSTM.to_device": [[557, null]], "compyute.nn.LSTM.to_type": [[558, null]], "compyute.nn.LSTM.training": [[559, null]], "compyute.nn.LSTM.update_parameter_grad": [[560, null]], "compyute.nn.LayerNorm": [[561, null]], "compyute.nn.LayerNorm.__init__": [[562, null]], "compyute.nn.LayerNorm.backward": [[563, null]], "compyute.nn.LayerNorm.clean": [[564, null]], "compyute.nn.LayerNorm.forward": [[565, null]], "compyute.nn.LayerNorm.get_buffers": [[566, null]], "compyute.nn.LayerNorm.get_modules": [[567, null]], "compyute.nn.LayerNorm.get_parameters": [[568, null]], "compyute.nn.LayerNorm.get_state_dict": [[569, null]], "compyute.nn.LayerNorm.inference": [[570, null]], "compyute.nn.LayerNorm.load_state_dict": [[571, null]], "compyute.nn.LayerNorm.register_backward": [[572, null]], "compyute.nn.LayerNorm.register_forward": [[573, null]], "compyute.nn.LayerNorm.to_device": [[574, null]], "compyute.nn.LayerNorm.to_type": [[575, null]], "compyute.nn.LayerNorm.training": [[576, null]], "compyute.nn.LayerNorm.update_parameter_grad": [[577, null]], "compyute.nn.LeakyReLU": [[578, null]], "compyute.nn.LeakyReLU.__init__": [[579, null]], "compyute.nn.LeakyReLU.backward": [[580, null]], "compyute.nn.LeakyReLU.clean": [[581, null]], "compyute.nn.LeakyReLU.forward": [[582, null]], "compyute.nn.LeakyReLU.get_buffers": [[583, null]], "compyute.nn.LeakyReLU.get_modules": [[584, null]], "compyute.nn.LeakyReLU.get_parameters": [[585, null]], "compyute.nn.LeakyReLU.get_state_dict": [[586, null]], "compyute.nn.LeakyReLU.inference": [[587, null]], "compyute.nn.LeakyReLU.load_state_dict": [[588, null]], "compyute.nn.LeakyReLU.register_backward": [[589, null]], "compyute.nn.LeakyReLU.register_forward": [[590, null]], "compyute.nn.LeakyReLU.to_device": [[591, null]], "compyute.nn.LeakyReLU.to_type": [[592, null]], "compyute.nn.LeakyReLU.training": [[593, null]], "compyute.nn.LeakyReLU.update_parameter_grad": [[594, null]], "compyute.nn.Linear": [[595, null]], "compyute.nn.Linear.__init__": [[596, null]], "compyute.nn.Linear.backward": [[597, null]], "compyute.nn.Linear.clean": [[598, null]], "compyute.nn.Linear.forward": [[599, null]], "compyute.nn.Linear.get_buffers": [[600, null]], "compyute.nn.Linear.get_modules": [[601, null]], "compyute.nn.Linear.get_parameters": [[602, null]], "compyute.nn.Linear.get_state_dict": [[603, null]], "compyute.nn.Linear.inference": [[604, null]], "compyute.nn.Linear.load_state_dict": [[605, null]], "compyute.nn.Linear.register_backward": [[606, null]], "compyute.nn.Linear.register_forward": [[607, null]], "compyute.nn.Linear.to_device": [[608, null]], "compyute.nn.Linear.to_type": [[609, null]], "compyute.nn.Linear.training": [[610, null]], "compyute.nn.Linear.update_parameter_grad": [[611, null]], "compyute.nn.Loss": [[612, null]], "compyute.nn.Loss.__init__": [[613, null]], "compyute.nn.Loss.backward": [[614, null]], "compyute.nn.Loss.forward": [[615, null]], "compyute.nn.Loss.register_backward": [[616, null]], "compyute.nn.Loss.register_forward": [[617, null]], "compyute.nn.MSELoss": [[618, null]], "compyute.nn.MSELoss.__init__": [[619, null]], "compyute.nn.MSELoss.backward": [[620, null]], "compyute.nn.MSELoss.forward": [[621, null]], "compyute.nn.MSELoss.register_backward": [[622, null]], "compyute.nn.MSELoss.register_forward": [[623, null]], "compyute.nn.MaxPooling2D": [[624, null]], "compyute.nn.MaxPooling2D.__init__": [[625, null]], "compyute.nn.MaxPooling2D.backward": [[626, null]], "compyute.nn.MaxPooling2D.clean": [[627, null]], "compyute.nn.MaxPooling2D.forward": [[628, null]], "compyute.nn.MaxPooling2D.get_buffers": [[629, null]], "compyute.nn.MaxPooling2D.get_modules": [[630, null]], "compyute.nn.MaxPooling2D.get_parameters": [[631, null]], "compyute.nn.MaxPooling2D.get_state_dict": [[632, null]], "compyute.nn.MaxPooling2D.inference": [[633, null]], "compyute.nn.MaxPooling2D.load_state_dict": [[634, null]], "compyute.nn.MaxPooling2D.register_backward": [[635, null]], "compyute.nn.MaxPooling2D.register_forward": [[636, null]], "compyute.nn.MaxPooling2D.to_device": [[637, null]], "compyute.nn.MaxPooling2D.to_type": [[638, null]], "compyute.nn.MaxPooling2D.training": [[639, null]], "compyute.nn.MaxPooling2D.update_parameter_grad": [[640, null]], "compyute.nn.Metric": [[641, null]], "compyute.nn.Metric.__init__": [[642, null]], "compyute.nn.Module": [[643, null]], "compyute.nn.Module.__init__": [[644, null]], "compyute.nn.Module.backward": [[645, null]], "compyute.nn.Module.clean": [[646, null]], "compyute.nn.Module.forward": [[647, null]], "compyute.nn.Module.get_buffers": [[648, null]], "compyute.nn.Module.get_modules": [[649, null]], "compyute.nn.Module.get_parameters": [[650, null]], "compyute.nn.Module.get_state_dict": [[651, null]], "compyute.nn.Module.inference": [[652, null]], "compyute.nn.Module.load_state_dict": [[653, null]], "compyute.nn.Module.register_backward": [[654, null]], "compyute.nn.Module.register_forward": [[655, null]], "compyute.nn.Module.to_device": [[656, null]], "compyute.nn.Module.to_type": [[657, null]], "compyute.nn.Module.training": [[658, null]], "compyute.nn.Module.update_parameter_grad": [[659, null]], "compyute.nn.ModuleList": [[660, null]], "compyute.nn.ModuleList.__init__": [[661, null]], "compyute.nn.ModuleList.append": [[662, null]], "compyute.nn.ModuleList.clear": [[663, null]], "compyute.nn.ModuleList.copy": [[664, null]], "compyute.nn.ModuleList.count": [[665, null]], "compyute.nn.ModuleList.extend": [[666, null]], "compyute.nn.ModuleList.index": [[667, null]], "compyute.nn.ModuleList.insert": [[668, null]], "compyute.nn.ModuleList.pop": [[669, null]], "compyute.nn.ModuleList.remove": [[670, null]], "compyute.nn.ModuleList.reverse": [[671, null]], "compyute.nn.ModuleList.sort": [[672, null]], "compyute.nn.ParallelAdd": [[673, null]], "compyute.nn.ParallelAdd.__init__": [[674, null]], "compyute.nn.ParallelAdd.backward": [[675, null]], "compyute.nn.ParallelAdd.clean": [[676, null]], "compyute.nn.ParallelAdd.forward": [[677, null]], "compyute.nn.ParallelAdd.get_buffers": [[678, null]], "compyute.nn.ParallelAdd.get_modules": [[679, null]], "compyute.nn.ParallelAdd.get_parameters": [[680, null]], "compyute.nn.ParallelAdd.get_state_dict": [[681, null]], "compyute.nn.ParallelAdd.inference": [[682, null]], "compyute.nn.ParallelAdd.load_state_dict": [[683, null]], "compyute.nn.ParallelAdd.register_backward": [[684, null]], "compyute.nn.ParallelAdd.register_forward": [[685, null]], "compyute.nn.ParallelAdd.to_device": [[686, null]], "compyute.nn.ParallelAdd.to_type": [[687, null]], "compyute.nn.ParallelAdd.training": [[688, null]], "compyute.nn.ParallelAdd.update_parameter_grad": [[689, null]], "compyute.nn.ParallelConcat": [[690, null]], "compyute.nn.ParallelConcat.__init__": [[691, null]], "compyute.nn.ParallelConcat.backward": [[692, null]], "compyute.nn.ParallelConcat.clean": [[693, null]], "compyute.nn.ParallelConcat.forward": [[694, null]], "compyute.nn.ParallelConcat.get_buffers": [[695, null]], "compyute.nn.ParallelConcat.get_modules": [[696, null]], "compyute.nn.ParallelConcat.get_parameters": [[697, null]], "compyute.nn.ParallelConcat.get_state_dict": [[698, null]], "compyute.nn.ParallelConcat.inference": [[699, null]], "compyute.nn.ParallelConcat.load_state_dict": [[700, null]], "compyute.nn.ParallelConcat.register_backward": [[701, null]], "compyute.nn.ParallelConcat.register_forward": [[702, null]], "compyute.nn.ParallelConcat.to_device": [[703, null]], "compyute.nn.ParallelConcat.to_type": [[704, null]], "compyute.nn.ParallelConcat.training": [[705, null]], "compyute.nn.ParallelConcat.update_parameter_grad": [[706, null]], "compyute.nn.Parameter": [[707, null]], "compyute.nn.Parameter.__init__": [[708, null]], "compyute.nn.Parameter.abs": [[709, null]], "compyute.nn.Parameter.all": [[710, null]], "compyute.nn.Parameter.any": [[711, null]], "compyute.nn.Parameter.argmax": [[712, null]], "compyute.nn.Parameter.copy": [[713, null]], "compyute.nn.Parameter.imag": [[714, null]], "compyute.nn.Parameter.item": [[715, null]], "compyute.nn.Parameter.ito_device": [[716, null]], "compyute.nn.Parameter.ito_type": [[717, null]], "compyute.nn.Parameter.max": [[718, null]], "compyute.nn.Parameter.mean": [[719, null]], "compyute.nn.Parameter.min": [[720, null]], "compyute.nn.Parameter.permute": [[721, null]], "compyute.nn.Parameter.real": [[722, null]], "compyute.nn.Parameter.squeeze": [[723, null]], "compyute.nn.Parameter.std": [[724, null]], "compyute.nn.Parameter.sum": [[725, null]], "compyute.nn.Parameter.to_complex": [[726, null]], "compyute.nn.Parameter.to_contiguous": [[727, null]], "compyute.nn.Parameter.to_cpu": [[728, null]], "compyute.nn.Parameter.to_cuda": [[729, null]], "compyute.nn.Parameter.to_device": [[730, null]], "compyute.nn.Parameter.to_double": [[731, null]], "compyute.nn.Parameter.to_float": [[732, null]], "compyute.nn.Parameter.to_half": [[733, null]], "compyute.nn.Parameter.to_int": [[734, null]], "compyute.nn.Parameter.to_list": [[735, null]], "compyute.nn.Parameter.to_long": [[736, null]], "compyute.nn.Parameter.to_numpy": [[737, null]], "compyute.nn.Parameter.to_type": [[738, null]], "compyute.nn.Parameter.transpose": [[739, null]], "compyute.nn.Parameter.var": [[740, null]], "compyute.nn.Parameter.view": [[741, null]], "compyute.nn.R2": [[742, null]], "compyute.nn.R2.__init__": [[743, null]], "compyute.nn.RMSNorm": [[744, null]], "compyute.nn.RMSNorm.__init__": [[745, null]], "compyute.nn.RMSNorm.backward": [[746, null]], "compyute.nn.RMSNorm.clean": [[747, null]], "compyute.nn.RMSNorm.forward": [[748, null]], "compyute.nn.RMSNorm.get_buffers": [[749, null]], "compyute.nn.RMSNorm.get_modules": [[750, null]], "compyute.nn.RMSNorm.get_parameters": [[751, null]], "compyute.nn.RMSNorm.get_state_dict": [[752, null]], "compyute.nn.RMSNorm.inference": [[753, null]], "compyute.nn.RMSNorm.load_state_dict": [[754, null]], "compyute.nn.RMSNorm.register_backward": [[755, null]], "compyute.nn.RMSNorm.register_forward": [[756, null]], "compyute.nn.RMSNorm.to_device": [[757, null]], "compyute.nn.RMSNorm.to_type": [[758, null]], "compyute.nn.RMSNorm.training": [[759, null]], "compyute.nn.RMSNorm.update_parameter_grad": [[760, null]], "compyute.nn.ReLU": [[761, null]], "compyute.nn.ReLU.__init__": [[762, null]], "compyute.nn.ReLU.backward": [[763, null]], "compyute.nn.ReLU.clean": [[764, null]], "compyute.nn.ReLU.forward": [[765, null]], "compyute.nn.ReLU.get_buffers": [[766, null]], "compyute.nn.ReLU.get_modules": [[767, null]], "compyute.nn.ReLU.get_parameters": [[768, null]], "compyute.nn.ReLU.get_state_dict": [[769, null]], "compyute.nn.ReLU.inference": [[770, null]], "compyute.nn.ReLU.load_state_dict": [[771, null]], "compyute.nn.ReLU.register_backward": [[772, null]], "compyute.nn.ReLU.register_forward": [[773, null]], "compyute.nn.ReLU.to_device": [[774, null]], "compyute.nn.ReLU.to_type": [[775, null]], "compyute.nn.ReLU.training": [[776, null]], "compyute.nn.ReLU.update_parameter_grad": [[777, null]], "compyute.nn.Recurrent": [[778, null]], "compyute.nn.Recurrent.__init__": [[779, null]], "compyute.nn.Recurrent.backward": [[780, null]], "compyute.nn.Recurrent.clean": [[781, null]], "compyute.nn.Recurrent.forward": [[782, null]], "compyute.nn.Recurrent.get_buffers": [[783, null]], "compyute.nn.Recurrent.get_modules": [[784, null]], "compyute.nn.Recurrent.get_parameters": [[785, null]], "compyute.nn.Recurrent.get_state_dict": [[786, null]], "compyute.nn.Recurrent.inference": [[787, null]], "compyute.nn.Recurrent.load_state_dict": [[788, null]], "compyute.nn.Recurrent.register_backward": [[789, null]], "compyute.nn.Recurrent.register_forward": [[790, null]], "compyute.nn.Recurrent.to_device": [[791, null]], "compyute.nn.Recurrent.to_type": [[792, null]], "compyute.nn.Recurrent.training": [[793, null]], "compyute.nn.Recurrent.update_parameter_grad": [[794, null]], "compyute.nn.Reshape": [[795, null]], "compyute.nn.Reshape.__init__": [[796, null]], "compyute.nn.Reshape.backward": [[797, null]], "compyute.nn.Reshape.clean": [[798, null]], "compyute.nn.Reshape.forward": [[799, null]], "compyute.nn.Reshape.get_buffers": [[800, null]], "compyute.nn.Reshape.get_modules": [[801, null]], "compyute.nn.Reshape.get_parameters": [[802, null]], "compyute.nn.Reshape.get_state_dict": [[803, null]], "compyute.nn.Reshape.inference": [[804, null]], "compyute.nn.Reshape.load_state_dict": [[805, null]], "compyute.nn.Reshape.register_backward": [[806, null]], "compyute.nn.Reshape.register_forward": [[807, null]], "compyute.nn.Reshape.to_device": [[808, null]], "compyute.nn.Reshape.to_type": [[809, null]], "compyute.nn.Reshape.training": [[810, null]], "compyute.nn.Reshape.update_parameter_grad": [[811, null]], "compyute.nn.ResidualConnection": [[812, null]], "compyute.nn.ResidualConnection.__init__": [[813, null]], "compyute.nn.ResidualConnection.backward": [[814, null]], "compyute.nn.ResidualConnection.clean": [[815, null]], "compyute.nn.ResidualConnection.forward": [[816, null]], "compyute.nn.ResidualConnection.get_buffers": [[817, null]], "compyute.nn.ResidualConnection.get_modules": [[818, null]], "compyute.nn.ResidualConnection.get_parameters": [[819, null]], "compyute.nn.ResidualConnection.get_state_dict": [[820, null]], "compyute.nn.ResidualConnection.inference": [[821, null]], "compyute.nn.ResidualConnection.load_state_dict": [[822, null]], "compyute.nn.ResidualConnection.register_backward": [[823, null]], "compyute.nn.ResidualConnection.register_forward": [[824, null]], "compyute.nn.ResidualConnection.to_device": [[825, null]], "compyute.nn.ResidualConnection.to_type": [[826, null]], "compyute.nn.ResidualConnection.training": [[827, null]], "compyute.nn.ResidualConnection.update_parameter_grad": [[828, null]], "compyute.nn.Sequential": [[829, null]], "compyute.nn.Sequential.__init__": [[830, null]], "compyute.nn.Sequential.add": [[831, null]], "compyute.nn.Sequential.backward": [[832, null]], "compyute.nn.Sequential.clean": [[833, null]], "compyute.nn.Sequential.forward": [[834, null]], "compyute.nn.Sequential.get_buffers": [[835, null]], "compyute.nn.Sequential.get_modules": [[836, null]], "compyute.nn.Sequential.get_parameters": [[837, null]], "compyute.nn.Sequential.get_state_dict": [[838, null]], "compyute.nn.Sequential.inference": [[839, null]], "compyute.nn.Sequential.load_state_dict": [[840, null]], "compyute.nn.Sequential.register_backward": [[841, null]], "compyute.nn.Sequential.register_forward": [[842, null]], "compyute.nn.Sequential.to_device": [[843, null]], "compyute.nn.Sequential.to_type": [[844, null]], "compyute.nn.Sequential.training": [[845, null]], "compyute.nn.Sequential.update_parameter_grad": [[846, null]], "compyute.nn.SiLU": [[847, null]], "compyute.nn.SiLU.__init__": [[848, null]], "compyute.nn.SiLU.backward": [[849, null]], "compyute.nn.SiLU.clean": [[850, null]], "compyute.nn.SiLU.forward": [[851, null]], "compyute.nn.SiLU.get_buffers": [[852, null]], "compyute.nn.SiLU.get_modules": [[853, null]], "compyute.nn.SiLU.get_parameters": [[854, null]], "compyute.nn.SiLU.get_state_dict": [[855, null]], "compyute.nn.SiLU.inference": [[856, null]], "compyute.nn.SiLU.load_state_dict": [[857, null]], "compyute.nn.SiLU.register_backward": [[858, null]], "compyute.nn.SiLU.register_forward": [[859, null]], "compyute.nn.SiLU.to_device": [[860, null]], "compyute.nn.SiLU.to_type": [[861, null]], "compyute.nn.SiLU.training": [[862, null]], "compyute.nn.SiLU.update_parameter_grad": [[863, null]], "compyute.nn.Sigmoid": [[864, null]], "compyute.nn.Sigmoid.__init__": [[865, null]], "compyute.nn.Sigmoid.backward": [[866, null]], "compyute.nn.Sigmoid.clean": [[867, null]], "compyute.nn.Sigmoid.forward": [[868, null]], "compyute.nn.Sigmoid.get_buffers": [[869, null]], "compyute.nn.Sigmoid.get_modules": [[870, null]], "compyute.nn.Sigmoid.get_parameters": [[871, null]], "compyute.nn.Sigmoid.get_state_dict": [[872, null]], "compyute.nn.Sigmoid.inference": [[873, null]], "compyute.nn.Sigmoid.load_state_dict": [[874, null]], "compyute.nn.Sigmoid.register_backward": [[875, null]], "compyute.nn.Sigmoid.register_forward": [[876, null]], "compyute.nn.Sigmoid.to_device": [[877, null]], "compyute.nn.Sigmoid.to_type": [[878, null]], "compyute.nn.Sigmoid.training": [[879, null]], "compyute.nn.Sigmoid.update_parameter_grad": [[880, null]], "compyute.nn.Slice": [[881, null]], "compyute.nn.Slice.__init__": [[882, null]], "compyute.nn.Slice.backward": [[883, null]], "compyute.nn.Slice.clean": [[884, null]], "compyute.nn.Slice.forward": [[885, null]], "compyute.nn.Slice.get_buffers": [[886, null]], "compyute.nn.Slice.get_modules": [[887, null]], "compyute.nn.Slice.get_parameters": [[888, null]], "compyute.nn.Slice.get_state_dict": [[889, null]], "compyute.nn.Slice.inference": [[890, null]], "compyute.nn.Slice.load_state_dict": [[891, null]], "compyute.nn.Slice.register_backward": [[892, null]], "compyute.nn.Slice.register_forward": [[893, null]], "compyute.nn.Slice.to_device": [[894, null]], "compyute.nn.Slice.to_type": [[895, null]], "compyute.nn.Slice.training": [[896, null]], "compyute.nn.Slice.update_parameter_grad": [[897, null]], "compyute.nn.Softmax": [[898, null]], "compyute.nn.Softmax.__init__": [[899, null]], "compyute.nn.Softmax.backward": [[900, null]], "compyute.nn.Softmax.clean": [[901, null]], "compyute.nn.Softmax.forward": [[902, null]], "compyute.nn.Softmax.get_buffers": [[903, null]], "compyute.nn.Softmax.get_modules": [[904, null]], "compyute.nn.Softmax.get_parameters": [[905, null]], "compyute.nn.Softmax.get_state_dict": [[906, null]], "compyute.nn.Softmax.inference": [[907, null]], "compyute.nn.Softmax.load_state_dict": [[908, null]], "compyute.nn.Softmax.register_backward": [[909, null]], "compyute.nn.Softmax.register_forward": [[910, null]], "compyute.nn.Softmax.to_device": [[911, null]], "compyute.nn.Softmax.to_type": [[912, null]], "compyute.nn.Softmax.training": [[913, null]], "compyute.nn.Softmax.update_parameter_grad": [[914, null]], "compyute.nn.Tanh": [[915, null]], "compyute.nn.Tanh.__init__": [[916, null]], "compyute.nn.Tanh.backward": [[917, null]], "compyute.nn.Tanh.clean": [[918, null]], "compyute.nn.Tanh.forward": [[919, null]], "compyute.nn.Tanh.get_buffers": [[920, null]], "compyute.nn.Tanh.get_modules": [[921, null]], "compyute.nn.Tanh.get_parameters": [[922, null]], "compyute.nn.Tanh.get_state_dict": [[923, null]], "compyute.nn.Tanh.inference": [[924, null]], "compyute.nn.Tanh.load_state_dict": [[925, null]], "compyute.nn.Tanh.register_backward": [[926, null]], "compyute.nn.Tanh.register_forward": [[927, null]], "compyute.nn.Tanh.to_device": [[928, null]], "compyute.nn.Tanh.to_type": [[929, null]], "compyute.nn.Tanh.training": [[930, null]], "compyute.nn.Tanh.update_parameter_grad": [[931, null]], "compyute.nn.Upsample2D": [[932, null]], "compyute.nn.Upsample2D.__init__": [[933, null]], "compyute.nn.Upsample2D.backward": [[934, null]], "compyute.nn.Upsample2D.clean": [[935, null]], "compyute.nn.Upsample2D.forward": [[936, null]], "compyute.nn.Upsample2D.get_buffers": [[937, null]], "compyute.nn.Upsample2D.get_modules": [[938, null]], "compyute.nn.Upsample2D.get_parameters": [[939, null]], "compyute.nn.Upsample2D.get_state_dict": [[940, null]], "compyute.nn.Upsample2D.inference": [[941, null]], "compyute.nn.Upsample2D.load_state_dict": [[942, null]], "compyute.nn.Upsample2D.register_backward": [[943, null]], "compyute.nn.Upsample2D.register_forward": [[944, null]], "compyute.nn.Upsample2D.to_device": [[945, null]], "compyute.nn.Upsample2D.to_type": [[946, null]], "compyute.nn.Upsample2D.training": [[947, null]], "compyute.nn.Upsample2D.update_parameter_grad": [[948, null]], "compyute.nn.functional": [[1103, null]], "compyute.nn.functional.accuracy_score": [[4, null]], "compyute.nn.functional.avgpooling2d": [[5, null]], "compyute.nn.functional.batchnorm1d": [[6, null]], "compyute.nn.functional.batchnorm2d": [[7, null]], "compyute.nn.functional.bce_loss": [[8, null]], "compyute.nn.functional.conv1d": [[9, null]], "compyute.nn.functional.conv2d": [[10, null]], "compyute.nn.functional.conv_transpose1d": [[11, null]], "compyute.nn.functional.conv_transpose2d": [[12, null]], "compyute.nn.functional.cross_entropy_loss": [[13, null]], "compyute.nn.functional.dice_loss": [[14, null]], "compyute.nn.functional.dilate1d": [[15, null]], "compyute.nn.functional.dilate2d": [[16, null]], "compyute.nn.functional.dropout": [[17, null]], "compyute.nn.functional.embedding": [[18, null]], "compyute.nn.functional.fast_gelu": [[19, null]], "compyute.nn.functional.gelu": [[20, null]], "compyute.nn.functional.gru": [[21, null]], "compyute.nn.functional.layernorm": [[22, null]], "compyute.nn.functional.leaky_relu": [[23, null]], "compyute.nn.functional.linear": [[24, null]], "compyute.nn.functional.lstm": [[25, null]], "compyute.nn.functional.maxpooling2d": [[26, null]], "compyute.nn.functional.mse_loss": [[27, null]], "compyute.nn.functional.pad1d": [[28, null]], "compyute.nn.functional.pad2d": [[29, null]], "compyute.nn.functional.r2_score": [[30, null]], "compyute.nn.functional.recurrent": [[31, null]], "compyute.nn.functional.relu": [[32, null]], "compyute.nn.functional.rmsnorm": [[33, null]], "compyute.nn.functional.sigmoid": [[34, null]], "compyute.nn.functional.silu": [[35, null]], "compyute.nn.functional.softmax": [[36, null]], "compyute.nn.functional.tanh": [[37, null]], "compyute.nn.functional.upsample2d": [[38, null]], "compyute.nn.optimizers": [[1104, null]], "compyute.nn.optimizers.Adam": [[39, null]], "compyute.nn.optimizers.Adam.__init__": [[40, null]], "compyute.nn.optimizers.Adam.get_state_dict": [[41, null]], "compyute.nn.optimizers.Adam.load_state_dict": [[42, null]], "compyute.nn.optimizers.Adam.reset_grads": [[43, null]], "compyute.nn.optimizers.Adam.set_parameters": [[44, null]], "compyute.nn.optimizers.Adam.step": [[45, null]], "compyute.nn.optimizers.AdamW": [[46, null]], "compyute.nn.optimizers.AdamW.__init__": [[47, null]], "compyute.nn.optimizers.AdamW.get_state_dict": [[48, null]], "compyute.nn.optimizers.AdamW.load_state_dict": [[49, null]], "compyute.nn.optimizers.AdamW.reset_grads": [[50, null]], "compyute.nn.optimizers.AdamW.set_parameters": [[51, null]], "compyute.nn.optimizers.AdamW.step": [[52, null]], "compyute.nn.optimizers.NAdam": [[53, null]], "compyute.nn.optimizers.NAdam.__init__": [[54, null]], "compyute.nn.optimizers.NAdam.get_state_dict": [[55, null]], "compyute.nn.optimizers.NAdam.load_state_dict": [[56, null]], "compyute.nn.optimizers.NAdam.reset_grads": [[57, null]], "compyute.nn.optimizers.NAdam.set_parameters": [[58, null]], "compyute.nn.optimizers.NAdam.step": [[59, null]], "compyute.nn.optimizers.Optimizer": [[60, null]], "compyute.nn.optimizers.Optimizer.__init__": [[61, null]], "compyute.nn.optimizers.Optimizer.get_state_dict": [[62, null]], "compyute.nn.optimizers.Optimizer.load_state_dict": [[63, null]], "compyute.nn.optimizers.Optimizer.reset_grads": [[64, null]], "compyute.nn.optimizers.Optimizer.set_parameters": [[65, null]], "compyute.nn.optimizers.Optimizer.step": [[66, null]], "compyute.nn.optimizers.SGD": [[67, null]], "compyute.nn.optimizers.SGD.__init__": [[68, null]], "compyute.nn.optimizers.SGD.get_state_dict": [[69, null]], "compyute.nn.optimizers.SGD.load_state_dict": [[70, null]], "compyute.nn.optimizers.SGD.reset_grads": [[71, null]], "compyute.nn.optimizers.SGD.set_parameters": [[72, null]], "compyute.nn.optimizers.SGD.step": [[73, null]], "compyute.nn.trainer": [[1105, null]], "compyute.nn.trainer.Trainer": [[154, null]], "compyute.nn.trainer.Trainer.__init__": [[155, null]], "compyute.nn.trainer.Trainer.evaluate_model": [[156, null]], "compyute.nn.trainer.Trainer.train": [[157, null]], "compyute.nn.trainer.callbacks": [[1106, null]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler": [[74, null]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.__init__": [[75, null]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_end": [[76, null]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_start": [[77, null]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_end": [[78, null]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_start": [[79, null]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_end": [[80, null]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_start": [[81, null]], "compyute.nn.trainer.callbacks.Callback": [[82, null]], "compyute.nn.trainer.callbacks.Callback.__init__": [[83, null]], "compyute.nn.trainer.callbacks.Callback.on_epoch_end": [[84, null]], "compyute.nn.trainer.callbacks.Callback.on_epoch_start": [[85, null]], "compyute.nn.trainer.callbacks.Callback.on_run_end": [[86, null]], "compyute.nn.trainer.callbacks.Callback.on_run_start": [[87, null]], "compyute.nn.trainer.callbacks.Callback.on_step_end": [[88, null]], "compyute.nn.trainer.callbacks.Callback.on_step_start": [[89, null]], "compyute.nn.trainer.callbacks.CosineLrScheduler": [[90, null]], "compyute.nn.trainer.callbacks.CosineLrScheduler.__init__": [[91, null]], "compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_end": [[92, null]], "compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_start": [[93, null]], "compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_end": [[94, null]], "compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_start": [[95, null]], "compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_end": [[96, null]], "compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_start": [[97, null]], "compyute.nn.trainer.callbacks.EarlyStopping": [[98, null]], "compyute.nn.trainer.callbacks.EarlyStopping.__init__": [[99, null]], "compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_end": [[100, null]], "compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_start": [[101, null]], "compyute.nn.trainer.callbacks.EarlyStopping.on_run_end": [[102, null]], "compyute.nn.trainer.callbacks.EarlyStopping.on_run_start": [[103, null]], "compyute.nn.trainer.callbacks.EarlyStopping.on_step_end": [[104, null]], "compyute.nn.trainer.callbacks.EarlyStopping.on_step_start": [[105, null]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler": [[106, null]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler.__init__": [[107, null]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_end": [[108, null]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_start": [[109, null]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_end": [[110, null]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_start": [[111, null]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_end": [[112, null]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_start": [[113, null]], "compyute.nn.trainer.callbacks.History": [[114, null]], "compyute.nn.trainer.callbacks.History.__init__": [[115, null]], "compyute.nn.trainer.callbacks.History.on_epoch_end": [[116, null]], "compyute.nn.trainer.callbacks.History.on_epoch_start": [[117, null]], "compyute.nn.trainer.callbacks.History.on_run_end": [[118, null]], "compyute.nn.trainer.callbacks.History.on_run_start": [[119, null]], "compyute.nn.trainer.callbacks.History.on_step_end": [[120, null]], "compyute.nn.trainer.callbacks.History.on_step_start": [[121, null]], "compyute.nn.trainer.callbacks.MultistepLrScheduler": [[122, null]], "compyute.nn.trainer.callbacks.MultistepLrScheduler.__init__": [[123, null]], "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_end": [[124, null]], "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_start": [[125, null]], "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_end": [[126, null]], "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_start": [[127, null]], "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_end": [[128, null]], "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_start": [[129, null]], "compyute.nn.trainer.callbacks.ProgressBar": [[130, null]], "compyute.nn.trainer.callbacks.ProgressBar.__init__": [[131, null]], "compyute.nn.trainer.callbacks.ProgressBar.on_epoch_end": [[132, null]], "compyute.nn.trainer.callbacks.ProgressBar.on_epoch_start": [[133, null]], "compyute.nn.trainer.callbacks.ProgressBar.on_run_end": [[134, null]], "compyute.nn.trainer.callbacks.ProgressBar.on_run_start": [[135, null]], "compyute.nn.trainer.callbacks.ProgressBar.on_step_end": [[136, null]], "compyute.nn.trainer.callbacks.ProgressBar.on_step_start": [[137, null]], "compyute.nn.trainer.callbacks.StepLrScheduler": [[138, null]], "compyute.nn.trainer.callbacks.StepLrScheduler.__init__": [[139, null]], "compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_end": [[140, null]], "compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_start": [[141, null]], "compyute.nn.trainer.callbacks.StepLrScheduler.on_run_end": [[142, null]], "compyute.nn.trainer.callbacks.StepLrScheduler.on_run_start": [[143, null]], "compyute.nn.trainer.callbacks.StepLrScheduler.on_step_end": [[144, null]], "compyute.nn.trainer.callbacks.StepLrScheduler.on_step_start": [[145, null]], "compyute.nn.trainer.callbacks.Tensorboard": [[146, null]], "compyute.nn.trainer.callbacks.Tensorboard.__init__": [[147, null]], "compyute.nn.trainer.callbacks.Tensorboard.on_epoch_end": [[148, null]], "compyute.nn.trainer.callbacks.Tensorboard.on_epoch_start": [[149, null]], "compyute.nn.trainer.callbacks.Tensorboard.on_run_end": [[150, null]], "compyute.nn.trainer.callbacks.Tensorboard.on_run_start": [[151, null]], "compyute.nn.trainer.callbacks.Tensorboard.on_step_end": [[152, null]], "compyute.nn.trainer.callbacks.Tensorboard.on_step_start": [[153, null]], "compyute.nn.utils": [[1107, null]], "compyute.nn.utils.Dataloader": [[184, null]], "compyute.nn.utils.Dataloader.__init__": [[185, null]], "compyute.nn.utils.batched": [[186, null]], "compyute.nn.utils.clip_grad_norm": [[187, null]], "compyute.nn.utils.get_module_summary": [[188, null]], "compyute.nn.utils.initializers": [[1108, null]], "compyute.nn.utils.initializers.init_kaiming_normal": [[158, null]], "compyute.nn.utils.initializers.init_kaiming_uniform": [[159, null]], "compyute.nn.utils.initializers.init_normal": [[160, null]], "compyute.nn.utils.initializers.init_ones": [[161, null]], "compyute.nn.utils.initializers.init_uniform": [[162, null]], "compyute.nn.utils.initializers.init_xavier_normal": [[163, null]], "compyute.nn.utils.initializers.init_xavier_uniform": [[164, null]], "compyute.nn.utils.initializers.init_zeros": [[165, null]], "compyute.nn.utils.lr_schedulers": [[1109, null]], "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler": [[166, null]], "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.__init__": [[167, null]], "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.step": [[168, null]], "compyute.nn.utils.lr_schedulers.CosineLrScheduler": [[169, null]], "compyute.nn.utils.lr_schedulers.CosineLrScheduler.__init__": [[170, null]], "compyute.nn.utils.lr_schedulers.CosineLrScheduler.step": [[171, null]], "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler": [[172, null]], "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.__init__": [[173, null]], "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.step": [[174, null]], "compyute.nn.utils.lr_schedulers.LrScheduler": [[175, null]], "compyute.nn.utils.lr_schedulers.LrScheduler.__init__": [[176, null]], "compyute.nn.utils.lr_schedulers.LrScheduler.step": [[177, null]], "compyute.nn.utils.lr_schedulers.MultistepLrScheduler": [[178, null]], "compyute.nn.utils.lr_schedulers.MultistepLrScheduler.__init__": [[179, null]], "compyute.nn.utils.lr_schedulers.MultistepLrScheduler.step": [[180, null]], "compyute.nn.utils.lr_schedulers.StepLrScheduler": [[181, null]], "compyute.nn.utils.lr_schedulers.StepLrScheduler.__init__": [[182, null]], "compyute.nn.utils.lr_schedulers.StepLrScheduler.step": [[183, null]], "compyute.nn.utils.tensorboard": [[1110, null]], "compyute.norm": [[1056, null]], "compyute.ones": [[1057, null]], "compyute.ones_like": [[1058, null]], "compyute.outer": [[1059, null]], "compyute.pad": [[1060, null]], "compyute.pad_to_shape": [[1061, null]], "compyute.permute": [[1062, null]], "compyute.pooling1d": [[1063, null]], "compyute.pooling2d": [[1064, null]], "compyute.preprocessing": [[1111, null]], "compyute.preprocessing.normalize": [[949, null]], "compyute.preprocessing.one_hot_encode": [[950, null]], "compyute.preprocessing.split_train_val_test": [[951, null]], "compyute.preprocessing.standardize": [[952, null]], "compyute.prod": [[1065, null]], "compyute.random": [[1112, null]], "compyute.random.multinomial": [[953, null]], "compyute.random.normal": [[954, null]], "compyute.random.permutation": [[955, null]], "compyute.random.random": [[956, null]], "compyute.random.set_seed": [[957, null]], "compyute.random.shuffle": [[958, null]], "compyute.random.uniform": [[959, null]], "compyute.random.uniform_int": [[960, null]], "compyute.real": [[1066, null]], "compyute.repeat1d": [[1067, null]], "compyute.repeat2d": [[1068, null]], "compyute.reshape": [[1069, null]], "compyute.round": [[1070, null]], "compyute.save": [[1071, null]], "compyute.sech": [[1072, null]], "compyute.set_debug_mode": [[1073, null]], "compyute.set_default_device": [[1074, null]], "compyute.set_default_dtype": [[1075, null]], "compyute.sin": [[1076, null]], "compyute.sinh": [[1077, null]], "compyute.split": [[1078, null]], "compyute.sqrt": [[1079, null]], "compyute.squeeze": [[1080, null]], "compyute.stack": [[1081, null]], "compyute.std": [[1082, null]], "compyute.sum": [[1083, null]], "compyute.tan": [[1084, null]], "compyute.tanh": [[1085, null]], "compyute.tensor": [[1086, null]], "compyute.tensorprod": [[1087, null]], "compyute.tensorsum": [[1088, null]], "compyute.tile": [[1089, null]], "compyute.transpose": [[1090, null]], "compyute.tril": [[1091, null]], "compyute.triu": [[1092, null]], "compyute.unique": [[1093, null]], "compyute.use_device": [[1094, null]], "compyute.use_dtype": [[1095, null]], "compyute.var": [[1096, null]], "compyute.zeros": [[1097, null]], "compyute.zeros_like": [[1098, null]]}, "docnames": ["_generated/compyute.backend/compyute.backend.free_memory", "_generated/compyute.backend/compyute.backend.get_device_count", "_generated/compyute.backend/compyute.backend.gpu_available", "_generated/compyute.backend/compyute.backend.synchronize", "_generated/compyute.nn.functional/compyute.nn.functional.accuracy_score", "_generated/compyute.nn.functional/compyute.nn.functional.avgpooling2d", "_generated/compyute.nn.functional/compyute.nn.functional.batchnorm1d", "_generated/compyute.nn.functional/compyute.nn.functional.batchnorm2d", "_generated/compyute.nn.functional/compyute.nn.functional.bce_loss", "_generated/compyute.nn.functional/compyute.nn.functional.conv1d", "_generated/compyute.nn.functional/compyute.nn.functional.conv2d", "_generated/compyute.nn.functional/compyute.nn.functional.conv_transpose1d", "_generated/compyute.nn.functional/compyute.nn.functional.conv_transpose2d", "_generated/compyute.nn.functional/compyute.nn.functional.cross_entropy_loss", "_generated/compyute.nn.functional/compyute.nn.functional.dice_loss", "_generated/compyute.nn.functional/compyute.nn.functional.dilate1d", "_generated/compyute.nn.functional/compyute.nn.functional.dilate2d", "_generated/compyute.nn.functional/compyute.nn.functional.dropout", "_generated/compyute.nn.functional/compyute.nn.functional.embedding", "_generated/compyute.nn.functional/compyute.nn.functional.fast_gelu", "_generated/compyute.nn.functional/compyute.nn.functional.gelu", "_generated/compyute.nn.functional/compyute.nn.functional.gru", "_generated/compyute.nn.functional/compyute.nn.functional.layernorm", "_generated/compyute.nn.functional/compyute.nn.functional.leaky_relu", "_generated/compyute.nn.functional/compyute.nn.functional.linear", "_generated/compyute.nn.functional/compyute.nn.functional.lstm", "_generated/compyute.nn.functional/compyute.nn.functional.maxpooling2d", "_generated/compyute.nn.functional/compyute.nn.functional.mse_loss", "_generated/compyute.nn.functional/compyute.nn.functional.pad1d", "_generated/compyute.nn.functional/compyute.nn.functional.pad2d", "_generated/compyute.nn.functional/compyute.nn.functional.r2_score", "_generated/compyute.nn.functional/compyute.nn.functional.recurrent", "_generated/compyute.nn.functional/compyute.nn.functional.relu", "_generated/compyute.nn.functional/compyute.nn.functional.rmsnorm", "_generated/compyute.nn.functional/compyute.nn.functional.sigmoid", "_generated/compyute.nn.functional/compyute.nn.functional.silu", "_generated/compyute.nn.functional/compyute.nn.functional.softmax", "_generated/compyute.nn.functional/compyute.nn.functional.tanh", "_generated/compyute.nn.functional/compyute.nn.functional.upsample2d", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.__init__", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.get_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.load_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.reset_grads", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.set_parameters", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.step", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.__init__", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.get_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.load_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.reset_grads", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.set_parameters", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.step", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.__init__", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.get_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.load_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.reset_grads", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.set_parameters", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.step", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.__init__", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.get_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.load_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.reset_grads", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.set_parameters", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.step", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.__init__", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.get_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.load_state_dict", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.reset_grads", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.set_parameters", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.step", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_step_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.__init__", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_epoch_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_epoch_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_run_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_run_start", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_step_end", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_step_start", "_generated/compyute.nn.trainer/compyute.nn.trainer.Trainer", "_generated/compyute.nn.trainer/compyute.nn.trainer.Trainer.__init__", "_generated/compyute.nn.trainer/compyute.nn.trainer.Trainer.evaluate_model", "_generated/compyute.nn.trainer/compyute.nn.trainer.Trainer.train", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_kaiming_normal", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_kaiming_uniform", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_normal", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_ones", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_uniform", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_xavier_normal", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_xavier_uniform", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_zeros", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.__init__", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.step", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.CosineLrScheduler", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.CosineLrScheduler.__init__", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.CosineLrScheduler.step", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.ExponentialLrScheduler", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.__init__", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.step", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.LrScheduler", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.LrScheduler.__init__", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.LrScheduler.step", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.MultistepLrScheduler", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.MultistepLrScheduler.__init__", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.MultistepLrScheduler.step", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.StepLrScheduler", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.StepLrScheduler.__init__", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.StepLrScheduler.step", "_generated/compyute.nn.utils/compyute.nn.utils.Dataloader", "_generated/compyute.nn.utils/compyute.nn.utils.Dataloader.__init__", "_generated/compyute.nn.utils/compyute.nn.utils.batched", "_generated/compyute.nn.utils/compyute.nn.utils.clip_grad_norm", "_generated/compyute.nn.utils/compyute.nn.utils.get_module_summary", "_generated/compyute.nn/compyute.nn.Accuracy", "_generated/compyute.nn/compyute.nn.Accuracy.__init__", "_generated/compyute.nn/compyute.nn.AvgPooling2D", "_generated/compyute.nn/compyute.nn.AvgPooling2D.__init__", "_generated/compyute.nn/compyute.nn.AvgPooling2D.backward", "_generated/compyute.nn/compyute.nn.AvgPooling2D.clean", "_generated/compyute.nn/compyute.nn.AvgPooling2D.forward", "_generated/compyute.nn/compyute.nn.AvgPooling2D.get_buffers", "_generated/compyute.nn/compyute.nn.AvgPooling2D.get_modules", "_generated/compyute.nn/compyute.nn.AvgPooling2D.get_parameters", "_generated/compyute.nn/compyute.nn.AvgPooling2D.get_state_dict", "_generated/compyute.nn/compyute.nn.AvgPooling2D.inference", "_generated/compyute.nn/compyute.nn.AvgPooling2D.load_state_dict", "_generated/compyute.nn/compyute.nn.AvgPooling2D.register_backward", "_generated/compyute.nn/compyute.nn.AvgPooling2D.register_forward", "_generated/compyute.nn/compyute.nn.AvgPooling2D.to_device", "_generated/compyute.nn/compyute.nn.AvgPooling2D.to_type", "_generated/compyute.nn/compyute.nn.AvgPooling2D.training", "_generated/compyute.nn/compyute.nn.AvgPooling2D.update_parameter_grad", "_generated/compyute.nn/compyute.nn.BCELoss", "_generated/compyute.nn/compyute.nn.BCELoss.__init__", "_generated/compyute.nn/compyute.nn.BCELoss.backward", "_generated/compyute.nn/compyute.nn.BCELoss.forward", "_generated/compyute.nn/compyute.nn.BCELoss.register_backward", "_generated/compyute.nn/compyute.nn.BCELoss.register_forward", "_generated/compyute.nn/compyute.nn.BatchNorm1D", "_generated/compyute.nn/compyute.nn.BatchNorm1D.__init__", "_generated/compyute.nn/compyute.nn.BatchNorm1D.backward", "_generated/compyute.nn/compyute.nn.BatchNorm1D.clean", "_generated/compyute.nn/compyute.nn.BatchNorm1D.forward", "_generated/compyute.nn/compyute.nn.BatchNorm1D.get_buffers", "_generated/compyute.nn/compyute.nn.BatchNorm1D.get_modules", "_generated/compyute.nn/compyute.nn.BatchNorm1D.get_parameters", "_generated/compyute.nn/compyute.nn.BatchNorm1D.get_state_dict", "_generated/compyute.nn/compyute.nn.BatchNorm1D.inference", "_generated/compyute.nn/compyute.nn.BatchNorm1D.load_state_dict", "_generated/compyute.nn/compyute.nn.BatchNorm1D.register_backward", "_generated/compyute.nn/compyute.nn.BatchNorm1D.register_forward", "_generated/compyute.nn/compyute.nn.BatchNorm1D.to_device", "_generated/compyute.nn/compyute.nn.BatchNorm1D.to_type", "_generated/compyute.nn/compyute.nn.BatchNorm1D.training", "_generated/compyute.nn/compyute.nn.BatchNorm1D.update_parameter_grad", "_generated/compyute.nn/compyute.nn.BatchNorm2D", "_generated/compyute.nn/compyute.nn.BatchNorm2D.__init__", "_generated/compyute.nn/compyute.nn.BatchNorm2D.backward", "_generated/compyute.nn/compyute.nn.BatchNorm2D.clean", "_generated/compyute.nn/compyute.nn.BatchNorm2D.forward", "_generated/compyute.nn/compyute.nn.BatchNorm2D.get_buffers", "_generated/compyute.nn/compyute.nn.BatchNorm2D.get_modules", "_generated/compyute.nn/compyute.nn.BatchNorm2D.get_parameters", "_generated/compyute.nn/compyute.nn.BatchNorm2D.get_state_dict", "_generated/compyute.nn/compyute.nn.BatchNorm2D.inference", "_generated/compyute.nn/compyute.nn.BatchNorm2D.load_state_dict", "_generated/compyute.nn/compyute.nn.BatchNorm2D.register_backward", "_generated/compyute.nn/compyute.nn.BatchNorm2D.register_forward", "_generated/compyute.nn/compyute.nn.BatchNorm2D.to_device", "_generated/compyute.nn/compyute.nn.BatchNorm2D.to_type", "_generated/compyute.nn/compyute.nn.BatchNorm2D.training", "_generated/compyute.nn/compyute.nn.BatchNorm2D.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Buffer", "_generated/compyute.nn/compyute.nn.Buffer.__init__", "_generated/compyute.nn/compyute.nn.Buffer.abs", "_generated/compyute.nn/compyute.nn.Buffer.all", "_generated/compyute.nn/compyute.nn.Buffer.any", "_generated/compyute.nn/compyute.nn.Buffer.argmax", "_generated/compyute.nn/compyute.nn.Buffer.copy", "_generated/compyute.nn/compyute.nn.Buffer.imag", "_generated/compyute.nn/compyute.nn.Buffer.item", "_generated/compyute.nn/compyute.nn.Buffer.ito_device", "_generated/compyute.nn/compyute.nn.Buffer.ito_type", "_generated/compyute.nn/compyute.nn.Buffer.max", "_generated/compyute.nn/compyute.nn.Buffer.mean", "_generated/compyute.nn/compyute.nn.Buffer.min", "_generated/compyute.nn/compyute.nn.Buffer.permute", "_generated/compyute.nn/compyute.nn.Buffer.real", "_generated/compyute.nn/compyute.nn.Buffer.squeeze", "_generated/compyute.nn/compyute.nn.Buffer.std", "_generated/compyute.nn/compyute.nn.Buffer.sum", "_generated/compyute.nn/compyute.nn.Buffer.to_complex", "_generated/compyute.nn/compyute.nn.Buffer.to_contiguous", "_generated/compyute.nn/compyute.nn.Buffer.to_cpu", "_generated/compyute.nn/compyute.nn.Buffer.to_cuda", "_generated/compyute.nn/compyute.nn.Buffer.to_device", "_generated/compyute.nn/compyute.nn.Buffer.to_double", "_generated/compyute.nn/compyute.nn.Buffer.to_float", "_generated/compyute.nn/compyute.nn.Buffer.to_half", "_generated/compyute.nn/compyute.nn.Buffer.to_int", "_generated/compyute.nn/compyute.nn.Buffer.to_list", "_generated/compyute.nn/compyute.nn.Buffer.to_long", "_generated/compyute.nn/compyute.nn.Buffer.to_numpy", "_generated/compyute.nn/compyute.nn.Buffer.to_type", "_generated/compyute.nn/compyute.nn.Buffer.transpose", "_generated/compyute.nn/compyute.nn.Buffer.var", "_generated/compyute.nn/compyute.nn.Buffer.view", "_generated/compyute.nn/compyute.nn.Conv1D", "_generated/compyute.nn/compyute.nn.Conv1D.__init__", "_generated/compyute.nn/compyute.nn.Conv1D.backward", "_generated/compyute.nn/compyute.nn.Conv1D.clean", "_generated/compyute.nn/compyute.nn.Conv1D.forward", "_generated/compyute.nn/compyute.nn.Conv1D.get_buffers", "_generated/compyute.nn/compyute.nn.Conv1D.get_modules", "_generated/compyute.nn/compyute.nn.Conv1D.get_parameters", "_generated/compyute.nn/compyute.nn.Conv1D.get_state_dict", "_generated/compyute.nn/compyute.nn.Conv1D.inference", "_generated/compyute.nn/compyute.nn.Conv1D.load_state_dict", "_generated/compyute.nn/compyute.nn.Conv1D.register_backward", "_generated/compyute.nn/compyute.nn.Conv1D.register_forward", "_generated/compyute.nn/compyute.nn.Conv1D.to_device", "_generated/compyute.nn/compyute.nn.Conv1D.to_type", "_generated/compyute.nn/compyute.nn.Conv1D.training", "_generated/compyute.nn/compyute.nn.Conv1D.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Conv1DBlock", "_generated/compyute.nn/compyute.nn.Conv1DBlock.__init__", "_generated/compyute.nn/compyute.nn.Conv1DBlock.add", "_generated/compyute.nn/compyute.nn.Conv1DBlock.backward", "_generated/compyute.nn/compyute.nn.Conv1DBlock.clean", "_generated/compyute.nn/compyute.nn.Conv1DBlock.forward", "_generated/compyute.nn/compyute.nn.Conv1DBlock.get_buffers", "_generated/compyute.nn/compyute.nn.Conv1DBlock.get_modules", "_generated/compyute.nn/compyute.nn.Conv1DBlock.get_parameters", "_generated/compyute.nn/compyute.nn.Conv1DBlock.get_state_dict", "_generated/compyute.nn/compyute.nn.Conv1DBlock.inference", "_generated/compyute.nn/compyute.nn.Conv1DBlock.load_state_dict", "_generated/compyute.nn/compyute.nn.Conv1DBlock.register_backward", "_generated/compyute.nn/compyute.nn.Conv1DBlock.register_forward", "_generated/compyute.nn/compyute.nn.Conv1DBlock.to_device", "_generated/compyute.nn/compyute.nn.Conv1DBlock.to_type", "_generated/compyute.nn/compyute.nn.Conv1DBlock.training", "_generated/compyute.nn/compyute.nn.Conv1DBlock.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Conv2D", "_generated/compyute.nn/compyute.nn.Conv2D.__init__", "_generated/compyute.nn/compyute.nn.Conv2D.backward", "_generated/compyute.nn/compyute.nn.Conv2D.clean", "_generated/compyute.nn/compyute.nn.Conv2D.forward", "_generated/compyute.nn/compyute.nn.Conv2D.get_buffers", "_generated/compyute.nn/compyute.nn.Conv2D.get_modules", "_generated/compyute.nn/compyute.nn.Conv2D.get_parameters", "_generated/compyute.nn/compyute.nn.Conv2D.get_state_dict", "_generated/compyute.nn/compyute.nn.Conv2D.inference", "_generated/compyute.nn/compyute.nn.Conv2D.load_state_dict", "_generated/compyute.nn/compyute.nn.Conv2D.register_backward", "_generated/compyute.nn/compyute.nn.Conv2D.register_forward", "_generated/compyute.nn/compyute.nn.Conv2D.to_device", "_generated/compyute.nn/compyute.nn.Conv2D.to_type", "_generated/compyute.nn/compyute.nn.Conv2D.training", "_generated/compyute.nn/compyute.nn.Conv2D.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Conv2DBlock", "_generated/compyute.nn/compyute.nn.Conv2DBlock.__init__", "_generated/compyute.nn/compyute.nn.Conv2DBlock.add", "_generated/compyute.nn/compyute.nn.Conv2DBlock.backward", "_generated/compyute.nn/compyute.nn.Conv2DBlock.clean", "_generated/compyute.nn/compyute.nn.Conv2DBlock.forward", "_generated/compyute.nn/compyute.nn.Conv2DBlock.get_buffers", "_generated/compyute.nn/compyute.nn.Conv2DBlock.get_modules", "_generated/compyute.nn/compyute.nn.Conv2DBlock.get_parameters", "_generated/compyute.nn/compyute.nn.Conv2DBlock.get_state_dict", "_generated/compyute.nn/compyute.nn.Conv2DBlock.inference", "_generated/compyute.nn/compyute.nn.Conv2DBlock.load_state_dict", "_generated/compyute.nn/compyute.nn.Conv2DBlock.register_backward", "_generated/compyute.nn/compyute.nn.Conv2DBlock.register_forward", "_generated/compyute.nn/compyute.nn.Conv2DBlock.to_device", "_generated/compyute.nn/compyute.nn.Conv2DBlock.to_type", "_generated/compyute.nn/compyute.nn.Conv2DBlock.training", "_generated/compyute.nn/compyute.nn.Conv2DBlock.update_parameter_grad", "_generated/compyute.nn/compyute.nn.ConvTranspose1D", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.__init__", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.backward", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.clean", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.forward", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.get_buffers", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.get_modules", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.get_parameters", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.get_state_dict", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.inference", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.load_state_dict", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.register_backward", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.register_forward", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.to_device", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.to_type", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.training", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.update_parameter_grad", "_generated/compyute.nn/compyute.nn.ConvTranspose2D", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.__init__", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.backward", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.clean", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.forward", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.get_buffers", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.get_modules", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.get_parameters", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.get_state_dict", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.inference", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.load_state_dict", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.register_backward", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.register_forward", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.to_device", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.to_type", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.training", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.update_parameter_grad", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.__init__", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.backward", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.forward", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.register_backward", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.register_forward", "_generated/compyute.nn/compyute.nn.DenseBlock", "_generated/compyute.nn/compyute.nn.DenseBlock.__init__", "_generated/compyute.nn/compyute.nn.DenseBlock.add", "_generated/compyute.nn/compyute.nn.DenseBlock.backward", "_generated/compyute.nn/compyute.nn.DenseBlock.clean", "_generated/compyute.nn/compyute.nn.DenseBlock.forward", "_generated/compyute.nn/compyute.nn.DenseBlock.get_buffers", "_generated/compyute.nn/compyute.nn.DenseBlock.get_modules", "_generated/compyute.nn/compyute.nn.DenseBlock.get_parameters", "_generated/compyute.nn/compyute.nn.DenseBlock.get_state_dict", "_generated/compyute.nn/compyute.nn.DenseBlock.inference", "_generated/compyute.nn/compyute.nn.DenseBlock.load_state_dict", "_generated/compyute.nn/compyute.nn.DenseBlock.register_backward", "_generated/compyute.nn/compyute.nn.DenseBlock.register_forward", "_generated/compyute.nn/compyute.nn.DenseBlock.to_device", "_generated/compyute.nn/compyute.nn.DenseBlock.to_type", "_generated/compyute.nn/compyute.nn.DenseBlock.training", "_generated/compyute.nn/compyute.nn.DenseBlock.update_parameter_grad", "_generated/compyute.nn/compyute.nn.DiceLoss", "_generated/compyute.nn/compyute.nn.DiceLoss.__init__", "_generated/compyute.nn/compyute.nn.DiceLoss.backward", "_generated/compyute.nn/compyute.nn.DiceLoss.forward", "_generated/compyute.nn/compyute.nn.DiceLoss.register_backward", "_generated/compyute.nn/compyute.nn.DiceLoss.register_forward", "_generated/compyute.nn/compyute.nn.Dropout", "_generated/compyute.nn/compyute.nn.Dropout.__init__", "_generated/compyute.nn/compyute.nn.Dropout.backward", "_generated/compyute.nn/compyute.nn.Dropout.clean", "_generated/compyute.nn/compyute.nn.Dropout.forward", "_generated/compyute.nn/compyute.nn.Dropout.get_buffers", "_generated/compyute.nn/compyute.nn.Dropout.get_modules", "_generated/compyute.nn/compyute.nn.Dropout.get_parameters", "_generated/compyute.nn/compyute.nn.Dropout.get_state_dict", "_generated/compyute.nn/compyute.nn.Dropout.inference", "_generated/compyute.nn/compyute.nn.Dropout.load_state_dict", "_generated/compyute.nn/compyute.nn.Dropout.register_backward", "_generated/compyute.nn/compyute.nn.Dropout.register_forward", "_generated/compyute.nn/compyute.nn.Dropout.to_device", "_generated/compyute.nn/compyute.nn.Dropout.to_type", "_generated/compyute.nn/compyute.nn.Dropout.training", "_generated/compyute.nn/compyute.nn.Dropout.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Embedding", "_generated/compyute.nn/compyute.nn.Embedding.__init__", "_generated/compyute.nn/compyute.nn.Embedding.backward", "_generated/compyute.nn/compyute.nn.Embedding.clean", "_generated/compyute.nn/compyute.nn.Embedding.forward", "_generated/compyute.nn/compyute.nn.Embedding.get_buffers", "_generated/compyute.nn/compyute.nn.Embedding.get_modules", "_generated/compyute.nn/compyute.nn.Embedding.get_parameters", "_generated/compyute.nn/compyute.nn.Embedding.get_state_dict", "_generated/compyute.nn/compyute.nn.Embedding.inference", "_generated/compyute.nn/compyute.nn.Embedding.load_state_dict", "_generated/compyute.nn/compyute.nn.Embedding.register_backward", "_generated/compyute.nn/compyute.nn.Embedding.register_forward", "_generated/compyute.nn/compyute.nn.Embedding.to_device", "_generated/compyute.nn/compyute.nn.Embedding.to_type", "_generated/compyute.nn/compyute.nn.Embedding.training", "_generated/compyute.nn/compyute.nn.Embedding.update_parameter_grad", "_generated/compyute.nn/compyute.nn.FastGELU", "_generated/compyute.nn/compyute.nn.FastGELU.__init__", "_generated/compyute.nn/compyute.nn.FastGELU.backward", "_generated/compyute.nn/compyute.nn.FastGELU.clean", "_generated/compyute.nn/compyute.nn.FastGELU.forward", "_generated/compyute.nn/compyute.nn.FastGELU.get_buffers", "_generated/compyute.nn/compyute.nn.FastGELU.get_modules", "_generated/compyute.nn/compyute.nn.FastGELU.get_parameters", "_generated/compyute.nn/compyute.nn.FastGELU.get_state_dict", "_generated/compyute.nn/compyute.nn.FastGELU.inference", "_generated/compyute.nn/compyute.nn.FastGELU.load_state_dict", "_generated/compyute.nn/compyute.nn.FastGELU.register_backward", "_generated/compyute.nn/compyute.nn.FastGELU.register_forward", "_generated/compyute.nn/compyute.nn.FastGELU.to_device", "_generated/compyute.nn/compyute.nn.FastGELU.to_type", "_generated/compyute.nn/compyute.nn.FastGELU.training", "_generated/compyute.nn/compyute.nn.FastGELU.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Flatten", "_generated/compyute.nn/compyute.nn.Flatten.__init__", "_generated/compyute.nn/compyute.nn.Flatten.backward", "_generated/compyute.nn/compyute.nn.Flatten.clean", "_generated/compyute.nn/compyute.nn.Flatten.forward", "_generated/compyute.nn/compyute.nn.Flatten.get_buffers", "_generated/compyute.nn/compyute.nn.Flatten.get_modules", "_generated/compyute.nn/compyute.nn.Flatten.get_parameters", "_generated/compyute.nn/compyute.nn.Flatten.get_state_dict", "_generated/compyute.nn/compyute.nn.Flatten.inference", "_generated/compyute.nn/compyute.nn.Flatten.load_state_dict", "_generated/compyute.nn/compyute.nn.Flatten.register_backward", "_generated/compyute.nn/compyute.nn.Flatten.register_forward", "_generated/compyute.nn/compyute.nn.Flatten.to_device", "_generated/compyute.nn/compyute.nn.Flatten.to_type", "_generated/compyute.nn/compyute.nn.Flatten.training", "_generated/compyute.nn/compyute.nn.Flatten.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Function", "_generated/compyute.nn/compyute.nn.Function.__init__", "_generated/compyute.nn/compyute.nn.Function.backward", "_generated/compyute.nn/compyute.nn.Function.forward", "_generated/compyute.nn/compyute.nn.FunctionContext", "_generated/compyute.nn/compyute.nn.FunctionContext.__init__", "_generated/compyute.nn/compyute.nn.FunctionContext.add", "_generated/compyute.nn/compyute.nn.FunctionContext.get", "_generated/compyute.nn/compyute.nn.GELU", "_generated/compyute.nn/compyute.nn.GELU.__init__", "_generated/compyute.nn/compyute.nn.GELU.backward", "_generated/compyute.nn/compyute.nn.GELU.clean", "_generated/compyute.nn/compyute.nn.GELU.forward", "_generated/compyute.nn/compyute.nn.GELU.get_buffers", "_generated/compyute.nn/compyute.nn.GELU.get_modules", "_generated/compyute.nn/compyute.nn.GELU.get_parameters", "_generated/compyute.nn/compyute.nn.GELU.get_state_dict", "_generated/compyute.nn/compyute.nn.GELU.inference", "_generated/compyute.nn/compyute.nn.GELU.load_state_dict", "_generated/compyute.nn/compyute.nn.GELU.register_backward", "_generated/compyute.nn/compyute.nn.GELU.register_forward", "_generated/compyute.nn/compyute.nn.GELU.to_device", "_generated/compyute.nn/compyute.nn.GELU.to_type", "_generated/compyute.nn/compyute.nn.GELU.training", "_generated/compyute.nn/compyute.nn.GELU.update_parameter_grad", "_generated/compyute.nn/compyute.nn.GRU", "_generated/compyute.nn/compyute.nn.GRU.__init__", "_generated/compyute.nn/compyute.nn.GRU.backward", "_generated/compyute.nn/compyute.nn.GRU.clean", "_generated/compyute.nn/compyute.nn.GRU.forward", "_generated/compyute.nn/compyute.nn.GRU.get_buffers", "_generated/compyute.nn/compyute.nn.GRU.get_modules", "_generated/compyute.nn/compyute.nn.GRU.get_parameters", "_generated/compyute.nn/compyute.nn.GRU.get_state_dict", "_generated/compyute.nn/compyute.nn.GRU.inference", "_generated/compyute.nn/compyute.nn.GRU.load_state_dict", "_generated/compyute.nn/compyute.nn.GRU.register_backward", "_generated/compyute.nn/compyute.nn.GRU.register_forward", "_generated/compyute.nn/compyute.nn.GRU.to_device", "_generated/compyute.nn/compyute.nn.GRU.to_type", "_generated/compyute.nn/compyute.nn.GRU.training", "_generated/compyute.nn/compyute.nn.GRU.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Identity", "_generated/compyute.nn/compyute.nn.Identity.__init__", "_generated/compyute.nn/compyute.nn.Identity.backward", "_generated/compyute.nn/compyute.nn.Identity.clean", "_generated/compyute.nn/compyute.nn.Identity.forward", "_generated/compyute.nn/compyute.nn.Identity.get_buffers", "_generated/compyute.nn/compyute.nn.Identity.get_modules", "_generated/compyute.nn/compyute.nn.Identity.get_parameters", "_generated/compyute.nn/compyute.nn.Identity.get_state_dict", "_generated/compyute.nn/compyute.nn.Identity.inference", "_generated/compyute.nn/compyute.nn.Identity.load_state_dict", "_generated/compyute.nn/compyute.nn.Identity.register_backward", "_generated/compyute.nn/compyute.nn.Identity.register_forward", "_generated/compyute.nn/compyute.nn.Identity.to_device", "_generated/compyute.nn/compyute.nn.Identity.to_type", "_generated/compyute.nn/compyute.nn.Identity.training", "_generated/compyute.nn/compyute.nn.Identity.update_parameter_grad", "_generated/compyute.nn/compyute.nn.LSTM", "_generated/compyute.nn/compyute.nn.LSTM.__init__", "_generated/compyute.nn/compyute.nn.LSTM.backward", "_generated/compyute.nn/compyute.nn.LSTM.clean", "_generated/compyute.nn/compyute.nn.LSTM.forward", "_generated/compyute.nn/compyute.nn.LSTM.get_buffers", "_generated/compyute.nn/compyute.nn.LSTM.get_modules", "_generated/compyute.nn/compyute.nn.LSTM.get_parameters", "_generated/compyute.nn/compyute.nn.LSTM.get_state_dict", "_generated/compyute.nn/compyute.nn.LSTM.inference", "_generated/compyute.nn/compyute.nn.LSTM.load_state_dict", "_generated/compyute.nn/compyute.nn.LSTM.register_backward", "_generated/compyute.nn/compyute.nn.LSTM.register_forward", "_generated/compyute.nn/compyute.nn.LSTM.to_device", "_generated/compyute.nn/compyute.nn.LSTM.to_type", "_generated/compyute.nn/compyute.nn.LSTM.training", "_generated/compyute.nn/compyute.nn.LSTM.update_parameter_grad", "_generated/compyute.nn/compyute.nn.LayerNorm", "_generated/compyute.nn/compyute.nn.LayerNorm.__init__", "_generated/compyute.nn/compyute.nn.LayerNorm.backward", "_generated/compyute.nn/compyute.nn.LayerNorm.clean", "_generated/compyute.nn/compyute.nn.LayerNorm.forward", "_generated/compyute.nn/compyute.nn.LayerNorm.get_buffers", "_generated/compyute.nn/compyute.nn.LayerNorm.get_modules", "_generated/compyute.nn/compyute.nn.LayerNorm.get_parameters", "_generated/compyute.nn/compyute.nn.LayerNorm.get_state_dict", "_generated/compyute.nn/compyute.nn.LayerNorm.inference", "_generated/compyute.nn/compyute.nn.LayerNorm.load_state_dict", "_generated/compyute.nn/compyute.nn.LayerNorm.register_backward", "_generated/compyute.nn/compyute.nn.LayerNorm.register_forward", "_generated/compyute.nn/compyute.nn.LayerNorm.to_device", "_generated/compyute.nn/compyute.nn.LayerNorm.to_type", "_generated/compyute.nn/compyute.nn.LayerNorm.training", "_generated/compyute.nn/compyute.nn.LayerNorm.update_parameter_grad", "_generated/compyute.nn/compyute.nn.LeakyReLU", "_generated/compyute.nn/compyute.nn.LeakyReLU.__init__", "_generated/compyute.nn/compyute.nn.LeakyReLU.backward", "_generated/compyute.nn/compyute.nn.LeakyReLU.clean", "_generated/compyute.nn/compyute.nn.LeakyReLU.forward", "_generated/compyute.nn/compyute.nn.LeakyReLU.get_buffers", "_generated/compyute.nn/compyute.nn.LeakyReLU.get_modules", "_generated/compyute.nn/compyute.nn.LeakyReLU.get_parameters", "_generated/compyute.nn/compyute.nn.LeakyReLU.get_state_dict", "_generated/compyute.nn/compyute.nn.LeakyReLU.inference", "_generated/compyute.nn/compyute.nn.LeakyReLU.load_state_dict", "_generated/compyute.nn/compyute.nn.LeakyReLU.register_backward", "_generated/compyute.nn/compyute.nn.LeakyReLU.register_forward", "_generated/compyute.nn/compyute.nn.LeakyReLU.to_device", "_generated/compyute.nn/compyute.nn.LeakyReLU.to_type", "_generated/compyute.nn/compyute.nn.LeakyReLU.training", "_generated/compyute.nn/compyute.nn.LeakyReLU.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Linear", "_generated/compyute.nn/compyute.nn.Linear.__init__", "_generated/compyute.nn/compyute.nn.Linear.backward", "_generated/compyute.nn/compyute.nn.Linear.clean", "_generated/compyute.nn/compyute.nn.Linear.forward", "_generated/compyute.nn/compyute.nn.Linear.get_buffers", "_generated/compyute.nn/compyute.nn.Linear.get_modules", "_generated/compyute.nn/compyute.nn.Linear.get_parameters", "_generated/compyute.nn/compyute.nn.Linear.get_state_dict", "_generated/compyute.nn/compyute.nn.Linear.inference", "_generated/compyute.nn/compyute.nn.Linear.load_state_dict", "_generated/compyute.nn/compyute.nn.Linear.register_backward", "_generated/compyute.nn/compyute.nn.Linear.register_forward", "_generated/compyute.nn/compyute.nn.Linear.to_device", "_generated/compyute.nn/compyute.nn.Linear.to_type", "_generated/compyute.nn/compyute.nn.Linear.training", "_generated/compyute.nn/compyute.nn.Linear.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Loss", "_generated/compyute.nn/compyute.nn.Loss.__init__", "_generated/compyute.nn/compyute.nn.Loss.backward", "_generated/compyute.nn/compyute.nn.Loss.forward", "_generated/compyute.nn/compyute.nn.Loss.register_backward", "_generated/compyute.nn/compyute.nn.Loss.register_forward", "_generated/compyute.nn/compyute.nn.MSELoss", "_generated/compyute.nn/compyute.nn.MSELoss.__init__", "_generated/compyute.nn/compyute.nn.MSELoss.backward", "_generated/compyute.nn/compyute.nn.MSELoss.forward", "_generated/compyute.nn/compyute.nn.MSELoss.register_backward", "_generated/compyute.nn/compyute.nn.MSELoss.register_forward", "_generated/compyute.nn/compyute.nn.MaxPooling2D", "_generated/compyute.nn/compyute.nn.MaxPooling2D.__init__", "_generated/compyute.nn/compyute.nn.MaxPooling2D.backward", "_generated/compyute.nn/compyute.nn.MaxPooling2D.clean", "_generated/compyute.nn/compyute.nn.MaxPooling2D.forward", "_generated/compyute.nn/compyute.nn.MaxPooling2D.get_buffers", "_generated/compyute.nn/compyute.nn.MaxPooling2D.get_modules", "_generated/compyute.nn/compyute.nn.MaxPooling2D.get_parameters", "_generated/compyute.nn/compyute.nn.MaxPooling2D.get_state_dict", "_generated/compyute.nn/compyute.nn.MaxPooling2D.inference", "_generated/compyute.nn/compyute.nn.MaxPooling2D.load_state_dict", "_generated/compyute.nn/compyute.nn.MaxPooling2D.register_backward", "_generated/compyute.nn/compyute.nn.MaxPooling2D.register_forward", "_generated/compyute.nn/compyute.nn.MaxPooling2D.to_device", "_generated/compyute.nn/compyute.nn.MaxPooling2D.to_type", "_generated/compyute.nn/compyute.nn.MaxPooling2D.training", "_generated/compyute.nn/compyute.nn.MaxPooling2D.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Metric", "_generated/compyute.nn/compyute.nn.Metric.__init__", "_generated/compyute.nn/compyute.nn.Module", "_generated/compyute.nn/compyute.nn.Module.__init__", "_generated/compyute.nn/compyute.nn.Module.backward", "_generated/compyute.nn/compyute.nn.Module.clean", "_generated/compyute.nn/compyute.nn.Module.forward", "_generated/compyute.nn/compyute.nn.Module.get_buffers", "_generated/compyute.nn/compyute.nn.Module.get_modules", "_generated/compyute.nn/compyute.nn.Module.get_parameters", "_generated/compyute.nn/compyute.nn.Module.get_state_dict", "_generated/compyute.nn/compyute.nn.Module.inference", "_generated/compyute.nn/compyute.nn.Module.load_state_dict", "_generated/compyute.nn/compyute.nn.Module.register_backward", "_generated/compyute.nn/compyute.nn.Module.register_forward", "_generated/compyute.nn/compyute.nn.Module.to_device", "_generated/compyute.nn/compyute.nn.Module.to_type", "_generated/compyute.nn/compyute.nn.Module.training", "_generated/compyute.nn/compyute.nn.Module.update_parameter_grad", "_generated/compyute.nn/compyute.nn.ModuleList", "_generated/compyute.nn/compyute.nn.ModuleList.__init__", "_generated/compyute.nn/compyute.nn.ModuleList.append", "_generated/compyute.nn/compyute.nn.ModuleList.clear", "_generated/compyute.nn/compyute.nn.ModuleList.copy", "_generated/compyute.nn/compyute.nn.ModuleList.count", "_generated/compyute.nn/compyute.nn.ModuleList.extend", "_generated/compyute.nn/compyute.nn.ModuleList.index", "_generated/compyute.nn/compyute.nn.ModuleList.insert", "_generated/compyute.nn/compyute.nn.ModuleList.pop", "_generated/compyute.nn/compyute.nn.ModuleList.remove", "_generated/compyute.nn/compyute.nn.ModuleList.reverse", "_generated/compyute.nn/compyute.nn.ModuleList.sort", "_generated/compyute.nn/compyute.nn.ParallelAdd", "_generated/compyute.nn/compyute.nn.ParallelAdd.__init__", "_generated/compyute.nn/compyute.nn.ParallelAdd.backward", "_generated/compyute.nn/compyute.nn.ParallelAdd.clean", "_generated/compyute.nn/compyute.nn.ParallelAdd.forward", "_generated/compyute.nn/compyute.nn.ParallelAdd.get_buffers", "_generated/compyute.nn/compyute.nn.ParallelAdd.get_modules", "_generated/compyute.nn/compyute.nn.ParallelAdd.get_parameters", "_generated/compyute.nn/compyute.nn.ParallelAdd.get_state_dict", "_generated/compyute.nn/compyute.nn.ParallelAdd.inference", "_generated/compyute.nn/compyute.nn.ParallelAdd.load_state_dict", "_generated/compyute.nn/compyute.nn.ParallelAdd.register_backward", "_generated/compyute.nn/compyute.nn.ParallelAdd.register_forward", "_generated/compyute.nn/compyute.nn.ParallelAdd.to_device", "_generated/compyute.nn/compyute.nn.ParallelAdd.to_type", "_generated/compyute.nn/compyute.nn.ParallelAdd.training", "_generated/compyute.nn/compyute.nn.ParallelAdd.update_parameter_grad", "_generated/compyute.nn/compyute.nn.ParallelConcat", "_generated/compyute.nn/compyute.nn.ParallelConcat.__init__", "_generated/compyute.nn/compyute.nn.ParallelConcat.backward", "_generated/compyute.nn/compyute.nn.ParallelConcat.clean", "_generated/compyute.nn/compyute.nn.ParallelConcat.forward", "_generated/compyute.nn/compyute.nn.ParallelConcat.get_buffers", "_generated/compyute.nn/compyute.nn.ParallelConcat.get_modules", "_generated/compyute.nn/compyute.nn.ParallelConcat.get_parameters", "_generated/compyute.nn/compyute.nn.ParallelConcat.get_state_dict", "_generated/compyute.nn/compyute.nn.ParallelConcat.inference", "_generated/compyute.nn/compyute.nn.ParallelConcat.load_state_dict", "_generated/compyute.nn/compyute.nn.ParallelConcat.register_backward", "_generated/compyute.nn/compyute.nn.ParallelConcat.register_forward", "_generated/compyute.nn/compyute.nn.ParallelConcat.to_device", "_generated/compyute.nn/compyute.nn.ParallelConcat.to_type", "_generated/compyute.nn/compyute.nn.ParallelConcat.training", "_generated/compyute.nn/compyute.nn.ParallelConcat.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Parameter", "_generated/compyute.nn/compyute.nn.Parameter.__init__", "_generated/compyute.nn/compyute.nn.Parameter.abs", "_generated/compyute.nn/compyute.nn.Parameter.all", "_generated/compyute.nn/compyute.nn.Parameter.any", "_generated/compyute.nn/compyute.nn.Parameter.argmax", "_generated/compyute.nn/compyute.nn.Parameter.copy", "_generated/compyute.nn/compyute.nn.Parameter.imag", "_generated/compyute.nn/compyute.nn.Parameter.item", "_generated/compyute.nn/compyute.nn.Parameter.ito_device", "_generated/compyute.nn/compyute.nn.Parameter.ito_type", "_generated/compyute.nn/compyute.nn.Parameter.max", "_generated/compyute.nn/compyute.nn.Parameter.mean", "_generated/compyute.nn/compyute.nn.Parameter.min", "_generated/compyute.nn/compyute.nn.Parameter.permute", "_generated/compyute.nn/compyute.nn.Parameter.real", "_generated/compyute.nn/compyute.nn.Parameter.squeeze", "_generated/compyute.nn/compyute.nn.Parameter.std", "_generated/compyute.nn/compyute.nn.Parameter.sum", "_generated/compyute.nn/compyute.nn.Parameter.to_complex", "_generated/compyute.nn/compyute.nn.Parameter.to_contiguous", "_generated/compyute.nn/compyute.nn.Parameter.to_cpu", "_generated/compyute.nn/compyute.nn.Parameter.to_cuda", "_generated/compyute.nn/compyute.nn.Parameter.to_device", "_generated/compyute.nn/compyute.nn.Parameter.to_double", "_generated/compyute.nn/compyute.nn.Parameter.to_float", "_generated/compyute.nn/compyute.nn.Parameter.to_half", "_generated/compyute.nn/compyute.nn.Parameter.to_int", "_generated/compyute.nn/compyute.nn.Parameter.to_list", "_generated/compyute.nn/compyute.nn.Parameter.to_long", "_generated/compyute.nn/compyute.nn.Parameter.to_numpy", "_generated/compyute.nn/compyute.nn.Parameter.to_type", "_generated/compyute.nn/compyute.nn.Parameter.transpose", "_generated/compyute.nn/compyute.nn.Parameter.var", "_generated/compyute.nn/compyute.nn.Parameter.view", "_generated/compyute.nn/compyute.nn.R2", "_generated/compyute.nn/compyute.nn.R2.__init__", "_generated/compyute.nn/compyute.nn.RMSNorm", "_generated/compyute.nn/compyute.nn.RMSNorm.__init__", "_generated/compyute.nn/compyute.nn.RMSNorm.backward", "_generated/compyute.nn/compyute.nn.RMSNorm.clean", "_generated/compyute.nn/compyute.nn.RMSNorm.forward", "_generated/compyute.nn/compyute.nn.RMSNorm.get_buffers", "_generated/compyute.nn/compyute.nn.RMSNorm.get_modules", "_generated/compyute.nn/compyute.nn.RMSNorm.get_parameters", "_generated/compyute.nn/compyute.nn.RMSNorm.get_state_dict", "_generated/compyute.nn/compyute.nn.RMSNorm.inference", "_generated/compyute.nn/compyute.nn.RMSNorm.load_state_dict", "_generated/compyute.nn/compyute.nn.RMSNorm.register_backward", "_generated/compyute.nn/compyute.nn.RMSNorm.register_forward", "_generated/compyute.nn/compyute.nn.RMSNorm.to_device", "_generated/compyute.nn/compyute.nn.RMSNorm.to_type", "_generated/compyute.nn/compyute.nn.RMSNorm.training", "_generated/compyute.nn/compyute.nn.RMSNorm.update_parameter_grad", "_generated/compyute.nn/compyute.nn.ReLU", "_generated/compyute.nn/compyute.nn.ReLU.__init__", "_generated/compyute.nn/compyute.nn.ReLU.backward", "_generated/compyute.nn/compyute.nn.ReLU.clean", "_generated/compyute.nn/compyute.nn.ReLU.forward", "_generated/compyute.nn/compyute.nn.ReLU.get_buffers", "_generated/compyute.nn/compyute.nn.ReLU.get_modules", "_generated/compyute.nn/compyute.nn.ReLU.get_parameters", "_generated/compyute.nn/compyute.nn.ReLU.get_state_dict", "_generated/compyute.nn/compyute.nn.ReLU.inference", "_generated/compyute.nn/compyute.nn.ReLU.load_state_dict", "_generated/compyute.nn/compyute.nn.ReLU.register_backward", "_generated/compyute.nn/compyute.nn.ReLU.register_forward", "_generated/compyute.nn/compyute.nn.ReLU.to_device", "_generated/compyute.nn/compyute.nn.ReLU.to_type", "_generated/compyute.nn/compyute.nn.ReLU.training", "_generated/compyute.nn/compyute.nn.ReLU.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Recurrent", "_generated/compyute.nn/compyute.nn.Recurrent.__init__", "_generated/compyute.nn/compyute.nn.Recurrent.backward", "_generated/compyute.nn/compyute.nn.Recurrent.clean", "_generated/compyute.nn/compyute.nn.Recurrent.forward", "_generated/compyute.nn/compyute.nn.Recurrent.get_buffers", "_generated/compyute.nn/compyute.nn.Recurrent.get_modules", "_generated/compyute.nn/compyute.nn.Recurrent.get_parameters", "_generated/compyute.nn/compyute.nn.Recurrent.get_state_dict", "_generated/compyute.nn/compyute.nn.Recurrent.inference", "_generated/compyute.nn/compyute.nn.Recurrent.load_state_dict", "_generated/compyute.nn/compyute.nn.Recurrent.register_backward", "_generated/compyute.nn/compyute.nn.Recurrent.register_forward", "_generated/compyute.nn/compyute.nn.Recurrent.to_device", "_generated/compyute.nn/compyute.nn.Recurrent.to_type", "_generated/compyute.nn/compyute.nn.Recurrent.training", "_generated/compyute.nn/compyute.nn.Recurrent.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Reshape", "_generated/compyute.nn/compyute.nn.Reshape.__init__", "_generated/compyute.nn/compyute.nn.Reshape.backward", "_generated/compyute.nn/compyute.nn.Reshape.clean", "_generated/compyute.nn/compyute.nn.Reshape.forward", "_generated/compyute.nn/compyute.nn.Reshape.get_buffers", "_generated/compyute.nn/compyute.nn.Reshape.get_modules", "_generated/compyute.nn/compyute.nn.Reshape.get_parameters", "_generated/compyute.nn/compyute.nn.Reshape.get_state_dict", "_generated/compyute.nn/compyute.nn.Reshape.inference", "_generated/compyute.nn/compyute.nn.Reshape.load_state_dict", "_generated/compyute.nn/compyute.nn.Reshape.register_backward", "_generated/compyute.nn/compyute.nn.Reshape.register_forward", "_generated/compyute.nn/compyute.nn.Reshape.to_device", "_generated/compyute.nn/compyute.nn.Reshape.to_type", "_generated/compyute.nn/compyute.nn.Reshape.training", "_generated/compyute.nn/compyute.nn.Reshape.update_parameter_grad", "_generated/compyute.nn/compyute.nn.ResidualConnection", "_generated/compyute.nn/compyute.nn.ResidualConnection.__init__", "_generated/compyute.nn/compyute.nn.ResidualConnection.backward", "_generated/compyute.nn/compyute.nn.ResidualConnection.clean", "_generated/compyute.nn/compyute.nn.ResidualConnection.forward", "_generated/compyute.nn/compyute.nn.ResidualConnection.get_buffers", "_generated/compyute.nn/compyute.nn.ResidualConnection.get_modules", "_generated/compyute.nn/compyute.nn.ResidualConnection.get_parameters", "_generated/compyute.nn/compyute.nn.ResidualConnection.get_state_dict", "_generated/compyute.nn/compyute.nn.ResidualConnection.inference", "_generated/compyute.nn/compyute.nn.ResidualConnection.load_state_dict", "_generated/compyute.nn/compyute.nn.ResidualConnection.register_backward", "_generated/compyute.nn/compyute.nn.ResidualConnection.register_forward", "_generated/compyute.nn/compyute.nn.ResidualConnection.to_device", "_generated/compyute.nn/compyute.nn.ResidualConnection.to_type", "_generated/compyute.nn/compyute.nn.ResidualConnection.training", "_generated/compyute.nn/compyute.nn.ResidualConnection.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Sequential", "_generated/compyute.nn/compyute.nn.Sequential.__init__", "_generated/compyute.nn/compyute.nn.Sequential.add", "_generated/compyute.nn/compyute.nn.Sequential.backward", "_generated/compyute.nn/compyute.nn.Sequential.clean", "_generated/compyute.nn/compyute.nn.Sequential.forward", "_generated/compyute.nn/compyute.nn.Sequential.get_buffers", "_generated/compyute.nn/compyute.nn.Sequential.get_modules", "_generated/compyute.nn/compyute.nn.Sequential.get_parameters", "_generated/compyute.nn/compyute.nn.Sequential.get_state_dict", "_generated/compyute.nn/compyute.nn.Sequential.inference", "_generated/compyute.nn/compyute.nn.Sequential.load_state_dict", "_generated/compyute.nn/compyute.nn.Sequential.register_backward", "_generated/compyute.nn/compyute.nn.Sequential.register_forward", "_generated/compyute.nn/compyute.nn.Sequential.to_device", "_generated/compyute.nn/compyute.nn.Sequential.to_type", "_generated/compyute.nn/compyute.nn.Sequential.training", "_generated/compyute.nn/compyute.nn.Sequential.update_parameter_grad", "_generated/compyute.nn/compyute.nn.SiLU", "_generated/compyute.nn/compyute.nn.SiLU.__init__", "_generated/compyute.nn/compyute.nn.SiLU.backward", "_generated/compyute.nn/compyute.nn.SiLU.clean", "_generated/compyute.nn/compyute.nn.SiLU.forward", "_generated/compyute.nn/compyute.nn.SiLU.get_buffers", "_generated/compyute.nn/compyute.nn.SiLU.get_modules", "_generated/compyute.nn/compyute.nn.SiLU.get_parameters", "_generated/compyute.nn/compyute.nn.SiLU.get_state_dict", "_generated/compyute.nn/compyute.nn.SiLU.inference", "_generated/compyute.nn/compyute.nn.SiLU.load_state_dict", "_generated/compyute.nn/compyute.nn.SiLU.register_backward", "_generated/compyute.nn/compyute.nn.SiLU.register_forward", "_generated/compyute.nn/compyute.nn.SiLU.to_device", "_generated/compyute.nn/compyute.nn.SiLU.to_type", "_generated/compyute.nn/compyute.nn.SiLU.training", "_generated/compyute.nn/compyute.nn.SiLU.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Sigmoid", "_generated/compyute.nn/compyute.nn.Sigmoid.__init__", "_generated/compyute.nn/compyute.nn.Sigmoid.backward", "_generated/compyute.nn/compyute.nn.Sigmoid.clean", "_generated/compyute.nn/compyute.nn.Sigmoid.forward", "_generated/compyute.nn/compyute.nn.Sigmoid.get_buffers", "_generated/compyute.nn/compyute.nn.Sigmoid.get_modules", "_generated/compyute.nn/compyute.nn.Sigmoid.get_parameters", "_generated/compyute.nn/compyute.nn.Sigmoid.get_state_dict", "_generated/compyute.nn/compyute.nn.Sigmoid.inference", "_generated/compyute.nn/compyute.nn.Sigmoid.load_state_dict", "_generated/compyute.nn/compyute.nn.Sigmoid.register_backward", "_generated/compyute.nn/compyute.nn.Sigmoid.register_forward", "_generated/compyute.nn/compyute.nn.Sigmoid.to_device", "_generated/compyute.nn/compyute.nn.Sigmoid.to_type", "_generated/compyute.nn/compyute.nn.Sigmoid.training", "_generated/compyute.nn/compyute.nn.Sigmoid.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Slice", "_generated/compyute.nn/compyute.nn.Slice.__init__", "_generated/compyute.nn/compyute.nn.Slice.backward", "_generated/compyute.nn/compyute.nn.Slice.clean", "_generated/compyute.nn/compyute.nn.Slice.forward", "_generated/compyute.nn/compyute.nn.Slice.get_buffers", "_generated/compyute.nn/compyute.nn.Slice.get_modules", "_generated/compyute.nn/compyute.nn.Slice.get_parameters", "_generated/compyute.nn/compyute.nn.Slice.get_state_dict", "_generated/compyute.nn/compyute.nn.Slice.inference", "_generated/compyute.nn/compyute.nn.Slice.load_state_dict", "_generated/compyute.nn/compyute.nn.Slice.register_backward", "_generated/compyute.nn/compyute.nn.Slice.register_forward", "_generated/compyute.nn/compyute.nn.Slice.to_device", "_generated/compyute.nn/compyute.nn.Slice.to_type", "_generated/compyute.nn/compyute.nn.Slice.training", "_generated/compyute.nn/compyute.nn.Slice.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Softmax", "_generated/compyute.nn/compyute.nn.Softmax.__init__", "_generated/compyute.nn/compyute.nn.Softmax.backward", "_generated/compyute.nn/compyute.nn.Softmax.clean", "_generated/compyute.nn/compyute.nn.Softmax.forward", "_generated/compyute.nn/compyute.nn.Softmax.get_buffers", "_generated/compyute.nn/compyute.nn.Softmax.get_modules", "_generated/compyute.nn/compyute.nn.Softmax.get_parameters", "_generated/compyute.nn/compyute.nn.Softmax.get_state_dict", "_generated/compyute.nn/compyute.nn.Softmax.inference", "_generated/compyute.nn/compyute.nn.Softmax.load_state_dict", "_generated/compyute.nn/compyute.nn.Softmax.register_backward", "_generated/compyute.nn/compyute.nn.Softmax.register_forward", "_generated/compyute.nn/compyute.nn.Softmax.to_device", "_generated/compyute.nn/compyute.nn.Softmax.to_type", "_generated/compyute.nn/compyute.nn.Softmax.training", "_generated/compyute.nn/compyute.nn.Softmax.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Tanh", "_generated/compyute.nn/compyute.nn.Tanh.__init__", "_generated/compyute.nn/compyute.nn.Tanh.backward", "_generated/compyute.nn/compyute.nn.Tanh.clean", "_generated/compyute.nn/compyute.nn.Tanh.forward", "_generated/compyute.nn/compyute.nn.Tanh.get_buffers", "_generated/compyute.nn/compyute.nn.Tanh.get_modules", "_generated/compyute.nn/compyute.nn.Tanh.get_parameters", "_generated/compyute.nn/compyute.nn.Tanh.get_state_dict", "_generated/compyute.nn/compyute.nn.Tanh.inference", "_generated/compyute.nn/compyute.nn.Tanh.load_state_dict", "_generated/compyute.nn/compyute.nn.Tanh.register_backward", "_generated/compyute.nn/compyute.nn.Tanh.register_forward", "_generated/compyute.nn/compyute.nn.Tanh.to_device", "_generated/compyute.nn/compyute.nn.Tanh.to_type", "_generated/compyute.nn/compyute.nn.Tanh.training", "_generated/compyute.nn/compyute.nn.Tanh.update_parameter_grad", "_generated/compyute.nn/compyute.nn.Upsample2D", "_generated/compyute.nn/compyute.nn.Upsample2D.__init__", "_generated/compyute.nn/compyute.nn.Upsample2D.backward", "_generated/compyute.nn/compyute.nn.Upsample2D.clean", "_generated/compyute.nn/compyute.nn.Upsample2D.forward", "_generated/compyute.nn/compyute.nn.Upsample2D.get_buffers", "_generated/compyute.nn/compyute.nn.Upsample2D.get_modules", "_generated/compyute.nn/compyute.nn.Upsample2D.get_parameters", "_generated/compyute.nn/compyute.nn.Upsample2D.get_state_dict", "_generated/compyute.nn/compyute.nn.Upsample2D.inference", "_generated/compyute.nn/compyute.nn.Upsample2D.load_state_dict", "_generated/compyute.nn/compyute.nn.Upsample2D.register_backward", "_generated/compyute.nn/compyute.nn.Upsample2D.register_forward", "_generated/compyute.nn/compyute.nn.Upsample2D.to_device", "_generated/compyute.nn/compyute.nn.Upsample2D.to_type", "_generated/compyute.nn/compyute.nn.Upsample2D.training", "_generated/compyute.nn/compyute.nn.Upsample2D.update_parameter_grad", "_generated/compyute.preprocessing/compyute.preprocessing.normalize", "_generated/compyute.preprocessing/compyute.preprocessing.one_hot_encode", "_generated/compyute.preprocessing/compyute.preprocessing.split_train_val_test", "_generated/compyute.preprocessing/compyute.preprocessing.standardize", "_generated/compyute.random/compyute.random.multinomial", "_generated/compyute.random/compyute.random.normal", "_generated/compyute.random/compyute.random.permutation", "_generated/compyute.random/compyute.random.random", "_generated/compyute.random/compyute.random.set_seed", "_generated/compyute.random/compyute.random.shuffle", "_generated/compyute.random/compyute.random.uniform", "_generated/compyute.random/compyute.random.uniform_int", "_generated/compyute/compyute.Device", "_generated/compyute/compyute.Device.__init__", "_generated/compyute/compyute.Tensor", "_generated/compyute/compyute.Tensor.__init__", "_generated/compyute/compyute.Tensor.abs", "_generated/compyute/compyute.Tensor.all", "_generated/compyute/compyute.Tensor.any", "_generated/compyute/compyute.Tensor.argmax", "_generated/compyute/compyute.Tensor.copy", "_generated/compyute/compyute.Tensor.imag", "_generated/compyute/compyute.Tensor.item", "_generated/compyute/compyute.Tensor.ito_device", "_generated/compyute/compyute.Tensor.ito_type", "_generated/compyute/compyute.Tensor.max", "_generated/compyute/compyute.Tensor.mean", "_generated/compyute/compyute.Tensor.min", "_generated/compyute/compyute.Tensor.permute", "_generated/compyute/compyute.Tensor.real", "_generated/compyute/compyute.Tensor.squeeze", "_generated/compyute/compyute.Tensor.std", "_generated/compyute/compyute.Tensor.sum", "_generated/compyute/compyute.Tensor.to_complex", "_generated/compyute/compyute.Tensor.to_contiguous", "_generated/compyute/compyute.Tensor.to_cpu", "_generated/compyute/compyute.Tensor.to_cuda", "_generated/compyute/compyute.Tensor.to_device", "_generated/compyute/compyute.Tensor.to_double", "_generated/compyute/compyute.Tensor.to_float", "_generated/compyute/compyute.Tensor.to_half", "_generated/compyute/compyute.Tensor.to_int", "_generated/compyute/compyute.Tensor.to_list", "_generated/compyute/compyute.Tensor.to_long", "_generated/compyute/compyute.Tensor.to_numpy", "_generated/compyute/compyute.Tensor.to_type", "_generated/compyute/compyute.Tensor.transpose", "_generated/compyute/compyute.Tensor.var", "_generated/compyute/compyute.Tensor.view", "_generated/compyute/compyute.abs", "_generated/compyute/compyute.all", "_generated/compyute/compyute.allclose", "_generated/compyute/compyute.any", "_generated/compyute/compyute.append", "_generated/compyute/compyute.arange", "_generated/compyute/compyute.argmax", "_generated/compyute/compyute.bool_", "_generated/compyute/compyute.broadcast_to", "_generated/compyute/compyute.clip", "_generated/compyute/compyute.complex128", "_generated/compyute/compyute.complex64", "_generated/compyute/compyute.concat", "_generated/compyute/compyute.convolve1d_fft", "_generated/compyute/compyute.convolve2d_fft", "_generated/compyute/compyute.cos", "_generated/compyute/compyute.cosh", "_generated/compyute/compyute.cpu", "_generated/compyute/compyute.cuda", "_generated/compyute/compyute.debug", "_generated/compyute/compyute.diagonal", "_generated/compyute/compyute.dot", "_generated/compyute/compyute.einsum", "_generated/compyute/compyute.empty", "_generated/compyute/compyute.empty_like", "_generated/compyute/compyute.exp", "_generated/compyute/compyute.fft1d", "_generated/compyute/compyute.fft2d", "_generated/compyute/compyute.flatten", "_generated/compyute/compyute.flip", "_generated/compyute/compyute.float16", "_generated/compyute/compyute.float32", "_generated/compyute/compyute.float64", "_generated/compyute/compyute.full", "_generated/compyute/compyute.full_like", "_generated/compyute/compyute.get_diagonal", "_generated/compyute/compyute.histogram", "_generated/compyute/compyute.identity", "_generated/compyute/compyute.ifft1d", "_generated/compyute/compyute.ifft2d", "_generated/compyute/compyute.inner", "_generated/compyute/compyute.insert_dim", "_generated/compyute/compyute.int16", "_generated/compyute/compyute.int32", "_generated/compyute/compyute.int64", "_generated/compyute/compyute.int8", "_generated/compyute/compyute.is_nan", "_generated/compyute/compyute.linspace", "_generated/compyute/compyute.load", "_generated/compyute/compyute.log", "_generated/compyute/compyute.log10", "_generated/compyute/compyute.log2", "_generated/compyute/compyute.max", "_generated/compyute/compyute.maximum", "_generated/compyute/compyute.mean", "_generated/compyute/compyute.min", "_generated/compyute/compyute.minimum", "_generated/compyute/compyute.movedim", "_generated/compyute/compyute.norm", "_generated/compyute/compyute.ones", "_generated/compyute/compyute.ones_like", "_generated/compyute/compyute.outer", "_generated/compyute/compyute.pad", "_generated/compyute/compyute.pad_to_shape", "_generated/compyute/compyute.permute", "_generated/compyute/compyute.pooling1d", "_generated/compyute/compyute.pooling2d", "_generated/compyute/compyute.prod", "_generated/compyute/compyute.real", "_generated/compyute/compyute.repeat1d", "_generated/compyute/compyute.repeat2d", "_generated/compyute/compyute.reshape", "_generated/compyute/compyute.round", "_generated/compyute/compyute.save", "_generated/compyute/compyute.sech", "_generated/compyute/compyute.set_debug_mode", "_generated/compyute/compyute.set_default_device", "_generated/compyute/compyute.set_default_dtype", "_generated/compyute/compyute.sin", "_generated/compyute/compyute.sinh", "_generated/compyute/compyute.split", "_generated/compyute/compyute.sqrt", "_generated/compyute/compyute.squeeze", "_generated/compyute/compyute.stack", "_generated/compyute/compyute.std", "_generated/compyute/compyute.sum", "_generated/compyute/compyute.tan", "_generated/compyute/compyute.tanh", "_generated/compyute/compyute.tensor", "_generated/compyute/compyute.tensorprod", "_generated/compyute/compyute.tensorsum", "_generated/compyute/compyute.tile", "_generated/compyute/compyute.transpose", "_generated/compyute/compyute.tril", "_generated/compyute/compyute.triu", "_generated/compyute/compyute.unique", "_generated/compyute/compyute.use_device", "_generated/compyute/compyute.use_dtype", "_generated/compyute/compyute.var", "_generated/compyute/compyute.zeros", "_generated/compyute/compyute.zeros_like", "index", "reference/compyute", "reference/compyute.backend", "reference/compyute.nn", "reference/compyute.nn.functional", "reference/compyute.nn.optimizers", "reference/compyute.nn.trainer", "reference/compyute.nn.trainer.callbacks", "reference/compyute.nn.utils", "reference/compyute.nn.utils.initializers", "reference/compyute.nn.utils.lr_schedulers", "reference/compyute.nn.utils.tensorboard", "reference/compyute.preprocessing", "reference/compyute.random", "reference/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["_generated/compyute.backend/compyute.backend.free_memory.rst", "_generated/compyute.backend/compyute.backend.get_device_count.rst", "_generated/compyute.backend/compyute.backend.gpu_available.rst", "_generated/compyute.backend/compyute.backend.synchronize.rst", "_generated/compyute.nn.functional/compyute.nn.functional.accuracy_score.rst", "_generated/compyute.nn.functional/compyute.nn.functional.avgpooling2d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.batchnorm1d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.batchnorm2d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.bce_loss.rst", "_generated/compyute.nn.functional/compyute.nn.functional.conv1d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.conv2d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.conv_transpose1d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.conv_transpose2d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.cross_entropy_loss.rst", "_generated/compyute.nn.functional/compyute.nn.functional.dice_loss.rst", "_generated/compyute.nn.functional/compyute.nn.functional.dilate1d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.dilate2d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.dropout.rst", "_generated/compyute.nn.functional/compyute.nn.functional.embedding.rst", "_generated/compyute.nn.functional/compyute.nn.functional.fast_gelu.rst", "_generated/compyute.nn.functional/compyute.nn.functional.gelu.rst", "_generated/compyute.nn.functional/compyute.nn.functional.gru.rst", "_generated/compyute.nn.functional/compyute.nn.functional.layernorm.rst", "_generated/compyute.nn.functional/compyute.nn.functional.leaky_relu.rst", "_generated/compyute.nn.functional/compyute.nn.functional.linear.rst", "_generated/compyute.nn.functional/compyute.nn.functional.lstm.rst", "_generated/compyute.nn.functional/compyute.nn.functional.maxpooling2d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.mse_loss.rst", "_generated/compyute.nn.functional/compyute.nn.functional.pad1d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.pad2d.rst", "_generated/compyute.nn.functional/compyute.nn.functional.r2_score.rst", "_generated/compyute.nn.functional/compyute.nn.functional.recurrent.rst", "_generated/compyute.nn.functional/compyute.nn.functional.relu.rst", "_generated/compyute.nn.functional/compyute.nn.functional.rmsnorm.rst", "_generated/compyute.nn.functional/compyute.nn.functional.sigmoid.rst", "_generated/compyute.nn.functional/compyute.nn.functional.silu.rst", "_generated/compyute.nn.functional/compyute.nn.functional.softmax.rst", "_generated/compyute.nn.functional/compyute.nn.functional.tanh.rst", "_generated/compyute.nn.functional/compyute.nn.functional.upsample2d.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.__init__.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.get_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.load_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.reset_grads.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.set_parameters.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Adam.step.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.__init__.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.get_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.load_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.reset_grads.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.set_parameters.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.AdamW.step.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.__init__.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.get_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.load_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.reset_grads.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.set_parameters.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.NAdam.step.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.__init__.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.get_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.load_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.reset_grads.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.set_parameters.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.Optimizer.step.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.__init__.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.get_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.load_state_dict.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.reset_grads.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.set_parameters.rst", "_generated/compyute.nn.optimizers/compyute.nn.optimizers.SGD.step.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Callback.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.EarlyStopping.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.History.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.ProgressBar.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.StepLrScheduler.on_step_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.__init__.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_epoch_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_epoch_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_run_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_run_start.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_step_end.rst", "_generated/compyute.nn.trainer.callbacks/compyute.nn.trainer.callbacks.Tensorboard.on_step_start.rst", "_generated/compyute.nn.trainer/compyute.nn.trainer.Trainer.rst", "_generated/compyute.nn.trainer/compyute.nn.trainer.Trainer.__init__.rst", "_generated/compyute.nn.trainer/compyute.nn.trainer.Trainer.evaluate_model.rst", "_generated/compyute.nn.trainer/compyute.nn.trainer.Trainer.train.rst", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_kaiming_normal.rst", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_kaiming_uniform.rst", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_normal.rst", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_ones.rst", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_uniform.rst", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_xavier_normal.rst", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_xavier_uniform.rst", "_generated/compyute.nn.utils.initializers/compyute.nn.utils.initializers.init_zeros.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.__init__.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.step.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.CosineLrScheduler.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.CosineLrScheduler.__init__.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.CosineLrScheduler.step.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.__init__.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.step.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.LrScheduler.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.LrScheduler.__init__.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.LrScheduler.step.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.MultistepLrScheduler.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.MultistepLrScheduler.__init__.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.MultistepLrScheduler.step.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.StepLrScheduler.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.StepLrScheduler.__init__.rst", "_generated/compyute.nn.utils.lr_schedulers/compyute.nn.utils.lr_schedulers.StepLrScheduler.step.rst", "_generated/compyute.nn.utils/compyute.nn.utils.Dataloader.rst", "_generated/compyute.nn.utils/compyute.nn.utils.Dataloader.__init__.rst", "_generated/compyute.nn.utils/compyute.nn.utils.batched.rst", "_generated/compyute.nn.utils/compyute.nn.utils.clip_grad_norm.rst", "_generated/compyute.nn.utils/compyute.nn.utils.get_module_summary.rst", "_generated/compyute.nn/compyute.nn.Accuracy.rst", "_generated/compyute.nn/compyute.nn.Accuracy.__init__.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.__init__.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.backward.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.clean.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.forward.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.get_modules.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.inference.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.register_backward.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.register_forward.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.to_device.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.to_type.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.training.rst", "_generated/compyute.nn/compyute.nn.AvgPooling2D.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.BCELoss.rst", "_generated/compyute.nn/compyute.nn.BCELoss.__init__.rst", "_generated/compyute.nn/compyute.nn.BCELoss.backward.rst", "_generated/compyute.nn/compyute.nn.BCELoss.forward.rst", "_generated/compyute.nn/compyute.nn.BCELoss.register_backward.rst", "_generated/compyute.nn/compyute.nn.BCELoss.register_forward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.__init__.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.backward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.clean.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.forward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.get_modules.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.inference.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.register_backward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.register_forward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.to_device.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.to_type.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.training.rst", "_generated/compyute.nn/compyute.nn.BatchNorm1D.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.__init__.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.backward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.clean.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.forward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.get_modules.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.inference.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.register_backward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.register_forward.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.to_device.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.to_type.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.training.rst", "_generated/compyute.nn/compyute.nn.BatchNorm2D.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Buffer.rst", "_generated/compyute.nn/compyute.nn.Buffer.__init__.rst", "_generated/compyute.nn/compyute.nn.Buffer.abs.rst", "_generated/compyute.nn/compyute.nn.Buffer.all.rst", "_generated/compyute.nn/compyute.nn.Buffer.any.rst", "_generated/compyute.nn/compyute.nn.Buffer.argmax.rst", "_generated/compyute.nn/compyute.nn.Buffer.copy.rst", "_generated/compyute.nn/compyute.nn.Buffer.imag.rst", "_generated/compyute.nn/compyute.nn.Buffer.item.rst", "_generated/compyute.nn/compyute.nn.Buffer.ito_device.rst", "_generated/compyute.nn/compyute.nn.Buffer.ito_type.rst", "_generated/compyute.nn/compyute.nn.Buffer.max.rst", "_generated/compyute.nn/compyute.nn.Buffer.mean.rst", "_generated/compyute.nn/compyute.nn.Buffer.min.rst", "_generated/compyute.nn/compyute.nn.Buffer.permute.rst", "_generated/compyute.nn/compyute.nn.Buffer.real.rst", "_generated/compyute.nn/compyute.nn.Buffer.squeeze.rst", "_generated/compyute.nn/compyute.nn.Buffer.std.rst", "_generated/compyute.nn/compyute.nn.Buffer.sum.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_complex.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_contiguous.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_cpu.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_cuda.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_device.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_double.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_float.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_half.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_int.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_list.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_long.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_numpy.rst", "_generated/compyute.nn/compyute.nn.Buffer.to_type.rst", "_generated/compyute.nn/compyute.nn.Buffer.transpose.rst", "_generated/compyute.nn/compyute.nn.Buffer.var.rst", "_generated/compyute.nn/compyute.nn.Buffer.view.rst", "_generated/compyute.nn/compyute.nn.Conv1D.rst", "_generated/compyute.nn/compyute.nn.Conv1D.__init__.rst", "_generated/compyute.nn/compyute.nn.Conv1D.backward.rst", "_generated/compyute.nn/compyute.nn.Conv1D.clean.rst", "_generated/compyute.nn/compyute.nn.Conv1D.forward.rst", "_generated/compyute.nn/compyute.nn.Conv1D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Conv1D.get_modules.rst", "_generated/compyute.nn/compyute.nn.Conv1D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Conv1D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Conv1D.inference.rst", "_generated/compyute.nn/compyute.nn.Conv1D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Conv1D.register_backward.rst", "_generated/compyute.nn/compyute.nn.Conv1D.register_forward.rst", "_generated/compyute.nn/compyute.nn.Conv1D.to_device.rst", "_generated/compyute.nn/compyute.nn.Conv1D.to_type.rst", "_generated/compyute.nn/compyute.nn.Conv1D.training.rst", "_generated/compyute.nn/compyute.nn.Conv1D.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.__init__.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.add.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.backward.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.clean.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.forward.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.get_modules.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.inference.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.register_backward.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.register_forward.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.to_device.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.to_type.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.training.rst", "_generated/compyute.nn/compyute.nn.Conv1DBlock.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Conv2D.rst", "_generated/compyute.nn/compyute.nn.Conv2D.__init__.rst", "_generated/compyute.nn/compyute.nn.Conv2D.backward.rst", "_generated/compyute.nn/compyute.nn.Conv2D.clean.rst", "_generated/compyute.nn/compyute.nn.Conv2D.forward.rst", "_generated/compyute.nn/compyute.nn.Conv2D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Conv2D.get_modules.rst", "_generated/compyute.nn/compyute.nn.Conv2D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Conv2D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Conv2D.inference.rst", "_generated/compyute.nn/compyute.nn.Conv2D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Conv2D.register_backward.rst", "_generated/compyute.nn/compyute.nn.Conv2D.register_forward.rst", "_generated/compyute.nn/compyute.nn.Conv2D.to_device.rst", "_generated/compyute.nn/compyute.nn.Conv2D.to_type.rst", "_generated/compyute.nn/compyute.nn.Conv2D.training.rst", "_generated/compyute.nn/compyute.nn.Conv2D.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.__init__.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.add.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.backward.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.clean.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.forward.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.get_modules.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.inference.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.register_backward.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.register_forward.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.to_device.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.to_type.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.training.rst", "_generated/compyute.nn/compyute.nn.Conv2DBlock.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.__init__.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.backward.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.clean.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.forward.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.get_modules.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.inference.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.register_backward.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.register_forward.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.to_device.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.to_type.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.training.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose1D.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.__init__.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.backward.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.clean.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.forward.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.get_modules.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.inference.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.register_backward.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.register_forward.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.to_device.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.to_type.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.training.rst", "_generated/compyute.nn/compyute.nn.ConvTranspose2D.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.rst", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.__init__.rst", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.backward.rst", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.forward.rst", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.register_backward.rst", "_generated/compyute.nn/compyute.nn.CrossEntropyLoss.register_forward.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.__init__.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.add.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.backward.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.clean.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.forward.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.get_buffers.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.get_modules.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.get_parameters.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.inference.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.register_backward.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.register_forward.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.to_device.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.to_type.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.training.rst", "_generated/compyute.nn/compyute.nn.DenseBlock.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.DiceLoss.rst", "_generated/compyute.nn/compyute.nn.DiceLoss.__init__.rst", "_generated/compyute.nn/compyute.nn.DiceLoss.backward.rst", "_generated/compyute.nn/compyute.nn.DiceLoss.forward.rst", "_generated/compyute.nn/compyute.nn.DiceLoss.register_backward.rst", "_generated/compyute.nn/compyute.nn.DiceLoss.register_forward.rst", "_generated/compyute.nn/compyute.nn.Dropout.rst", "_generated/compyute.nn/compyute.nn.Dropout.__init__.rst", "_generated/compyute.nn/compyute.nn.Dropout.backward.rst", "_generated/compyute.nn/compyute.nn.Dropout.clean.rst", "_generated/compyute.nn/compyute.nn.Dropout.forward.rst", "_generated/compyute.nn/compyute.nn.Dropout.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Dropout.get_modules.rst", "_generated/compyute.nn/compyute.nn.Dropout.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Dropout.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Dropout.inference.rst", "_generated/compyute.nn/compyute.nn.Dropout.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Dropout.register_backward.rst", "_generated/compyute.nn/compyute.nn.Dropout.register_forward.rst", "_generated/compyute.nn/compyute.nn.Dropout.to_device.rst", "_generated/compyute.nn/compyute.nn.Dropout.to_type.rst", "_generated/compyute.nn/compyute.nn.Dropout.training.rst", "_generated/compyute.nn/compyute.nn.Dropout.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Embedding.rst", "_generated/compyute.nn/compyute.nn.Embedding.__init__.rst", "_generated/compyute.nn/compyute.nn.Embedding.backward.rst", "_generated/compyute.nn/compyute.nn.Embedding.clean.rst", "_generated/compyute.nn/compyute.nn.Embedding.forward.rst", "_generated/compyute.nn/compyute.nn.Embedding.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Embedding.get_modules.rst", "_generated/compyute.nn/compyute.nn.Embedding.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Embedding.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Embedding.inference.rst", "_generated/compyute.nn/compyute.nn.Embedding.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Embedding.register_backward.rst", "_generated/compyute.nn/compyute.nn.Embedding.register_forward.rst", "_generated/compyute.nn/compyute.nn.Embedding.to_device.rst", "_generated/compyute.nn/compyute.nn.Embedding.to_type.rst", "_generated/compyute.nn/compyute.nn.Embedding.training.rst", "_generated/compyute.nn/compyute.nn.Embedding.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.FastGELU.rst", "_generated/compyute.nn/compyute.nn.FastGELU.__init__.rst", "_generated/compyute.nn/compyute.nn.FastGELU.backward.rst", "_generated/compyute.nn/compyute.nn.FastGELU.clean.rst", "_generated/compyute.nn/compyute.nn.FastGELU.forward.rst", "_generated/compyute.nn/compyute.nn.FastGELU.get_buffers.rst", "_generated/compyute.nn/compyute.nn.FastGELU.get_modules.rst", "_generated/compyute.nn/compyute.nn.FastGELU.get_parameters.rst", "_generated/compyute.nn/compyute.nn.FastGELU.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.FastGELU.inference.rst", "_generated/compyute.nn/compyute.nn.FastGELU.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.FastGELU.register_backward.rst", "_generated/compyute.nn/compyute.nn.FastGELU.register_forward.rst", "_generated/compyute.nn/compyute.nn.FastGELU.to_device.rst", "_generated/compyute.nn/compyute.nn.FastGELU.to_type.rst", "_generated/compyute.nn/compyute.nn.FastGELU.training.rst", "_generated/compyute.nn/compyute.nn.FastGELU.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Flatten.rst", "_generated/compyute.nn/compyute.nn.Flatten.__init__.rst", "_generated/compyute.nn/compyute.nn.Flatten.backward.rst", "_generated/compyute.nn/compyute.nn.Flatten.clean.rst", "_generated/compyute.nn/compyute.nn.Flatten.forward.rst", "_generated/compyute.nn/compyute.nn.Flatten.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Flatten.get_modules.rst", "_generated/compyute.nn/compyute.nn.Flatten.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Flatten.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Flatten.inference.rst", "_generated/compyute.nn/compyute.nn.Flatten.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Flatten.register_backward.rst", "_generated/compyute.nn/compyute.nn.Flatten.register_forward.rst", "_generated/compyute.nn/compyute.nn.Flatten.to_device.rst", "_generated/compyute.nn/compyute.nn.Flatten.to_type.rst", "_generated/compyute.nn/compyute.nn.Flatten.training.rst", "_generated/compyute.nn/compyute.nn.Flatten.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Function.rst", "_generated/compyute.nn/compyute.nn.Function.__init__.rst", "_generated/compyute.nn/compyute.nn.Function.backward.rst", "_generated/compyute.nn/compyute.nn.Function.forward.rst", "_generated/compyute.nn/compyute.nn.FunctionContext.rst", "_generated/compyute.nn/compyute.nn.FunctionContext.__init__.rst", "_generated/compyute.nn/compyute.nn.FunctionContext.add.rst", "_generated/compyute.nn/compyute.nn.FunctionContext.get.rst", "_generated/compyute.nn/compyute.nn.GELU.rst", "_generated/compyute.nn/compyute.nn.GELU.__init__.rst", "_generated/compyute.nn/compyute.nn.GELU.backward.rst", "_generated/compyute.nn/compyute.nn.GELU.clean.rst", "_generated/compyute.nn/compyute.nn.GELU.forward.rst", "_generated/compyute.nn/compyute.nn.GELU.get_buffers.rst", "_generated/compyute.nn/compyute.nn.GELU.get_modules.rst", "_generated/compyute.nn/compyute.nn.GELU.get_parameters.rst", "_generated/compyute.nn/compyute.nn.GELU.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.GELU.inference.rst", "_generated/compyute.nn/compyute.nn.GELU.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.GELU.register_backward.rst", "_generated/compyute.nn/compyute.nn.GELU.register_forward.rst", "_generated/compyute.nn/compyute.nn.GELU.to_device.rst", "_generated/compyute.nn/compyute.nn.GELU.to_type.rst", "_generated/compyute.nn/compyute.nn.GELU.training.rst", "_generated/compyute.nn/compyute.nn.GELU.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.GRU.rst", "_generated/compyute.nn/compyute.nn.GRU.__init__.rst", "_generated/compyute.nn/compyute.nn.GRU.backward.rst", "_generated/compyute.nn/compyute.nn.GRU.clean.rst", "_generated/compyute.nn/compyute.nn.GRU.forward.rst", "_generated/compyute.nn/compyute.nn.GRU.get_buffers.rst", "_generated/compyute.nn/compyute.nn.GRU.get_modules.rst", "_generated/compyute.nn/compyute.nn.GRU.get_parameters.rst", "_generated/compyute.nn/compyute.nn.GRU.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.GRU.inference.rst", "_generated/compyute.nn/compyute.nn.GRU.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.GRU.register_backward.rst", "_generated/compyute.nn/compyute.nn.GRU.register_forward.rst", "_generated/compyute.nn/compyute.nn.GRU.to_device.rst", "_generated/compyute.nn/compyute.nn.GRU.to_type.rst", "_generated/compyute.nn/compyute.nn.GRU.training.rst", "_generated/compyute.nn/compyute.nn.GRU.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Identity.rst", "_generated/compyute.nn/compyute.nn.Identity.__init__.rst", "_generated/compyute.nn/compyute.nn.Identity.backward.rst", "_generated/compyute.nn/compyute.nn.Identity.clean.rst", "_generated/compyute.nn/compyute.nn.Identity.forward.rst", "_generated/compyute.nn/compyute.nn.Identity.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Identity.get_modules.rst", "_generated/compyute.nn/compyute.nn.Identity.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Identity.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Identity.inference.rst", "_generated/compyute.nn/compyute.nn.Identity.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Identity.register_backward.rst", "_generated/compyute.nn/compyute.nn.Identity.register_forward.rst", "_generated/compyute.nn/compyute.nn.Identity.to_device.rst", "_generated/compyute.nn/compyute.nn.Identity.to_type.rst", "_generated/compyute.nn/compyute.nn.Identity.training.rst", "_generated/compyute.nn/compyute.nn.Identity.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.LSTM.rst", "_generated/compyute.nn/compyute.nn.LSTM.__init__.rst", "_generated/compyute.nn/compyute.nn.LSTM.backward.rst", "_generated/compyute.nn/compyute.nn.LSTM.clean.rst", "_generated/compyute.nn/compyute.nn.LSTM.forward.rst", "_generated/compyute.nn/compyute.nn.LSTM.get_buffers.rst", "_generated/compyute.nn/compyute.nn.LSTM.get_modules.rst", "_generated/compyute.nn/compyute.nn.LSTM.get_parameters.rst", "_generated/compyute.nn/compyute.nn.LSTM.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.LSTM.inference.rst", "_generated/compyute.nn/compyute.nn.LSTM.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.LSTM.register_backward.rst", "_generated/compyute.nn/compyute.nn.LSTM.register_forward.rst", "_generated/compyute.nn/compyute.nn.LSTM.to_device.rst", "_generated/compyute.nn/compyute.nn.LSTM.to_type.rst", "_generated/compyute.nn/compyute.nn.LSTM.training.rst", "_generated/compyute.nn/compyute.nn.LSTM.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.__init__.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.backward.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.clean.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.forward.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.get_buffers.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.get_modules.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.get_parameters.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.inference.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.register_backward.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.register_forward.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.to_device.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.to_type.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.training.rst", "_generated/compyute.nn/compyute.nn.LayerNorm.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.__init__.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.backward.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.clean.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.forward.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.get_buffers.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.get_modules.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.get_parameters.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.inference.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.register_backward.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.register_forward.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.to_device.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.to_type.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.training.rst", "_generated/compyute.nn/compyute.nn.LeakyReLU.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Linear.rst", "_generated/compyute.nn/compyute.nn.Linear.__init__.rst", "_generated/compyute.nn/compyute.nn.Linear.backward.rst", "_generated/compyute.nn/compyute.nn.Linear.clean.rst", "_generated/compyute.nn/compyute.nn.Linear.forward.rst", "_generated/compyute.nn/compyute.nn.Linear.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Linear.get_modules.rst", "_generated/compyute.nn/compyute.nn.Linear.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Linear.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Linear.inference.rst", "_generated/compyute.nn/compyute.nn.Linear.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Linear.register_backward.rst", "_generated/compyute.nn/compyute.nn.Linear.register_forward.rst", "_generated/compyute.nn/compyute.nn.Linear.to_device.rst", "_generated/compyute.nn/compyute.nn.Linear.to_type.rst", "_generated/compyute.nn/compyute.nn.Linear.training.rst", "_generated/compyute.nn/compyute.nn.Linear.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Loss.rst", "_generated/compyute.nn/compyute.nn.Loss.__init__.rst", "_generated/compyute.nn/compyute.nn.Loss.backward.rst", "_generated/compyute.nn/compyute.nn.Loss.forward.rst", "_generated/compyute.nn/compyute.nn.Loss.register_backward.rst", "_generated/compyute.nn/compyute.nn.Loss.register_forward.rst", "_generated/compyute.nn/compyute.nn.MSELoss.rst", "_generated/compyute.nn/compyute.nn.MSELoss.__init__.rst", "_generated/compyute.nn/compyute.nn.MSELoss.backward.rst", "_generated/compyute.nn/compyute.nn.MSELoss.forward.rst", "_generated/compyute.nn/compyute.nn.MSELoss.register_backward.rst", "_generated/compyute.nn/compyute.nn.MSELoss.register_forward.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.__init__.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.backward.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.clean.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.forward.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.get_modules.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.inference.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.register_backward.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.register_forward.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.to_device.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.to_type.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.training.rst", "_generated/compyute.nn/compyute.nn.MaxPooling2D.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Metric.rst", "_generated/compyute.nn/compyute.nn.Metric.__init__.rst", "_generated/compyute.nn/compyute.nn.Module.rst", "_generated/compyute.nn/compyute.nn.Module.__init__.rst", "_generated/compyute.nn/compyute.nn.Module.backward.rst", "_generated/compyute.nn/compyute.nn.Module.clean.rst", "_generated/compyute.nn/compyute.nn.Module.forward.rst", "_generated/compyute.nn/compyute.nn.Module.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Module.get_modules.rst", "_generated/compyute.nn/compyute.nn.Module.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Module.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Module.inference.rst", "_generated/compyute.nn/compyute.nn.Module.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Module.register_backward.rst", "_generated/compyute.nn/compyute.nn.Module.register_forward.rst", "_generated/compyute.nn/compyute.nn.Module.to_device.rst", "_generated/compyute.nn/compyute.nn.Module.to_type.rst", "_generated/compyute.nn/compyute.nn.Module.training.rst", "_generated/compyute.nn/compyute.nn.Module.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.ModuleList.rst", "_generated/compyute.nn/compyute.nn.ModuleList.__init__.rst", "_generated/compyute.nn/compyute.nn.ModuleList.append.rst", "_generated/compyute.nn/compyute.nn.ModuleList.clear.rst", "_generated/compyute.nn/compyute.nn.ModuleList.copy.rst", "_generated/compyute.nn/compyute.nn.ModuleList.count.rst", "_generated/compyute.nn/compyute.nn.ModuleList.extend.rst", "_generated/compyute.nn/compyute.nn.ModuleList.index.rst", "_generated/compyute.nn/compyute.nn.ModuleList.insert.rst", "_generated/compyute.nn/compyute.nn.ModuleList.pop.rst", "_generated/compyute.nn/compyute.nn.ModuleList.remove.rst", "_generated/compyute.nn/compyute.nn.ModuleList.reverse.rst", "_generated/compyute.nn/compyute.nn.ModuleList.sort.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.__init__.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.backward.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.clean.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.forward.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.get_buffers.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.get_modules.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.get_parameters.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.inference.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.register_backward.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.register_forward.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.to_device.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.to_type.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.training.rst", "_generated/compyute.nn/compyute.nn.ParallelAdd.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.__init__.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.backward.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.clean.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.forward.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.get_buffers.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.get_modules.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.get_parameters.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.inference.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.register_backward.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.register_forward.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.to_device.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.to_type.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.training.rst", "_generated/compyute.nn/compyute.nn.ParallelConcat.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Parameter.rst", "_generated/compyute.nn/compyute.nn.Parameter.__init__.rst", "_generated/compyute.nn/compyute.nn.Parameter.abs.rst", "_generated/compyute.nn/compyute.nn.Parameter.all.rst", "_generated/compyute.nn/compyute.nn.Parameter.any.rst", "_generated/compyute.nn/compyute.nn.Parameter.argmax.rst", "_generated/compyute.nn/compyute.nn.Parameter.copy.rst", "_generated/compyute.nn/compyute.nn.Parameter.imag.rst", "_generated/compyute.nn/compyute.nn.Parameter.item.rst", "_generated/compyute.nn/compyute.nn.Parameter.ito_device.rst", "_generated/compyute.nn/compyute.nn.Parameter.ito_type.rst", "_generated/compyute.nn/compyute.nn.Parameter.max.rst", "_generated/compyute.nn/compyute.nn.Parameter.mean.rst", "_generated/compyute.nn/compyute.nn.Parameter.min.rst", "_generated/compyute.nn/compyute.nn.Parameter.permute.rst", "_generated/compyute.nn/compyute.nn.Parameter.real.rst", "_generated/compyute.nn/compyute.nn.Parameter.squeeze.rst", "_generated/compyute.nn/compyute.nn.Parameter.std.rst", "_generated/compyute.nn/compyute.nn.Parameter.sum.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_complex.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_contiguous.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_cpu.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_cuda.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_device.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_double.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_float.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_half.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_int.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_list.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_long.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_numpy.rst", "_generated/compyute.nn/compyute.nn.Parameter.to_type.rst", "_generated/compyute.nn/compyute.nn.Parameter.transpose.rst", "_generated/compyute.nn/compyute.nn.Parameter.var.rst", "_generated/compyute.nn/compyute.nn.Parameter.view.rst", "_generated/compyute.nn/compyute.nn.R2.rst", "_generated/compyute.nn/compyute.nn.R2.__init__.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.__init__.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.backward.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.clean.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.forward.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.get_buffers.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.get_modules.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.get_parameters.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.inference.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.register_backward.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.register_forward.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.to_device.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.to_type.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.training.rst", "_generated/compyute.nn/compyute.nn.RMSNorm.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.ReLU.rst", "_generated/compyute.nn/compyute.nn.ReLU.__init__.rst", "_generated/compyute.nn/compyute.nn.ReLU.backward.rst", "_generated/compyute.nn/compyute.nn.ReLU.clean.rst", "_generated/compyute.nn/compyute.nn.ReLU.forward.rst", "_generated/compyute.nn/compyute.nn.ReLU.get_buffers.rst", "_generated/compyute.nn/compyute.nn.ReLU.get_modules.rst", "_generated/compyute.nn/compyute.nn.ReLU.get_parameters.rst", "_generated/compyute.nn/compyute.nn.ReLU.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.ReLU.inference.rst", "_generated/compyute.nn/compyute.nn.ReLU.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.ReLU.register_backward.rst", "_generated/compyute.nn/compyute.nn.ReLU.register_forward.rst", "_generated/compyute.nn/compyute.nn.ReLU.to_device.rst", "_generated/compyute.nn/compyute.nn.ReLU.to_type.rst", "_generated/compyute.nn/compyute.nn.ReLU.training.rst", "_generated/compyute.nn/compyute.nn.ReLU.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Recurrent.rst", "_generated/compyute.nn/compyute.nn.Recurrent.__init__.rst", "_generated/compyute.nn/compyute.nn.Recurrent.backward.rst", "_generated/compyute.nn/compyute.nn.Recurrent.clean.rst", "_generated/compyute.nn/compyute.nn.Recurrent.forward.rst", "_generated/compyute.nn/compyute.nn.Recurrent.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Recurrent.get_modules.rst", "_generated/compyute.nn/compyute.nn.Recurrent.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Recurrent.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Recurrent.inference.rst", "_generated/compyute.nn/compyute.nn.Recurrent.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Recurrent.register_backward.rst", "_generated/compyute.nn/compyute.nn.Recurrent.register_forward.rst", "_generated/compyute.nn/compyute.nn.Recurrent.to_device.rst", "_generated/compyute.nn/compyute.nn.Recurrent.to_type.rst", "_generated/compyute.nn/compyute.nn.Recurrent.training.rst", "_generated/compyute.nn/compyute.nn.Recurrent.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Reshape.rst", "_generated/compyute.nn/compyute.nn.Reshape.__init__.rst", "_generated/compyute.nn/compyute.nn.Reshape.backward.rst", "_generated/compyute.nn/compyute.nn.Reshape.clean.rst", "_generated/compyute.nn/compyute.nn.Reshape.forward.rst", "_generated/compyute.nn/compyute.nn.Reshape.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Reshape.get_modules.rst", "_generated/compyute.nn/compyute.nn.Reshape.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Reshape.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Reshape.inference.rst", "_generated/compyute.nn/compyute.nn.Reshape.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Reshape.register_backward.rst", "_generated/compyute.nn/compyute.nn.Reshape.register_forward.rst", "_generated/compyute.nn/compyute.nn.Reshape.to_device.rst", "_generated/compyute.nn/compyute.nn.Reshape.to_type.rst", "_generated/compyute.nn/compyute.nn.Reshape.training.rst", "_generated/compyute.nn/compyute.nn.Reshape.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.__init__.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.backward.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.clean.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.forward.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.get_buffers.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.get_modules.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.get_parameters.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.inference.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.register_backward.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.register_forward.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.to_device.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.to_type.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.training.rst", "_generated/compyute.nn/compyute.nn.ResidualConnection.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Sequential.rst", "_generated/compyute.nn/compyute.nn.Sequential.__init__.rst", "_generated/compyute.nn/compyute.nn.Sequential.add.rst", "_generated/compyute.nn/compyute.nn.Sequential.backward.rst", "_generated/compyute.nn/compyute.nn.Sequential.clean.rst", "_generated/compyute.nn/compyute.nn.Sequential.forward.rst", "_generated/compyute.nn/compyute.nn.Sequential.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Sequential.get_modules.rst", "_generated/compyute.nn/compyute.nn.Sequential.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Sequential.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Sequential.inference.rst", "_generated/compyute.nn/compyute.nn.Sequential.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Sequential.register_backward.rst", "_generated/compyute.nn/compyute.nn.Sequential.register_forward.rst", "_generated/compyute.nn/compyute.nn.Sequential.to_device.rst", "_generated/compyute.nn/compyute.nn.Sequential.to_type.rst", "_generated/compyute.nn/compyute.nn.Sequential.training.rst", "_generated/compyute.nn/compyute.nn.Sequential.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.SiLU.rst", "_generated/compyute.nn/compyute.nn.SiLU.__init__.rst", "_generated/compyute.nn/compyute.nn.SiLU.backward.rst", "_generated/compyute.nn/compyute.nn.SiLU.clean.rst", "_generated/compyute.nn/compyute.nn.SiLU.forward.rst", "_generated/compyute.nn/compyute.nn.SiLU.get_buffers.rst", "_generated/compyute.nn/compyute.nn.SiLU.get_modules.rst", "_generated/compyute.nn/compyute.nn.SiLU.get_parameters.rst", "_generated/compyute.nn/compyute.nn.SiLU.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.SiLU.inference.rst", "_generated/compyute.nn/compyute.nn.SiLU.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.SiLU.register_backward.rst", "_generated/compyute.nn/compyute.nn.SiLU.register_forward.rst", "_generated/compyute.nn/compyute.nn.SiLU.to_device.rst", "_generated/compyute.nn/compyute.nn.SiLU.to_type.rst", "_generated/compyute.nn/compyute.nn.SiLU.training.rst", "_generated/compyute.nn/compyute.nn.SiLU.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.__init__.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.backward.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.clean.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.forward.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.get_modules.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.inference.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.register_backward.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.register_forward.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.to_device.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.to_type.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.training.rst", "_generated/compyute.nn/compyute.nn.Sigmoid.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Slice.rst", "_generated/compyute.nn/compyute.nn.Slice.__init__.rst", "_generated/compyute.nn/compyute.nn.Slice.backward.rst", "_generated/compyute.nn/compyute.nn.Slice.clean.rst", "_generated/compyute.nn/compyute.nn.Slice.forward.rst", "_generated/compyute.nn/compyute.nn.Slice.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Slice.get_modules.rst", "_generated/compyute.nn/compyute.nn.Slice.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Slice.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Slice.inference.rst", "_generated/compyute.nn/compyute.nn.Slice.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Slice.register_backward.rst", "_generated/compyute.nn/compyute.nn.Slice.register_forward.rst", "_generated/compyute.nn/compyute.nn.Slice.to_device.rst", "_generated/compyute.nn/compyute.nn.Slice.to_type.rst", "_generated/compyute.nn/compyute.nn.Slice.training.rst", "_generated/compyute.nn/compyute.nn.Slice.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Softmax.rst", "_generated/compyute.nn/compyute.nn.Softmax.__init__.rst", "_generated/compyute.nn/compyute.nn.Softmax.backward.rst", "_generated/compyute.nn/compyute.nn.Softmax.clean.rst", "_generated/compyute.nn/compyute.nn.Softmax.forward.rst", "_generated/compyute.nn/compyute.nn.Softmax.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Softmax.get_modules.rst", "_generated/compyute.nn/compyute.nn.Softmax.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Softmax.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Softmax.inference.rst", "_generated/compyute.nn/compyute.nn.Softmax.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Softmax.register_backward.rst", "_generated/compyute.nn/compyute.nn.Softmax.register_forward.rst", "_generated/compyute.nn/compyute.nn.Softmax.to_device.rst", "_generated/compyute.nn/compyute.nn.Softmax.to_type.rst", "_generated/compyute.nn/compyute.nn.Softmax.training.rst", "_generated/compyute.nn/compyute.nn.Softmax.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Tanh.rst", "_generated/compyute.nn/compyute.nn.Tanh.__init__.rst", "_generated/compyute.nn/compyute.nn.Tanh.backward.rst", "_generated/compyute.nn/compyute.nn.Tanh.clean.rst", "_generated/compyute.nn/compyute.nn.Tanh.forward.rst", "_generated/compyute.nn/compyute.nn.Tanh.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Tanh.get_modules.rst", "_generated/compyute.nn/compyute.nn.Tanh.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Tanh.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Tanh.inference.rst", "_generated/compyute.nn/compyute.nn.Tanh.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Tanh.register_backward.rst", "_generated/compyute.nn/compyute.nn.Tanh.register_forward.rst", "_generated/compyute.nn/compyute.nn.Tanh.to_device.rst", "_generated/compyute.nn/compyute.nn.Tanh.to_type.rst", "_generated/compyute.nn/compyute.nn.Tanh.training.rst", "_generated/compyute.nn/compyute.nn.Tanh.update_parameter_grad.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.__init__.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.backward.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.clean.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.forward.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.get_buffers.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.get_modules.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.get_parameters.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.get_state_dict.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.inference.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.load_state_dict.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.register_backward.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.register_forward.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.to_device.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.to_type.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.training.rst", "_generated/compyute.nn/compyute.nn.Upsample2D.update_parameter_grad.rst", "_generated/compyute.preprocessing/compyute.preprocessing.normalize.rst", "_generated/compyute.preprocessing/compyute.preprocessing.one_hot_encode.rst", "_generated/compyute.preprocessing/compyute.preprocessing.split_train_val_test.rst", "_generated/compyute.preprocessing/compyute.preprocessing.standardize.rst", "_generated/compyute.random/compyute.random.multinomial.rst", "_generated/compyute.random/compyute.random.normal.rst", "_generated/compyute.random/compyute.random.permutation.rst", "_generated/compyute.random/compyute.random.random.rst", "_generated/compyute.random/compyute.random.set_seed.rst", "_generated/compyute.random/compyute.random.shuffle.rst", "_generated/compyute.random/compyute.random.uniform.rst", "_generated/compyute.random/compyute.random.uniform_int.rst", "_generated/compyute/compyute.Device.rst", "_generated/compyute/compyute.Device.__init__.rst", "_generated/compyute/compyute.Tensor.rst", "_generated/compyute/compyute.Tensor.__init__.rst", "_generated/compyute/compyute.Tensor.abs.rst", "_generated/compyute/compyute.Tensor.all.rst", "_generated/compyute/compyute.Tensor.any.rst", "_generated/compyute/compyute.Tensor.argmax.rst", "_generated/compyute/compyute.Tensor.copy.rst", "_generated/compyute/compyute.Tensor.imag.rst", "_generated/compyute/compyute.Tensor.item.rst", "_generated/compyute/compyute.Tensor.ito_device.rst", "_generated/compyute/compyute.Tensor.ito_type.rst", "_generated/compyute/compyute.Tensor.max.rst", "_generated/compyute/compyute.Tensor.mean.rst", "_generated/compyute/compyute.Tensor.min.rst", "_generated/compyute/compyute.Tensor.permute.rst", "_generated/compyute/compyute.Tensor.real.rst", "_generated/compyute/compyute.Tensor.squeeze.rst", "_generated/compyute/compyute.Tensor.std.rst", "_generated/compyute/compyute.Tensor.sum.rst", "_generated/compyute/compyute.Tensor.to_complex.rst", "_generated/compyute/compyute.Tensor.to_contiguous.rst", "_generated/compyute/compyute.Tensor.to_cpu.rst", "_generated/compyute/compyute.Tensor.to_cuda.rst", "_generated/compyute/compyute.Tensor.to_device.rst", "_generated/compyute/compyute.Tensor.to_double.rst", "_generated/compyute/compyute.Tensor.to_float.rst", "_generated/compyute/compyute.Tensor.to_half.rst", "_generated/compyute/compyute.Tensor.to_int.rst", "_generated/compyute/compyute.Tensor.to_list.rst", "_generated/compyute/compyute.Tensor.to_long.rst", "_generated/compyute/compyute.Tensor.to_numpy.rst", "_generated/compyute/compyute.Tensor.to_type.rst", "_generated/compyute/compyute.Tensor.transpose.rst", "_generated/compyute/compyute.Tensor.var.rst", "_generated/compyute/compyute.Tensor.view.rst", "_generated/compyute/compyute.abs.rst", "_generated/compyute/compyute.all.rst", "_generated/compyute/compyute.allclose.rst", "_generated/compyute/compyute.any.rst", "_generated/compyute/compyute.append.rst", "_generated/compyute/compyute.arange.rst", "_generated/compyute/compyute.argmax.rst", "_generated/compyute/compyute.bool_.rst", "_generated/compyute/compyute.broadcast_to.rst", "_generated/compyute/compyute.clip.rst", "_generated/compyute/compyute.complex128.rst", "_generated/compyute/compyute.complex64.rst", "_generated/compyute/compyute.concat.rst", "_generated/compyute/compyute.convolve1d_fft.rst", "_generated/compyute/compyute.convolve2d_fft.rst", "_generated/compyute/compyute.cos.rst", "_generated/compyute/compyute.cosh.rst", "_generated/compyute/compyute.cpu.rst", "_generated/compyute/compyute.cuda.rst", "_generated/compyute/compyute.debug.rst", "_generated/compyute/compyute.diagonal.rst", "_generated/compyute/compyute.dot.rst", "_generated/compyute/compyute.einsum.rst", "_generated/compyute/compyute.empty.rst", "_generated/compyute/compyute.empty_like.rst", "_generated/compyute/compyute.exp.rst", "_generated/compyute/compyute.fft1d.rst", "_generated/compyute/compyute.fft2d.rst", "_generated/compyute/compyute.flatten.rst", "_generated/compyute/compyute.flip.rst", "_generated/compyute/compyute.float16.rst", "_generated/compyute/compyute.float32.rst", "_generated/compyute/compyute.float64.rst", "_generated/compyute/compyute.full.rst", "_generated/compyute/compyute.full_like.rst", "_generated/compyute/compyute.get_diagonal.rst", "_generated/compyute/compyute.histogram.rst", "_generated/compyute/compyute.identity.rst", "_generated/compyute/compyute.ifft1d.rst", "_generated/compyute/compyute.ifft2d.rst", "_generated/compyute/compyute.inner.rst", "_generated/compyute/compyute.insert_dim.rst", "_generated/compyute/compyute.int16.rst", "_generated/compyute/compyute.int32.rst", "_generated/compyute/compyute.int64.rst", "_generated/compyute/compyute.int8.rst", "_generated/compyute/compyute.is_nan.rst", "_generated/compyute/compyute.linspace.rst", "_generated/compyute/compyute.load.rst", "_generated/compyute/compyute.log.rst", "_generated/compyute/compyute.log10.rst", "_generated/compyute/compyute.log2.rst", "_generated/compyute/compyute.max.rst", "_generated/compyute/compyute.maximum.rst", "_generated/compyute/compyute.mean.rst", "_generated/compyute/compyute.min.rst", "_generated/compyute/compyute.minimum.rst", "_generated/compyute/compyute.movedim.rst", "_generated/compyute/compyute.norm.rst", "_generated/compyute/compyute.ones.rst", "_generated/compyute/compyute.ones_like.rst", "_generated/compyute/compyute.outer.rst", "_generated/compyute/compyute.pad.rst", "_generated/compyute/compyute.pad_to_shape.rst", "_generated/compyute/compyute.permute.rst", "_generated/compyute/compyute.pooling1d.rst", "_generated/compyute/compyute.pooling2d.rst", "_generated/compyute/compyute.prod.rst", "_generated/compyute/compyute.real.rst", "_generated/compyute/compyute.repeat1d.rst", "_generated/compyute/compyute.repeat2d.rst", "_generated/compyute/compyute.reshape.rst", "_generated/compyute/compyute.round.rst", "_generated/compyute/compyute.save.rst", "_generated/compyute/compyute.sech.rst", "_generated/compyute/compyute.set_debug_mode.rst", "_generated/compyute/compyute.set_default_device.rst", "_generated/compyute/compyute.set_default_dtype.rst", "_generated/compyute/compyute.sin.rst", "_generated/compyute/compyute.sinh.rst", "_generated/compyute/compyute.split.rst", "_generated/compyute/compyute.sqrt.rst", "_generated/compyute/compyute.squeeze.rst", "_generated/compyute/compyute.stack.rst", "_generated/compyute/compyute.std.rst", "_generated/compyute/compyute.sum.rst", "_generated/compyute/compyute.tan.rst", "_generated/compyute/compyute.tanh.rst", "_generated/compyute/compyute.tensor.rst", "_generated/compyute/compyute.tensorprod.rst", "_generated/compyute/compyute.tensorsum.rst", "_generated/compyute/compyute.tile.rst", "_generated/compyute/compyute.transpose.rst", "_generated/compyute/compyute.tril.rst", "_generated/compyute/compyute.triu.rst", "_generated/compyute/compyute.unique.rst", "_generated/compyute/compyute.use_device.rst", "_generated/compyute/compyute.use_dtype.rst", "_generated/compyute/compyute.var.rst", "_generated/compyute/compyute.zeros.rst", "_generated/compyute/compyute.zeros_like.rst", "index.rst", "reference/compyute.rst", "reference/compyute.backend.rst", "reference/compyute.nn.rst", "reference/compyute.nn.functional.rst", "reference/compyute.nn.optimizers.rst", "reference/compyute.nn.trainer.rst", "reference/compyute.nn.trainer.callbacks.rst", "reference/compyute.nn.utils.rst", "reference/compyute.nn.utils.initializers.rst", "reference/compyute.nn.utils.lr_schedulers.rst", "reference/compyute.nn.utils.tensorboard.rst", "reference/compyute.preprocessing.rst", "reference/compyute.random.rst", "reference/index.rst"], "indexentries": {"__init__() (compyute.device method)": [[962, "compyute.Device.__init__", false]], "__init__() (compyute.nn.accuracy method)": [[190, "compyute.nn.Accuracy.__init__", false]], "__init__() (compyute.nn.avgpooling2d method)": [[192, "compyute.nn.AvgPooling2D.__init__", false]], "__init__() (compyute.nn.batchnorm1d method)": [[215, "compyute.nn.BatchNorm1D.__init__", false]], "__init__() (compyute.nn.batchnorm2d method)": [[232, "compyute.nn.BatchNorm2D.__init__", false]], "__init__() (compyute.nn.bceloss method)": [[209, "compyute.nn.BCELoss.__init__", false]], "__init__() (compyute.nn.buffer method)": [[249, "compyute.nn.Buffer.__init__", false]], "__init__() (compyute.nn.conv1d method)": [[284, "compyute.nn.Conv1D.__init__", false]], "__init__() (compyute.nn.conv1dblock method)": [[301, "compyute.nn.Conv1DBlock.__init__", false]], "__init__() (compyute.nn.conv2d method)": [[319, "compyute.nn.Conv2D.__init__", false]], "__init__() (compyute.nn.conv2dblock method)": [[336, "compyute.nn.Conv2DBlock.__init__", false]], "__init__() (compyute.nn.convtranspose1d method)": [[354, "compyute.nn.ConvTranspose1D.__init__", false]], "__init__() (compyute.nn.convtranspose2d method)": [[371, "compyute.nn.ConvTranspose2D.__init__", false]], "__init__() (compyute.nn.crossentropyloss method)": [[388, "compyute.nn.CrossEntropyLoss.__init__", false]], "__init__() (compyute.nn.denseblock method)": [[394, "compyute.nn.DenseBlock.__init__", false]], "__init__() (compyute.nn.diceloss method)": [[412, "compyute.nn.DiceLoss.__init__", false]], "__init__() (compyute.nn.dropout method)": [[418, "compyute.nn.Dropout.__init__", false]], "__init__() (compyute.nn.embedding method)": [[435, "compyute.nn.Embedding.__init__", false]], "__init__() (compyute.nn.fastgelu method)": [[452, "compyute.nn.FastGELU.__init__", false]], "__init__() (compyute.nn.flatten method)": [[469, "compyute.nn.Flatten.__init__", false]], "__init__() (compyute.nn.function method)": [[486, "compyute.nn.Function.__init__", false]], "__init__() (compyute.nn.functioncontext method)": [[490, "compyute.nn.FunctionContext.__init__", false]], "__init__() (compyute.nn.gelu method)": [[494, "compyute.nn.GELU.__init__", false]], "__init__() (compyute.nn.gru method)": [[511, "compyute.nn.GRU.__init__", false]], "__init__() (compyute.nn.identity method)": [[528, "compyute.nn.Identity.__init__", false]], "__init__() (compyute.nn.layernorm method)": [[562, "compyute.nn.LayerNorm.__init__", false]], "__init__() (compyute.nn.leakyrelu method)": [[579, "compyute.nn.LeakyReLU.__init__", false]], "__init__() (compyute.nn.linear method)": [[596, "compyute.nn.Linear.__init__", false]], "__init__() (compyute.nn.loss method)": [[613, "compyute.nn.Loss.__init__", false]], "__init__() (compyute.nn.lstm method)": [[545, "compyute.nn.LSTM.__init__", false]], "__init__() (compyute.nn.maxpooling2d method)": [[625, "compyute.nn.MaxPooling2D.__init__", false]], "__init__() (compyute.nn.metric method)": [[642, "compyute.nn.Metric.__init__", false]], "__init__() (compyute.nn.module method)": [[644, "compyute.nn.Module.__init__", false]], "__init__() (compyute.nn.modulelist method)": [[661, "compyute.nn.ModuleList.__init__", false]], "__init__() (compyute.nn.mseloss method)": [[619, "compyute.nn.MSELoss.__init__", false]], "__init__() (compyute.nn.optimizers.adam method)": [[40, "compyute.nn.optimizers.Adam.__init__", false]], "__init__() (compyute.nn.optimizers.adamw method)": [[47, "compyute.nn.optimizers.AdamW.__init__", false]], "__init__() (compyute.nn.optimizers.nadam method)": [[54, "compyute.nn.optimizers.NAdam.__init__", false]], "__init__() (compyute.nn.optimizers.optimizer method)": [[61, "compyute.nn.optimizers.Optimizer.__init__", false]], "__init__() (compyute.nn.optimizers.sgd method)": [[68, "compyute.nn.optimizers.SGD.__init__", false]], "__init__() (compyute.nn.paralleladd method)": [[674, "compyute.nn.ParallelAdd.__init__", false]], "__init__() (compyute.nn.parallelconcat method)": [[691, "compyute.nn.ParallelConcat.__init__", false]], "__init__() (compyute.nn.parameter method)": [[708, "compyute.nn.Parameter.__init__", false]], "__init__() (compyute.nn.r2 method)": [[743, "compyute.nn.R2.__init__", false]], "__init__() (compyute.nn.recurrent method)": [[779, "compyute.nn.Recurrent.__init__", false]], "__init__() (compyute.nn.relu method)": [[762, "compyute.nn.ReLU.__init__", false]], "__init__() (compyute.nn.reshape method)": [[796, "compyute.nn.Reshape.__init__", false]], "__init__() (compyute.nn.residualconnection method)": [[813, "compyute.nn.ResidualConnection.__init__", false]], "__init__() (compyute.nn.rmsnorm method)": [[745, "compyute.nn.RMSNorm.__init__", false]], "__init__() (compyute.nn.sequential method)": [[830, "compyute.nn.Sequential.__init__", false]], "__init__() (compyute.nn.sigmoid method)": [[865, "compyute.nn.Sigmoid.__init__", false]], "__init__() (compyute.nn.silu method)": [[848, "compyute.nn.SiLU.__init__", false]], "__init__() (compyute.nn.slice method)": [[882, "compyute.nn.Slice.__init__", false]], "__init__() (compyute.nn.softmax method)": [[899, "compyute.nn.Softmax.__init__", false]], "__init__() (compyute.nn.tanh method)": [[916, "compyute.nn.Tanh.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.adaptivelrscheduler method)": [[75, "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.callback method)": [[83, "compyute.nn.trainer.callbacks.Callback.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.cosinelrscheduler method)": [[91, "compyute.nn.trainer.callbacks.CosineLrScheduler.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.earlystopping method)": [[99, "compyute.nn.trainer.callbacks.EarlyStopping.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.exponentiallrscheduler method)": [[107, "compyute.nn.trainer.callbacks.ExponentialLrScheduler.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.history method)": [[115, "compyute.nn.trainer.callbacks.History.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.multisteplrscheduler method)": [[123, "compyute.nn.trainer.callbacks.MultistepLrScheduler.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.progressbar method)": [[131, "compyute.nn.trainer.callbacks.ProgressBar.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.steplrscheduler method)": [[139, "compyute.nn.trainer.callbacks.StepLrScheduler.__init__", false]], "__init__() (compyute.nn.trainer.callbacks.tensorboard method)": [[147, "compyute.nn.trainer.callbacks.Tensorboard.__init__", false]], "__init__() (compyute.nn.trainer.trainer method)": [[155, "compyute.nn.trainer.Trainer.__init__", false]], "__init__() (compyute.nn.upsample2d method)": [[933, "compyute.nn.Upsample2D.__init__", false]], "__init__() (compyute.nn.utils.dataloader method)": [[185, "compyute.nn.utils.Dataloader.__init__", false]], "__init__() (compyute.nn.utils.lr_schedulers.adaptivelrscheduler method)": [[167, "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.__init__", false]], "__init__() (compyute.nn.utils.lr_schedulers.cosinelrscheduler method)": [[170, "compyute.nn.utils.lr_schedulers.CosineLrScheduler.__init__", false]], "__init__() (compyute.nn.utils.lr_schedulers.exponentiallrscheduler method)": [[173, "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.__init__", false]], "__init__() (compyute.nn.utils.lr_schedulers.lrscheduler method)": [[176, "compyute.nn.utils.lr_schedulers.LrScheduler.__init__", false]], "__init__() (compyute.nn.utils.lr_schedulers.multisteplrscheduler method)": [[179, "compyute.nn.utils.lr_schedulers.MultistepLrScheduler.__init__", false]], "__init__() (compyute.nn.utils.lr_schedulers.steplrscheduler method)": [[182, "compyute.nn.utils.lr_schedulers.StepLrScheduler.__init__", false]], "__init__() (compyute.tensor method)": [[964, "compyute.Tensor.__init__", false]], "abs() (compyute.nn.buffer method)": [[250, "compyute.nn.Buffer.abs", false]], "abs() (compyute.nn.parameter method)": [[709, "compyute.nn.Parameter.abs", false]], "abs() (compyute.tensor method)": [[965, "compyute.Tensor.abs", false]], "abs() (in module compyute)": [[998, "compyute.abs", false]], "accuracy (class in compyute.nn)": [[189, "compyute.nn.Accuracy", false]], "accuracy_score() (in module compyute.nn.functional)": [[4, "compyute.nn.functional.accuracy_score", false]], "adam (class in compyute.nn.optimizers)": [[39, "compyute.nn.optimizers.Adam", false]], "adamw (class in compyute.nn.optimizers)": [[46, "compyute.nn.optimizers.AdamW", false]], "adaptivelrscheduler (class in compyute.nn.trainer.callbacks)": [[74, "compyute.nn.trainer.callbacks.AdaptiveLrScheduler", false]], "adaptivelrscheduler (class in compyute.nn.utils.lr_schedulers)": [[166, "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler", false]], "add() (compyute.nn.conv1dblock method)": [[302, "compyute.nn.Conv1DBlock.add", false]], "add() (compyute.nn.conv2dblock method)": [[337, "compyute.nn.Conv2DBlock.add", false]], "add() (compyute.nn.denseblock method)": [[395, "compyute.nn.DenseBlock.add", false]], "add() (compyute.nn.functioncontext method)": [[491, "compyute.nn.FunctionContext.add", false]], "add() (compyute.nn.sequential method)": [[831, "compyute.nn.Sequential.add", false]], "all() (compyute.nn.buffer method)": [[251, "compyute.nn.Buffer.all", false]], "all() (compyute.nn.parameter method)": [[710, "compyute.nn.Parameter.all", false]], "all() (compyute.tensor method)": [[966, "compyute.Tensor.all", false]], "all() (in module compyute)": [[999, "compyute.all", false]], "allclose() (in module compyute)": [[1000, "compyute.allclose", false]], "any() (compyute.nn.buffer method)": [[252, "compyute.nn.Buffer.any", false]], "any() (compyute.nn.parameter method)": [[711, "compyute.nn.Parameter.any", false]], "any() (compyute.tensor method)": [[967, "compyute.Tensor.any", false]], "any() (in module compyute)": [[1001, "compyute.any", false]], "append() (compyute.nn.modulelist method)": [[662, "compyute.nn.ModuleList.append", false]], "append() (in module compyute)": [[1002, "compyute.append", false]], "arange() (in module compyute)": [[1003, "compyute.arange", false]], "argmax() (compyute.nn.buffer method)": [[253, "compyute.nn.Buffer.argmax", false]], "argmax() (compyute.nn.parameter method)": [[712, "compyute.nn.Parameter.argmax", false]], "argmax() (compyute.tensor method)": [[968, "compyute.Tensor.argmax", false]], "argmax() (in module compyute)": [[1004, "compyute.argmax", false]], "avgpooling2d (class in compyute.nn)": [[191, "compyute.nn.AvgPooling2D", false]], "avgpooling2d() (in module compyute.nn.functional)": [[5, "compyute.nn.functional.avgpooling2d", false]], "backward() (compyute.nn.avgpooling2d method)": [[193, "compyute.nn.AvgPooling2D.backward", false]], "backward() (compyute.nn.batchnorm1d method)": [[216, "compyute.nn.BatchNorm1D.backward", false]], "backward() (compyute.nn.batchnorm2d method)": [[233, "compyute.nn.BatchNorm2D.backward", false]], "backward() (compyute.nn.bceloss method)": [[210, "compyute.nn.BCELoss.backward", false]], "backward() (compyute.nn.conv1d method)": [[285, "compyute.nn.Conv1D.backward", false]], "backward() (compyute.nn.conv1dblock method)": [[303, "compyute.nn.Conv1DBlock.backward", false]], "backward() (compyute.nn.conv2d method)": [[320, "compyute.nn.Conv2D.backward", false]], "backward() (compyute.nn.conv2dblock method)": [[338, "compyute.nn.Conv2DBlock.backward", false]], "backward() (compyute.nn.convtranspose1d method)": [[355, "compyute.nn.ConvTranspose1D.backward", false]], "backward() (compyute.nn.convtranspose2d method)": [[372, "compyute.nn.ConvTranspose2D.backward", false]], "backward() (compyute.nn.crossentropyloss method)": [[389, "compyute.nn.CrossEntropyLoss.backward", false]], "backward() (compyute.nn.denseblock method)": [[396, "compyute.nn.DenseBlock.backward", false]], "backward() (compyute.nn.diceloss method)": [[413, "compyute.nn.DiceLoss.backward", false]], "backward() (compyute.nn.dropout method)": [[419, "compyute.nn.Dropout.backward", false]], "backward() (compyute.nn.embedding method)": [[436, "compyute.nn.Embedding.backward", false]], "backward() (compyute.nn.fastgelu method)": [[453, "compyute.nn.FastGELU.backward", false]], "backward() (compyute.nn.flatten method)": [[470, "compyute.nn.Flatten.backward", false]], "backward() (compyute.nn.function static method)": [[487, "compyute.nn.Function.backward", false]], "backward() (compyute.nn.gelu method)": [[495, "compyute.nn.GELU.backward", false]], "backward() (compyute.nn.gru method)": [[512, "compyute.nn.GRU.backward", false]], "backward() (compyute.nn.identity method)": [[529, "compyute.nn.Identity.backward", false]], "backward() (compyute.nn.layernorm method)": [[563, "compyute.nn.LayerNorm.backward", false]], "backward() (compyute.nn.leakyrelu method)": [[580, "compyute.nn.LeakyReLU.backward", false]], "backward() (compyute.nn.linear method)": [[597, "compyute.nn.Linear.backward", false]], "backward() (compyute.nn.loss method)": [[614, "compyute.nn.Loss.backward", false]], "backward() (compyute.nn.lstm method)": [[546, "compyute.nn.LSTM.backward", false]], "backward() (compyute.nn.maxpooling2d method)": [[626, "compyute.nn.MaxPooling2D.backward", false]], "backward() (compyute.nn.module method)": [[645, "compyute.nn.Module.backward", false]], "backward() (compyute.nn.mseloss method)": [[620, "compyute.nn.MSELoss.backward", false]], "backward() (compyute.nn.paralleladd method)": [[675, "compyute.nn.ParallelAdd.backward", false]], "backward() (compyute.nn.parallelconcat method)": [[692, "compyute.nn.ParallelConcat.backward", false]], "backward() (compyute.nn.recurrent method)": [[780, "compyute.nn.Recurrent.backward", false]], "backward() (compyute.nn.relu method)": [[763, "compyute.nn.ReLU.backward", false]], "backward() (compyute.nn.reshape method)": [[797, "compyute.nn.Reshape.backward", false]], "backward() (compyute.nn.residualconnection method)": [[814, "compyute.nn.ResidualConnection.backward", false]], "backward() (compyute.nn.rmsnorm method)": [[746, "compyute.nn.RMSNorm.backward", false]], "backward() (compyute.nn.sequential method)": [[832, "compyute.nn.Sequential.backward", false]], "backward() (compyute.nn.sigmoid method)": [[866, "compyute.nn.Sigmoid.backward", false]], "backward() (compyute.nn.silu method)": [[849, "compyute.nn.SiLU.backward", false]], "backward() (compyute.nn.slice method)": [[883, "compyute.nn.Slice.backward", false]], "backward() (compyute.nn.softmax method)": [[900, "compyute.nn.Softmax.backward", false]], "backward() (compyute.nn.tanh method)": [[917, "compyute.nn.Tanh.backward", false]], "backward() (compyute.nn.upsample2d method)": [[934, "compyute.nn.Upsample2D.backward", false]], "batched() (in module compyute.nn.utils)": [[186, "compyute.nn.utils.batched", false]], "batchnorm1d (class in compyute.nn)": [[214, "compyute.nn.BatchNorm1D", false]], "batchnorm1d() (in module compyute.nn.functional)": [[6, "compyute.nn.functional.batchnorm1d", false]], "batchnorm2d (class in compyute.nn)": [[231, "compyute.nn.BatchNorm2D", false]], "batchnorm2d() (in module compyute.nn.functional)": [[7, "compyute.nn.functional.batchnorm2d", false]], "bce_loss() (in module compyute.nn.functional)": [[8, "compyute.nn.functional.bce_loss", false]], "bceloss (class in compyute.nn)": [[208, "compyute.nn.BCELoss", false]], "bool_ (in module compyute)": [[1005, "compyute.bool_", false]], "broadcast_to() (in module compyute)": [[1006, "compyute.broadcast_to", false]], "buffer (class in compyute.nn)": [[248, "compyute.nn.Buffer", false]], "callback (class in compyute.nn.trainer.callbacks)": [[82, "compyute.nn.trainer.callbacks.Callback", false]], "clean() (compyute.nn.avgpooling2d method)": [[194, "compyute.nn.AvgPooling2D.clean", false]], "clean() (compyute.nn.batchnorm1d method)": [[217, "compyute.nn.BatchNorm1D.clean", false]], "clean() (compyute.nn.batchnorm2d method)": [[234, "compyute.nn.BatchNorm2D.clean", false]], "clean() (compyute.nn.conv1d method)": [[286, "compyute.nn.Conv1D.clean", false]], "clean() (compyute.nn.conv1dblock method)": [[304, "compyute.nn.Conv1DBlock.clean", false]], "clean() (compyute.nn.conv2d method)": [[321, "compyute.nn.Conv2D.clean", false]], "clean() (compyute.nn.conv2dblock method)": [[339, "compyute.nn.Conv2DBlock.clean", false]], "clean() (compyute.nn.convtranspose1d method)": [[356, "compyute.nn.ConvTranspose1D.clean", false]], "clean() (compyute.nn.convtranspose2d method)": [[373, "compyute.nn.ConvTranspose2D.clean", false]], "clean() (compyute.nn.denseblock method)": [[397, "compyute.nn.DenseBlock.clean", false]], "clean() (compyute.nn.dropout method)": [[420, "compyute.nn.Dropout.clean", false]], "clean() (compyute.nn.embedding method)": [[437, "compyute.nn.Embedding.clean", false]], "clean() (compyute.nn.fastgelu method)": [[454, "compyute.nn.FastGELU.clean", false]], "clean() (compyute.nn.flatten method)": [[471, "compyute.nn.Flatten.clean", false]], "clean() (compyute.nn.gelu method)": [[496, "compyute.nn.GELU.clean", false]], "clean() (compyute.nn.gru method)": [[513, "compyute.nn.GRU.clean", false]], "clean() (compyute.nn.identity method)": [[530, "compyute.nn.Identity.clean", false]], "clean() (compyute.nn.layernorm method)": [[564, "compyute.nn.LayerNorm.clean", false]], "clean() (compyute.nn.leakyrelu method)": [[581, "compyute.nn.LeakyReLU.clean", false]], "clean() (compyute.nn.linear method)": [[598, "compyute.nn.Linear.clean", false]], "clean() (compyute.nn.lstm method)": [[547, "compyute.nn.LSTM.clean", false]], "clean() (compyute.nn.maxpooling2d method)": [[627, "compyute.nn.MaxPooling2D.clean", false]], "clean() (compyute.nn.module method)": [[646, "compyute.nn.Module.clean", false]], "clean() (compyute.nn.paralleladd method)": [[676, "compyute.nn.ParallelAdd.clean", false]], "clean() (compyute.nn.parallelconcat method)": [[693, "compyute.nn.ParallelConcat.clean", false]], "clean() (compyute.nn.recurrent method)": [[781, "compyute.nn.Recurrent.clean", false]], "clean() (compyute.nn.relu method)": [[764, "compyute.nn.ReLU.clean", false]], "clean() (compyute.nn.reshape method)": [[798, "compyute.nn.Reshape.clean", false]], "clean() (compyute.nn.residualconnection method)": [[815, "compyute.nn.ResidualConnection.clean", false]], "clean() (compyute.nn.rmsnorm method)": [[747, "compyute.nn.RMSNorm.clean", false]], "clean() (compyute.nn.sequential method)": [[833, "compyute.nn.Sequential.clean", false]], "clean() (compyute.nn.sigmoid method)": [[867, "compyute.nn.Sigmoid.clean", false]], "clean() (compyute.nn.silu method)": [[850, "compyute.nn.SiLU.clean", false]], "clean() (compyute.nn.slice method)": [[884, "compyute.nn.Slice.clean", false]], "clean() (compyute.nn.softmax method)": [[901, "compyute.nn.Softmax.clean", false]], "clean() (compyute.nn.tanh method)": [[918, "compyute.nn.Tanh.clean", false]], "clean() (compyute.nn.upsample2d method)": [[935, "compyute.nn.Upsample2D.clean", false]], "clear() (compyute.nn.modulelist method)": [[663, "compyute.nn.ModuleList.clear", false]], "clip() (in module compyute)": [[1007, "compyute.clip", false]], "clip_grad_norm() (in module compyute.nn.utils)": [[187, "compyute.nn.utils.clip_grad_norm", false]], "complex128 (in module compyute)": [[1008, "compyute.complex128", false]], "complex64 (in module compyute)": [[1009, "compyute.complex64", false]], "concat() (in module compyute)": [[1010, "compyute.concat", false]], "conv1d (class in compyute.nn)": [[283, "compyute.nn.Conv1D", false]], "conv1d() (in module compyute.nn.functional)": [[9, "compyute.nn.functional.conv1d", false]], "conv1dblock (class in compyute.nn)": [[300, "compyute.nn.Conv1DBlock", false]], "conv2d (class in compyute.nn)": [[318, "compyute.nn.Conv2D", false]], "conv2d() (in module compyute.nn.functional)": [[10, "compyute.nn.functional.conv2d", false]], "conv2dblock (class in compyute.nn)": [[335, "compyute.nn.Conv2DBlock", false]], "conv_transpose1d() (in module compyute.nn.functional)": [[11, "compyute.nn.functional.conv_transpose1d", false]], "conv_transpose2d() (in module compyute.nn.functional)": [[12, "compyute.nn.functional.conv_transpose2d", false]], "convolve1d_fft() (in module compyute)": [[1011, "compyute.convolve1d_fft", false]], "convolve2d_fft() (in module compyute)": [[1012, "compyute.convolve2d_fft", false]], "convtranspose1d (class in compyute.nn)": [[353, "compyute.nn.ConvTranspose1D", false]], "convtranspose2d (class in compyute.nn)": [[370, "compyute.nn.ConvTranspose2D", false]], "copy() (compyute.nn.buffer method)": [[254, "compyute.nn.Buffer.copy", false]], "copy() (compyute.nn.modulelist method)": [[664, "compyute.nn.ModuleList.copy", false]], "copy() (compyute.nn.parameter method)": [[713, "compyute.nn.Parameter.copy", false]], "copy() (compyute.tensor method)": [[969, "compyute.Tensor.copy", false]], "cos() (in module compyute)": [[1013, "compyute.cos", false]], "cosh() (in module compyute)": [[1014, "compyute.cosh", false]], "cosinelrscheduler (class in compyute.nn.trainer.callbacks)": [[90, "compyute.nn.trainer.callbacks.CosineLrScheduler", false]], "cosinelrscheduler (class in compyute.nn.utils.lr_schedulers)": [[169, "compyute.nn.utils.lr_schedulers.CosineLrScheduler", false]], "count() (compyute.nn.modulelist method)": [[665, "compyute.nn.ModuleList.count", false]], "cpu (in module compyute)": [[1015, "compyute.cpu", false]], "cross_entropy_loss() (in module compyute.nn.functional)": [[13, "compyute.nn.functional.cross_entropy_loss", false]], "crossentropyloss (class in compyute.nn)": [[387, "compyute.nn.CrossEntropyLoss", false]], "cuda (in module compyute)": [[1016, "compyute.cuda", false]], "dataloader (class in compyute.nn.utils)": [[184, "compyute.nn.utils.Dataloader", false]], "debug() (in module compyute)": [[1017, "compyute.debug", false]], "denseblock (class in compyute.nn)": [[393, "compyute.nn.DenseBlock", false]], "device (class in compyute)": [[961, "compyute.Device", false]], "diagonal() (in module compyute)": [[1018, "compyute.diagonal", false]], "dice_loss() (in module compyute.nn.functional)": [[14, "compyute.nn.functional.dice_loss", false]], "diceloss (class in compyute.nn)": [[411, "compyute.nn.DiceLoss", false]], "dilate1d() (in module compyute.nn.functional)": [[15, "compyute.nn.functional.dilate1d", false]], "dilate2d() (in module compyute.nn.functional)": [[16, "compyute.nn.functional.dilate2d", false]], "dot() (in module compyute)": [[1019, "compyute.dot", false]], "dropout (class in compyute.nn)": [[417, "compyute.nn.Dropout", false]], "dropout() (in module compyute.nn.functional)": [[17, "compyute.nn.functional.dropout", false]], "earlystopping (class in compyute.nn.trainer.callbacks)": [[98, "compyute.nn.trainer.callbacks.EarlyStopping", false]], "einsum() (in module compyute)": [[1020, "compyute.einsum", false]], "embedding (class in compyute.nn)": [[434, "compyute.nn.Embedding", false]], "embedding() (in module compyute.nn.functional)": [[18, "compyute.nn.functional.embedding", false]], "empty() (in module compyute)": [[1021, "compyute.empty", false]], "empty_like() (in module compyute)": [[1022, "compyute.empty_like", false]], "evaluate_model() (compyute.nn.trainer.trainer method)": [[156, "compyute.nn.trainer.Trainer.evaluate_model", false]], "exp() (in module compyute)": [[1023, "compyute.exp", false]], "exponentiallrscheduler (class in compyute.nn.trainer.callbacks)": [[106, "compyute.nn.trainer.callbacks.ExponentialLrScheduler", false]], "exponentiallrscheduler (class in compyute.nn.utils.lr_schedulers)": [[172, "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler", false]], "extend() (compyute.nn.modulelist method)": [[666, "compyute.nn.ModuleList.extend", false]], "fast_gelu() (in module compyute.nn.functional)": [[19, "compyute.nn.functional.fast_gelu", false]], "fastgelu (class in compyute.nn)": [[451, "compyute.nn.FastGELU", false]], "fft1d() (in module compyute)": [[1024, "compyute.fft1d", false]], "fft2d() (in module compyute)": [[1025, "compyute.fft2d", false]], "flatten (class in compyute.nn)": [[468, "compyute.nn.Flatten", false]], "flatten() (in module compyute)": [[1026, "compyute.flatten", false]], "flip() (in module compyute)": [[1027, "compyute.flip", false]], "float16 (in module compyute)": [[1028, "compyute.float16", false]], "float32 (in module compyute)": [[1029, "compyute.float32", false]], "float64 (in module compyute)": [[1030, "compyute.float64", false]], "forward() (compyute.nn.avgpooling2d method)": [[195, "compyute.nn.AvgPooling2D.forward", false]], "forward() (compyute.nn.batchnorm1d method)": [[218, "compyute.nn.BatchNorm1D.forward", false]], "forward() (compyute.nn.batchnorm2d method)": [[235, "compyute.nn.BatchNorm2D.forward", false]], "forward() (compyute.nn.bceloss method)": [[211, "compyute.nn.BCELoss.forward", false]], "forward() (compyute.nn.conv1d method)": [[287, "compyute.nn.Conv1D.forward", false]], "forward() (compyute.nn.conv1dblock method)": [[305, "compyute.nn.Conv1DBlock.forward", false]], "forward() (compyute.nn.conv2d method)": [[322, "compyute.nn.Conv2D.forward", false]], "forward() (compyute.nn.conv2dblock method)": [[340, "compyute.nn.Conv2DBlock.forward", false]], "forward() (compyute.nn.convtranspose1d method)": [[357, "compyute.nn.ConvTranspose1D.forward", false]], "forward() (compyute.nn.convtranspose2d method)": [[374, "compyute.nn.ConvTranspose2D.forward", false]], "forward() (compyute.nn.crossentropyloss method)": [[390, "compyute.nn.CrossEntropyLoss.forward", false]], "forward() (compyute.nn.denseblock method)": [[398, "compyute.nn.DenseBlock.forward", false]], "forward() (compyute.nn.diceloss method)": [[414, "compyute.nn.DiceLoss.forward", false]], "forward() (compyute.nn.dropout method)": [[421, "compyute.nn.Dropout.forward", false]], "forward() (compyute.nn.embedding method)": [[438, "compyute.nn.Embedding.forward", false]], "forward() (compyute.nn.fastgelu method)": [[455, "compyute.nn.FastGELU.forward", false]], "forward() (compyute.nn.flatten method)": [[472, "compyute.nn.Flatten.forward", false]], "forward() (compyute.nn.function static method)": [[488, "compyute.nn.Function.forward", false]], "forward() (compyute.nn.gelu method)": [[497, "compyute.nn.GELU.forward", false]], "forward() (compyute.nn.gru method)": [[514, "compyute.nn.GRU.forward", false]], "forward() (compyute.nn.identity method)": [[531, "compyute.nn.Identity.forward", false]], "forward() (compyute.nn.layernorm method)": [[565, "compyute.nn.LayerNorm.forward", false]], "forward() (compyute.nn.leakyrelu method)": [[582, "compyute.nn.LeakyReLU.forward", false]], "forward() (compyute.nn.linear method)": [[599, "compyute.nn.Linear.forward", false]], "forward() (compyute.nn.loss method)": [[615, "compyute.nn.Loss.forward", false]], "forward() (compyute.nn.lstm method)": [[548, "compyute.nn.LSTM.forward", false]], "forward() (compyute.nn.maxpooling2d method)": [[628, "compyute.nn.MaxPooling2D.forward", false]], "forward() (compyute.nn.module method)": [[647, "compyute.nn.Module.forward", false]], "forward() (compyute.nn.mseloss method)": [[621, "compyute.nn.MSELoss.forward", false]], "forward() (compyute.nn.paralleladd method)": [[677, "compyute.nn.ParallelAdd.forward", false]], "forward() (compyute.nn.parallelconcat method)": [[694, "compyute.nn.ParallelConcat.forward", false]], "forward() (compyute.nn.recurrent method)": [[782, "compyute.nn.Recurrent.forward", false]], "forward() (compyute.nn.relu method)": [[765, "compyute.nn.ReLU.forward", false]], "forward() (compyute.nn.reshape method)": [[799, "compyute.nn.Reshape.forward", false]], "forward() (compyute.nn.residualconnection method)": [[816, "compyute.nn.ResidualConnection.forward", false]], "forward() (compyute.nn.rmsnorm method)": [[748, "compyute.nn.RMSNorm.forward", false]], "forward() (compyute.nn.sequential method)": [[834, "compyute.nn.Sequential.forward", false]], "forward() (compyute.nn.sigmoid method)": [[868, "compyute.nn.Sigmoid.forward", false]], "forward() (compyute.nn.silu method)": [[851, "compyute.nn.SiLU.forward", false]], "forward() (compyute.nn.slice method)": [[885, "compyute.nn.Slice.forward", false]], "forward() (compyute.nn.softmax method)": [[902, "compyute.nn.Softmax.forward", false]], "forward() (compyute.nn.tanh method)": [[919, "compyute.nn.Tanh.forward", false]], "forward() (compyute.nn.upsample2d method)": [[936, "compyute.nn.Upsample2D.forward", false]], "free_memory() (in module compyute.backend)": [[0, "compyute.backend.free_memory", false]], "full() (in module compyute)": [[1031, "compyute.full", false]], "full_like() (in module compyute)": [[1032, "compyute.full_like", false]], "function (class in compyute.nn)": [[485, "compyute.nn.Function", false]], "functioncontext (class in compyute.nn)": [[489, "compyute.nn.FunctionContext", false]], "gelu (class in compyute.nn)": [[493, "compyute.nn.GELU", false]], "gelu() (in module compyute.nn.functional)": [[20, "compyute.nn.functional.gelu", false]], "get() (compyute.nn.functioncontext method)": [[492, "compyute.nn.FunctionContext.get", false]], "get_buffers() (compyute.nn.avgpooling2d method)": [[196, "compyute.nn.AvgPooling2D.get_buffers", false]], "get_buffers() (compyute.nn.batchnorm1d method)": [[219, "compyute.nn.BatchNorm1D.get_buffers", false]], "get_buffers() (compyute.nn.batchnorm2d method)": [[236, "compyute.nn.BatchNorm2D.get_buffers", false]], "get_buffers() (compyute.nn.conv1d method)": [[288, "compyute.nn.Conv1D.get_buffers", false]], "get_buffers() (compyute.nn.conv1dblock method)": [[306, "compyute.nn.Conv1DBlock.get_buffers", false]], "get_buffers() (compyute.nn.conv2d method)": [[323, "compyute.nn.Conv2D.get_buffers", false]], "get_buffers() (compyute.nn.conv2dblock method)": [[341, "compyute.nn.Conv2DBlock.get_buffers", false]], "get_buffers() (compyute.nn.convtranspose1d method)": [[358, "compyute.nn.ConvTranspose1D.get_buffers", false]], "get_buffers() (compyute.nn.convtranspose2d method)": [[375, "compyute.nn.ConvTranspose2D.get_buffers", false]], "get_buffers() (compyute.nn.denseblock method)": [[399, "compyute.nn.DenseBlock.get_buffers", false]], "get_buffers() (compyute.nn.dropout method)": [[422, "compyute.nn.Dropout.get_buffers", false]], "get_buffers() (compyute.nn.embedding method)": [[439, "compyute.nn.Embedding.get_buffers", false]], "get_buffers() (compyute.nn.fastgelu method)": [[456, "compyute.nn.FastGELU.get_buffers", false]], "get_buffers() (compyute.nn.flatten method)": [[473, "compyute.nn.Flatten.get_buffers", false]], "get_buffers() (compyute.nn.gelu method)": [[498, "compyute.nn.GELU.get_buffers", false]], "get_buffers() (compyute.nn.gru method)": [[515, "compyute.nn.GRU.get_buffers", false]], "get_buffers() (compyute.nn.identity method)": [[532, "compyute.nn.Identity.get_buffers", false]], "get_buffers() (compyute.nn.layernorm method)": [[566, "compyute.nn.LayerNorm.get_buffers", false]], "get_buffers() (compyute.nn.leakyrelu method)": [[583, "compyute.nn.LeakyReLU.get_buffers", false]], "get_buffers() (compyute.nn.linear method)": [[600, "compyute.nn.Linear.get_buffers", false]], "get_buffers() (compyute.nn.lstm method)": [[549, "compyute.nn.LSTM.get_buffers", false]], "get_buffers() (compyute.nn.maxpooling2d method)": [[629, "compyute.nn.MaxPooling2D.get_buffers", false]], "get_buffers() (compyute.nn.module method)": [[648, "compyute.nn.Module.get_buffers", false]], "get_buffers() (compyute.nn.paralleladd method)": [[678, "compyute.nn.ParallelAdd.get_buffers", false]], "get_buffers() (compyute.nn.parallelconcat method)": [[695, "compyute.nn.ParallelConcat.get_buffers", false]], "get_buffers() (compyute.nn.recurrent method)": [[783, "compyute.nn.Recurrent.get_buffers", false]], "get_buffers() (compyute.nn.relu method)": [[766, "compyute.nn.ReLU.get_buffers", false]], "get_buffers() (compyute.nn.reshape method)": [[800, "compyute.nn.Reshape.get_buffers", false]], "get_buffers() (compyute.nn.residualconnection method)": [[817, "compyute.nn.ResidualConnection.get_buffers", false]], "get_buffers() (compyute.nn.rmsnorm method)": [[749, "compyute.nn.RMSNorm.get_buffers", false]], "get_buffers() (compyute.nn.sequential method)": [[835, "compyute.nn.Sequential.get_buffers", false]], "get_buffers() (compyute.nn.sigmoid method)": [[869, "compyute.nn.Sigmoid.get_buffers", false]], "get_buffers() (compyute.nn.silu method)": [[852, "compyute.nn.SiLU.get_buffers", false]], "get_buffers() (compyute.nn.slice method)": [[886, "compyute.nn.Slice.get_buffers", false]], "get_buffers() (compyute.nn.softmax method)": [[903, "compyute.nn.Softmax.get_buffers", false]], "get_buffers() (compyute.nn.tanh method)": [[920, "compyute.nn.Tanh.get_buffers", false]], "get_buffers() (compyute.nn.upsample2d method)": [[937, "compyute.nn.Upsample2D.get_buffers", false]], "get_device_count() (in module compyute.backend)": [[1, "compyute.backend.get_device_count", false]], "get_diagonal() (in module compyute)": [[1033, "compyute.get_diagonal", false]], "get_module_summary() (in module compyute.nn.utils)": [[188, "compyute.nn.utils.get_module_summary", false]], "get_modules() (compyute.nn.avgpooling2d method)": [[197, "compyute.nn.AvgPooling2D.get_modules", false]], "get_modules() (compyute.nn.batchnorm1d method)": [[220, "compyute.nn.BatchNorm1D.get_modules", false]], "get_modules() (compyute.nn.batchnorm2d method)": [[237, "compyute.nn.BatchNorm2D.get_modules", false]], "get_modules() (compyute.nn.conv1d method)": [[289, "compyute.nn.Conv1D.get_modules", false]], "get_modules() (compyute.nn.conv1dblock method)": [[307, "compyute.nn.Conv1DBlock.get_modules", false]], "get_modules() (compyute.nn.conv2d method)": [[324, "compyute.nn.Conv2D.get_modules", false]], "get_modules() (compyute.nn.conv2dblock method)": [[342, "compyute.nn.Conv2DBlock.get_modules", false]], "get_modules() (compyute.nn.convtranspose1d method)": [[359, "compyute.nn.ConvTranspose1D.get_modules", false]], "get_modules() (compyute.nn.convtranspose2d method)": [[376, "compyute.nn.ConvTranspose2D.get_modules", false]], "get_modules() (compyute.nn.denseblock method)": [[400, "compyute.nn.DenseBlock.get_modules", false]], "get_modules() (compyute.nn.dropout method)": [[423, "compyute.nn.Dropout.get_modules", false]], "get_modules() (compyute.nn.embedding method)": [[440, "compyute.nn.Embedding.get_modules", false]], "get_modules() (compyute.nn.fastgelu method)": [[457, "compyute.nn.FastGELU.get_modules", false]], "get_modules() (compyute.nn.flatten method)": [[474, "compyute.nn.Flatten.get_modules", false]], "get_modules() (compyute.nn.gelu method)": [[499, "compyute.nn.GELU.get_modules", false]], "get_modules() (compyute.nn.gru method)": [[516, "compyute.nn.GRU.get_modules", false]], "get_modules() (compyute.nn.identity method)": [[533, "compyute.nn.Identity.get_modules", false]], "get_modules() (compyute.nn.layernorm method)": [[567, "compyute.nn.LayerNorm.get_modules", false]], "get_modules() (compyute.nn.leakyrelu method)": [[584, "compyute.nn.LeakyReLU.get_modules", false]], "get_modules() (compyute.nn.linear method)": [[601, "compyute.nn.Linear.get_modules", false]], "get_modules() (compyute.nn.lstm method)": [[550, "compyute.nn.LSTM.get_modules", false]], "get_modules() (compyute.nn.maxpooling2d method)": [[630, "compyute.nn.MaxPooling2D.get_modules", false]], "get_modules() (compyute.nn.module method)": [[649, "compyute.nn.Module.get_modules", false]], "get_modules() (compyute.nn.paralleladd method)": [[679, "compyute.nn.ParallelAdd.get_modules", false]], "get_modules() (compyute.nn.parallelconcat method)": [[696, "compyute.nn.ParallelConcat.get_modules", false]], "get_modules() (compyute.nn.recurrent method)": [[784, "compyute.nn.Recurrent.get_modules", false]], "get_modules() (compyute.nn.relu method)": [[767, "compyute.nn.ReLU.get_modules", false]], "get_modules() (compyute.nn.reshape method)": [[801, "compyute.nn.Reshape.get_modules", false]], "get_modules() (compyute.nn.residualconnection method)": [[818, "compyute.nn.ResidualConnection.get_modules", false]], "get_modules() (compyute.nn.rmsnorm method)": [[750, "compyute.nn.RMSNorm.get_modules", false]], "get_modules() (compyute.nn.sequential method)": [[836, "compyute.nn.Sequential.get_modules", false]], "get_modules() (compyute.nn.sigmoid method)": [[870, "compyute.nn.Sigmoid.get_modules", false]], "get_modules() (compyute.nn.silu method)": [[853, "compyute.nn.SiLU.get_modules", false]], "get_modules() (compyute.nn.slice method)": [[887, "compyute.nn.Slice.get_modules", false]], "get_modules() (compyute.nn.softmax method)": [[904, "compyute.nn.Softmax.get_modules", false]], "get_modules() (compyute.nn.tanh method)": [[921, "compyute.nn.Tanh.get_modules", false]], "get_modules() (compyute.nn.upsample2d method)": [[938, "compyute.nn.Upsample2D.get_modules", false]], "get_parameters() (compyute.nn.avgpooling2d method)": [[198, "compyute.nn.AvgPooling2D.get_parameters", false]], "get_parameters() (compyute.nn.batchnorm1d method)": [[221, "compyute.nn.BatchNorm1D.get_parameters", false]], "get_parameters() (compyute.nn.batchnorm2d method)": [[238, "compyute.nn.BatchNorm2D.get_parameters", false]], "get_parameters() (compyute.nn.conv1d method)": [[290, "compyute.nn.Conv1D.get_parameters", false]], "get_parameters() (compyute.nn.conv1dblock method)": [[308, "compyute.nn.Conv1DBlock.get_parameters", false]], "get_parameters() (compyute.nn.conv2d method)": [[325, "compyute.nn.Conv2D.get_parameters", false]], "get_parameters() (compyute.nn.conv2dblock method)": [[343, "compyute.nn.Conv2DBlock.get_parameters", false]], "get_parameters() (compyute.nn.convtranspose1d method)": [[360, "compyute.nn.ConvTranspose1D.get_parameters", false]], "get_parameters() (compyute.nn.convtranspose2d method)": [[377, "compyute.nn.ConvTranspose2D.get_parameters", false]], "get_parameters() (compyute.nn.denseblock method)": [[401, "compyute.nn.DenseBlock.get_parameters", false]], "get_parameters() (compyute.nn.dropout method)": [[424, "compyute.nn.Dropout.get_parameters", false]], "get_parameters() (compyute.nn.embedding method)": [[441, "compyute.nn.Embedding.get_parameters", false]], "get_parameters() (compyute.nn.fastgelu method)": [[458, "compyute.nn.FastGELU.get_parameters", false]], "get_parameters() (compyute.nn.flatten method)": [[475, "compyute.nn.Flatten.get_parameters", false]], "get_parameters() (compyute.nn.gelu method)": [[500, "compyute.nn.GELU.get_parameters", false]], "get_parameters() (compyute.nn.gru method)": [[517, "compyute.nn.GRU.get_parameters", false]], "get_parameters() (compyute.nn.identity method)": [[534, "compyute.nn.Identity.get_parameters", false]], "get_parameters() (compyute.nn.layernorm method)": [[568, "compyute.nn.LayerNorm.get_parameters", false]], "get_parameters() (compyute.nn.leakyrelu method)": [[585, "compyute.nn.LeakyReLU.get_parameters", false]], "get_parameters() (compyute.nn.linear method)": [[602, "compyute.nn.Linear.get_parameters", false]], "get_parameters() (compyute.nn.lstm method)": [[551, "compyute.nn.LSTM.get_parameters", false]], "get_parameters() (compyute.nn.maxpooling2d method)": [[631, "compyute.nn.MaxPooling2D.get_parameters", false]], "get_parameters() (compyute.nn.module method)": [[650, "compyute.nn.Module.get_parameters", false]], "get_parameters() (compyute.nn.paralleladd method)": [[680, "compyute.nn.ParallelAdd.get_parameters", false]], "get_parameters() (compyute.nn.parallelconcat method)": [[697, "compyute.nn.ParallelConcat.get_parameters", false]], "get_parameters() (compyute.nn.recurrent method)": [[785, "compyute.nn.Recurrent.get_parameters", false]], "get_parameters() (compyute.nn.relu method)": [[768, "compyute.nn.ReLU.get_parameters", false]], "get_parameters() (compyute.nn.reshape method)": [[802, "compyute.nn.Reshape.get_parameters", false]], "get_parameters() (compyute.nn.residualconnection method)": [[819, "compyute.nn.ResidualConnection.get_parameters", false]], "get_parameters() (compyute.nn.rmsnorm method)": [[751, "compyute.nn.RMSNorm.get_parameters", false]], "get_parameters() (compyute.nn.sequential method)": [[837, "compyute.nn.Sequential.get_parameters", false]], "get_parameters() (compyute.nn.sigmoid method)": [[871, "compyute.nn.Sigmoid.get_parameters", false]], "get_parameters() (compyute.nn.silu method)": [[854, "compyute.nn.SiLU.get_parameters", false]], "get_parameters() (compyute.nn.slice method)": [[888, "compyute.nn.Slice.get_parameters", false]], "get_parameters() (compyute.nn.softmax method)": [[905, "compyute.nn.Softmax.get_parameters", false]], "get_parameters() (compyute.nn.tanh method)": [[922, "compyute.nn.Tanh.get_parameters", false]], "get_parameters() (compyute.nn.upsample2d method)": [[939, "compyute.nn.Upsample2D.get_parameters", false]], "get_state_dict() (compyute.nn.avgpooling2d method)": [[199, "compyute.nn.AvgPooling2D.get_state_dict", false]], "get_state_dict() (compyute.nn.batchnorm1d method)": [[222, "compyute.nn.BatchNorm1D.get_state_dict", false]], "get_state_dict() (compyute.nn.batchnorm2d method)": [[239, "compyute.nn.BatchNorm2D.get_state_dict", false]], "get_state_dict() (compyute.nn.conv1d method)": [[291, "compyute.nn.Conv1D.get_state_dict", false]], "get_state_dict() (compyute.nn.conv1dblock method)": [[309, "compyute.nn.Conv1DBlock.get_state_dict", false]], "get_state_dict() (compyute.nn.conv2d method)": [[326, "compyute.nn.Conv2D.get_state_dict", false]], "get_state_dict() (compyute.nn.conv2dblock method)": [[344, "compyute.nn.Conv2DBlock.get_state_dict", false]], "get_state_dict() (compyute.nn.convtranspose1d method)": [[361, "compyute.nn.ConvTranspose1D.get_state_dict", false]], "get_state_dict() (compyute.nn.convtranspose2d method)": [[378, "compyute.nn.ConvTranspose2D.get_state_dict", false]], "get_state_dict() (compyute.nn.denseblock method)": [[402, "compyute.nn.DenseBlock.get_state_dict", false]], "get_state_dict() (compyute.nn.dropout method)": [[425, "compyute.nn.Dropout.get_state_dict", false]], "get_state_dict() (compyute.nn.embedding method)": [[442, "compyute.nn.Embedding.get_state_dict", false]], "get_state_dict() (compyute.nn.fastgelu method)": [[459, "compyute.nn.FastGELU.get_state_dict", false]], "get_state_dict() (compyute.nn.flatten method)": [[476, "compyute.nn.Flatten.get_state_dict", false]], "get_state_dict() (compyute.nn.gelu method)": [[501, "compyute.nn.GELU.get_state_dict", false]], "get_state_dict() (compyute.nn.gru method)": [[518, "compyute.nn.GRU.get_state_dict", false]], "get_state_dict() (compyute.nn.identity method)": [[535, "compyute.nn.Identity.get_state_dict", false]], "get_state_dict() (compyute.nn.layernorm method)": [[569, "compyute.nn.LayerNorm.get_state_dict", false]], "get_state_dict() (compyute.nn.leakyrelu method)": [[586, "compyute.nn.LeakyReLU.get_state_dict", false]], "get_state_dict() (compyute.nn.linear method)": [[603, "compyute.nn.Linear.get_state_dict", false]], "get_state_dict() (compyute.nn.lstm method)": [[552, "compyute.nn.LSTM.get_state_dict", false]], "get_state_dict() (compyute.nn.maxpooling2d method)": [[632, "compyute.nn.MaxPooling2D.get_state_dict", false]], "get_state_dict() (compyute.nn.module method)": [[651, "compyute.nn.Module.get_state_dict", false]], "get_state_dict() (compyute.nn.optimizers.adam method)": [[41, "compyute.nn.optimizers.Adam.get_state_dict", false]], "get_state_dict() (compyute.nn.optimizers.adamw method)": [[48, "compyute.nn.optimizers.AdamW.get_state_dict", false]], "get_state_dict() (compyute.nn.optimizers.nadam method)": [[55, "compyute.nn.optimizers.NAdam.get_state_dict", false]], "get_state_dict() (compyute.nn.optimizers.optimizer method)": [[62, "compyute.nn.optimizers.Optimizer.get_state_dict", false]], "get_state_dict() (compyute.nn.optimizers.sgd method)": [[69, "compyute.nn.optimizers.SGD.get_state_dict", false]], "get_state_dict() (compyute.nn.paralleladd method)": [[681, "compyute.nn.ParallelAdd.get_state_dict", false]], "get_state_dict() (compyute.nn.parallelconcat method)": [[698, "compyute.nn.ParallelConcat.get_state_dict", false]], "get_state_dict() (compyute.nn.recurrent method)": [[786, "compyute.nn.Recurrent.get_state_dict", false]], "get_state_dict() (compyute.nn.relu method)": [[769, "compyute.nn.ReLU.get_state_dict", false]], "get_state_dict() (compyute.nn.reshape method)": [[803, "compyute.nn.Reshape.get_state_dict", false]], "get_state_dict() (compyute.nn.residualconnection method)": [[820, "compyute.nn.ResidualConnection.get_state_dict", false]], "get_state_dict() (compyute.nn.rmsnorm method)": [[752, "compyute.nn.RMSNorm.get_state_dict", false]], "get_state_dict() (compyute.nn.sequential method)": [[838, "compyute.nn.Sequential.get_state_dict", false]], "get_state_dict() (compyute.nn.sigmoid method)": [[872, "compyute.nn.Sigmoid.get_state_dict", false]], "get_state_dict() (compyute.nn.silu method)": [[855, "compyute.nn.SiLU.get_state_dict", false]], "get_state_dict() (compyute.nn.slice method)": [[889, "compyute.nn.Slice.get_state_dict", false]], "get_state_dict() (compyute.nn.softmax method)": [[906, "compyute.nn.Softmax.get_state_dict", false]], "get_state_dict() (compyute.nn.tanh method)": [[923, "compyute.nn.Tanh.get_state_dict", false]], "get_state_dict() (compyute.nn.upsample2d method)": [[940, "compyute.nn.Upsample2D.get_state_dict", false]], "gpu_available() (in module compyute.backend)": [[2, "compyute.backend.gpu_available", false]], "gru (class in compyute.nn)": [[510, "compyute.nn.GRU", false]], "gru() (in module compyute.nn.functional)": [[21, "compyute.nn.functional.gru", false]], "histogram() (in module compyute)": [[1034, "compyute.histogram", false]], "history (class in compyute.nn.trainer.callbacks)": [[114, "compyute.nn.trainer.callbacks.History", false]], "identity (class in compyute.nn)": [[527, "compyute.nn.Identity", false]], "identity() (in module compyute)": [[1035, "compyute.identity", false]], "ifft1d() (in module compyute)": [[1036, "compyute.ifft1d", false]], "ifft2d() (in module compyute)": [[1037, "compyute.ifft2d", false]], "imag() (compyute.nn.buffer method)": [[255, "compyute.nn.Buffer.imag", false]], "imag() (compyute.nn.parameter method)": [[714, "compyute.nn.Parameter.imag", false]], "imag() (compyute.tensor method)": [[970, "compyute.Tensor.imag", false]], "index() (compyute.nn.modulelist method)": [[667, "compyute.nn.ModuleList.index", false]], "inference() (compyute.nn.avgpooling2d method)": [[200, "compyute.nn.AvgPooling2D.inference", false]], "inference() (compyute.nn.batchnorm1d method)": [[223, "compyute.nn.BatchNorm1D.inference", false]], "inference() (compyute.nn.batchnorm2d method)": [[240, "compyute.nn.BatchNorm2D.inference", false]], "inference() (compyute.nn.conv1d method)": [[292, "compyute.nn.Conv1D.inference", false]], "inference() (compyute.nn.conv1dblock method)": [[310, "compyute.nn.Conv1DBlock.inference", false]], "inference() (compyute.nn.conv2d method)": [[327, "compyute.nn.Conv2D.inference", false]], "inference() (compyute.nn.conv2dblock method)": [[345, "compyute.nn.Conv2DBlock.inference", false]], "inference() (compyute.nn.convtranspose1d method)": [[362, "compyute.nn.ConvTranspose1D.inference", false]], "inference() (compyute.nn.convtranspose2d method)": [[379, "compyute.nn.ConvTranspose2D.inference", false]], "inference() (compyute.nn.denseblock method)": [[403, "compyute.nn.DenseBlock.inference", false]], "inference() (compyute.nn.dropout method)": [[426, "compyute.nn.Dropout.inference", false]], "inference() (compyute.nn.embedding method)": [[443, "compyute.nn.Embedding.inference", false]], "inference() (compyute.nn.fastgelu method)": [[460, "compyute.nn.FastGELU.inference", false]], "inference() (compyute.nn.flatten method)": [[477, "compyute.nn.Flatten.inference", false]], "inference() (compyute.nn.gelu method)": [[502, "compyute.nn.GELU.inference", false]], "inference() (compyute.nn.gru method)": [[519, "compyute.nn.GRU.inference", false]], "inference() (compyute.nn.identity method)": [[536, "compyute.nn.Identity.inference", false]], "inference() (compyute.nn.layernorm method)": [[570, "compyute.nn.LayerNorm.inference", false]], "inference() (compyute.nn.leakyrelu method)": [[587, "compyute.nn.LeakyReLU.inference", false]], "inference() (compyute.nn.linear method)": [[604, "compyute.nn.Linear.inference", false]], "inference() (compyute.nn.lstm method)": [[553, "compyute.nn.LSTM.inference", false]], "inference() (compyute.nn.maxpooling2d method)": [[633, "compyute.nn.MaxPooling2D.inference", false]], "inference() (compyute.nn.module method)": [[652, "compyute.nn.Module.inference", false]], "inference() (compyute.nn.paralleladd method)": [[682, "compyute.nn.ParallelAdd.inference", false]], "inference() (compyute.nn.parallelconcat method)": [[699, "compyute.nn.ParallelConcat.inference", false]], "inference() (compyute.nn.recurrent method)": [[787, "compyute.nn.Recurrent.inference", false]], "inference() (compyute.nn.relu method)": [[770, "compyute.nn.ReLU.inference", false]], "inference() (compyute.nn.reshape method)": [[804, "compyute.nn.Reshape.inference", false]], "inference() (compyute.nn.residualconnection method)": [[821, "compyute.nn.ResidualConnection.inference", false]], "inference() (compyute.nn.rmsnorm method)": [[753, "compyute.nn.RMSNorm.inference", false]], "inference() (compyute.nn.sequential method)": [[839, "compyute.nn.Sequential.inference", false]], "inference() (compyute.nn.sigmoid method)": [[873, "compyute.nn.Sigmoid.inference", false]], "inference() (compyute.nn.silu method)": [[856, "compyute.nn.SiLU.inference", false]], "inference() (compyute.nn.slice method)": [[890, "compyute.nn.Slice.inference", false]], "inference() (compyute.nn.softmax method)": [[907, "compyute.nn.Softmax.inference", false]], "inference() (compyute.nn.tanh method)": [[924, "compyute.nn.Tanh.inference", false]], "inference() (compyute.nn.upsample2d method)": [[941, "compyute.nn.Upsample2D.inference", false]], "init_kaiming_normal() (in module compyute.nn.utils.initializers)": [[158, "compyute.nn.utils.initializers.init_kaiming_normal", false]], "init_kaiming_uniform() (in module compyute.nn.utils.initializers)": [[159, "compyute.nn.utils.initializers.init_kaiming_uniform", false]], "init_normal() (in module compyute.nn.utils.initializers)": [[160, "compyute.nn.utils.initializers.init_normal", false]], "init_ones() (in module compyute.nn.utils.initializers)": [[161, "compyute.nn.utils.initializers.init_ones", false]], "init_uniform() (in module compyute.nn.utils.initializers)": [[162, "compyute.nn.utils.initializers.init_uniform", false]], "init_xavier_normal() (in module compyute.nn.utils.initializers)": [[163, "compyute.nn.utils.initializers.init_xavier_normal", false]], "init_xavier_uniform() (in module compyute.nn.utils.initializers)": [[164, "compyute.nn.utils.initializers.init_xavier_uniform", false]], "init_zeros() (in module compyute.nn.utils.initializers)": [[165, "compyute.nn.utils.initializers.init_zeros", false]], "inner() (in module compyute)": [[1038, "compyute.inner", false]], "insert() (compyute.nn.modulelist method)": [[668, "compyute.nn.ModuleList.insert", false]], "insert_dim() (in module compyute)": [[1039, "compyute.insert_dim", false]], "int16 (in module compyute)": [[1040, "compyute.int16", false]], "int32 (in module compyute)": [[1041, "compyute.int32", false]], "int64 (in module compyute)": [[1042, "compyute.int64", false]], "int8 (in module compyute)": [[1043, "compyute.int8", false]], "is_nan() (in module compyute)": [[1044, "compyute.is_nan", false]], "item() (compyute.nn.buffer method)": [[256, "compyute.nn.Buffer.item", false]], "item() (compyute.nn.parameter method)": [[715, "compyute.nn.Parameter.item", false]], "item() (compyute.tensor method)": [[971, "compyute.Tensor.item", false]], "ito_device() (compyute.nn.buffer method)": [[257, "compyute.nn.Buffer.ito_device", false]], "ito_device() (compyute.nn.parameter method)": [[716, "compyute.nn.Parameter.ito_device", false]], "ito_device() (compyute.tensor method)": [[972, "compyute.Tensor.ito_device", false]], "ito_type() (compyute.nn.buffer method)": [[258, "compyute.nn.Buffer.ito_type", false]], "ito_type() (compyute.nn.parameter method)": [[717, "compyute.nn.Parameter.ito_type", false]], "ito_type() (compyute.tensor method)": [[973, "compyute.Tensor.ito_type", false]], "layernorm (class in compyute.nn)": [[561, "compyute.nn.LayerNorm", false]], "layernorm() (in module compyute.nn.functional)": [[22, "compyute.nn.functional.layernorm", false]], "leaky_relu() (in module compyute.nn.functional)": [[23, "compyute.nn.functional.leaky_relu", false]], "leakyrelu (class in compyute.nn)": [[578, "compyute.nn.LeakyReLU", false]], "linear (class in compyute.nn)": [[595, "compyute.nn.Linear", false]], "linear() (in module compyute.nn.functional)": [[24, "compyute.nn.functional.linear", false]], "linspace() (in module compyute)": [[1045, "compyute.linspace", false]], "load() (in module compyute)": [[1046, "compyute.load", false]], "load_state_dict() (compyute.nn.avgpooling2d method)": [[201, "compyute.nn.AvgPooling2D.load_state_dict", false]], "load_state_dict() (compyute.nn.batchnorm1d method)": [[224, "compyute.nn.BatchNorm1D.load_state_dict", false]], "load_state_dict() (compyute.nn.batchnorm2d method)": [[241, "compyute.nn.BatchNorm2D.load_state_dict", false]], "load_state_dict() (compyute.nn.conv1d method)": [[293, "compyute.nn.Conv1D.load_state_dict", false]], "load_state_dict() (compyute.nn.conv1dblock method)": [[311, "compyute.nn.Conv1DBlock.load_state_dict", false]], "load_state_dict() (compyute.nn.conv2d method)": [[328, "compyute.nn.Conv2D.load_state_dict", false]], "load_state_dict() (compyute.nn.conv2dblock method)": [[346, "compyute.nn.Conv2DBlock.load_state_dict", false]], "load_state_dict() (compyute.nn.convtranspose1d method)": [[363, "compyute.nn.ConvTranspose1D.load_state_dict", false]], "load_state_dict() (compyute.nn.convtranspose2d method)": [[380, "compyute.nn.ConvTranspose2D.load_state_dict", false]], "load_state_dict() (compyute.nn.denseblock method)": [[404, "compyute.nn.DenseBlock.load_state_dict", false]], "load_state_dict() (compyute.nn.dropout method)": [[427, "compyute.nn.Dropout.load_state_dict", false]], "load_state_dict() (compyute.nn.embedding method)": [[444, "compyute.nn.Embedding.load_state_dict", false]], "load_state_dict() (compyute.nn.fastgelu method)": [[461, "compyute.nn.FastGELU.load_state_dict", false]], "load_state_dict() (compyute.nn.flatten method)": [[478, "compyute.nn.Flatten.load_state_dict", false]], "load_state_dict() (compyute.nn.gelu method)": [[503, "compyute.nn.GELU.load_state_dict", false]], "load_state_dict() (compyute.nn.gru method)": [[520, "compyute.nn.GRU.load_state_dict", false]], "load_state_dict() (compyute.nn.identity method)": [[537, "compyute.nn.Identity.load_state_dict", false]], "load_state_dict() (compyute.nn.layernorm method)": [[571, "compyute.nn.LayerNorm.load_state_dict", false]], "load_state_dict() (compyute.nn.leakyrelu method)": [[588, "compyute.nn.LeakyReLU.load_state_dict", false]], "load_state_dict() (compyute.nn.linear method)": [[605, "compyute.nn.Linear.load_state_dict", false]], "load_state_dict() (compyute.nn.lstm method)": [[554, "compyute.nn.LSTM.load_state_dict", false]], "load_state_dict() (compyute.nn.maxpooling2d method)": [[634, "compyute.nn.MaxPooling2D.load_state_dict", false]], "load_state_dict() (compyute.nn.module method)": [[653, "compyute.nn.Module.load_state_dict", false]], "load_state_dict() (compyute.nn.optimizers.adam method)": [[42, "compyute.nn.optimizers.Adam.load_state_dict", false]], "load_state_dict() (compyute.nn.optimizers.adamw method)": [[49, "compyute.nn.optimizers.AdamW.load_state_dict", false]], "load_state_dict() (compyute.nn.optimizers.nadam method)": [[56, "compyute.nn.optimizers.NAdam.load_state_dict", false]], "load_state_dict() (compyute.nn.optimizers.optimizer method)": [[63, "compyute.nn.optimizers.Optimizer.load_state_dict", false]], "load_state_dict() (compyute.nn.optimizers.sgd method)": [[70, "compyute.nn.optimizers.SGD.load_state_dict", false]], "load_state_dict() (compyute.nn.paralleladd method)": [[683, "compyute.nn.ParallelAdd.load_state_dict", false]], "load_state_dict() (compyute.nn.parallelconcat method)": [[700, "compyute.nn.ParallelConcat.load_state_dict", false]], "load_state_dict() (compyute.nn.recurrent method)": [[788, "compyute.nn.Recurrent.load_state_dict", false]], "load_state_dict() (compyute.nn.relu method)": [[771, "compyute.nn.ReLU.load_state_dict", false]], "load_state_dict() (compyute.nn.reshape method)": [[805, "compyute.nn.Reshape.load_state_dict", false]], "load_state_dict() (compyute.nn.residualconnection method)": [[822, "compyute.nn.ResidualConnection.load_state_dict", false]], "load_state_dict() (compyute.nn.rmsnorm method)": [[754, "compyute.nn.RMSNorm.load_state_dict", false]], "load_state_dict() (compyute.nn.sequential method)": [[840, "compyute.nn.Sequential.load_state_dict", false]], "load_state_dict() (compyute.nn.sigmoid method)": [[874, "compyute.nn.Sigmoid.load_state_dict", false]], "load_state_dict() (compyute.nn.silu method)": [[857, "compyute.nn.SiLU.load_state_dict", false]], "load_state_dict() (compyute.nn.slice method)": [[891, "compyute.nn.Slice.load_state_dict", false]], "load_state_dict() (compyute.nn.softmax method)": [[908, "compyute.nn.Softmax.load_state_dict", false]], "load_state_dict() (compyute.nn.tanh method)": [[925, "compyute.nn.Tanh.load_state_dict", false]], "load_state_dict() (compyute.nn.upsample2d method)": [[942, "compyute.nn.Upsample2D.load_state_dict", false]], "log() (in module compyute)": [[1047, "compyute.log", false]], "log10() (in module compyute)": [[1048, "compyute.log10", false]], "log2() (in module compyute)": [[1049, "compyute.log2", false]], "loss (class in compyute.nn)": [[612, "compyute.nn.Loss", false]], "lrscheduler (class in compyute.nn.utils.lr_schedulers)": [[175, "compyute.nn.utils.lr_schedulers.LrScheduler", false]], "lstm (class in compyute.nn)": [[544, "compyute.nn.LSTM", false]], "lstm() (in module compyute.nn.functional)": [[25, "compyute.nn.functional.lstm", false]], "max() (compyute.nn.buffer method)": [[259, "compyute.nn.Buffer.max", false]], "max() (compyute.nn.parameter method)": [[718, "compyute.nn.Parameter.max", false]], "max() (compyute.tensor method)": [[974, "compyute.Tensor.max", false]], "max() (in module compyute)": [[1050, "compyute.max", false]], "maximum() (in module compyute)": [[1051, "compyute.maximum", false]], "maxpooling2d (class in compyute.nn)": [[624, "compyute.nn.MaxPooling2D", false]], "maxpooling2d() (in module compyute.nn.functional)": [[26, "compyute.nn.functional.maxpooling2d", false]], "mean() (compyute.nn.buffer method)": [[260, "compyute.nn.Buffer.mean", false]], "mean() (compyute.nn.parameter method)": [[719, "compyute.nn.Parameter.mean", false]], "mean() (compyute.tensor method)": [[975, "compyute.Tensor.mean", false]], "mean() (in module compyute)": [[1052, "compyute.mean", false]], "metric (class in compyute.nn)": [[641, "compyute.nn.Metric", false]], "min() (compyute.nn.buffer method)": [[261, "compyute.nn.Buffer.min", false]], "min() (compyute.nn.parameter method)": [[720, "compyute.nn.Parameter.min", false]], "min() (compyute.tensor method)": [[976, "compyute.Tensor.min", false]], "min() (in module compyute)": [[1053, "compyute.min", false]], "minimum() (in module compyute)": [[1054, "compyute.minimum", false]], "module (class in compyute.nn)": [[643, "compyute.nn.Module", false]], "modulelist (class in compyute.nn)": [[660, "compyute.nn.ModuleList", false]], "movedim() (in module compyute)": [[1055, "compyute.movedim", false]], "mse_loss() (in module compyute.nn.functional)": [[27, "compyute.nn.functional.mse_loss", false]], "mseloss (class in compyute.nn)": [[618, "compyute.nn.MSELoss", false]], "multinomial() (in module compyute.random)": [[953, "compyute.random.multinomial", false]], "multisteplrscheduler (class in compyute.nn.trainer.callbacks)": [[122, "compyute.nn.trainer.callbacks.MultistepLrScheduler", false]], "multisteplrscheduler (class in compyute.nn.utils.lr_schedulers)": [[178, "compyute.nn.utils.lr_schedulers.MultistepLrScheduler", false]], "nadam (class in compyute.nn.optimizers)": [[53, "compyute.nn.optimizers.NAdam", false]], "newaxis (in module compyute)": [[1100, "compyute.newaxis", false]], "norm() (in module compyute)": [[1056, "compyute.norm", false]], "normal() (in module compyute.random)": [[954, "compyute.random.normal", false]], "normalize() (in module compyute.preprocessing)": [[949, "compyute.preprocessing.normalize", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.adaptivelrscheduler method)": [[76, "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.callback method)": [[84, "compyute.nn.trainer.callbacks.Callback.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.cosinelrscheduler method)": [[92, "compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.earlystopping method)": [[100, "compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.exponentiallrscheduler method)": [[108, "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.history method)": [[116, "compyute.nn.trainer.callbacks.History.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.multisteplrscheduler method)": [[124, "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.progressbar method)": [[132, "compyute.nn.trainer.callbacks.ProgressBar.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.steplrscheduler method)": [[140, "compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_end", false]], "on_epoch_end() (compyute.nn.trainer.callbacks.tensorboard method)": [[148, "compyute.nn.trainer.callbacks.Tensorboard.on_epoch_end", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.adaptivelrscheduler method)": [[77, "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.callback method)": [[85, "compyute.nn.trainer.callbacks.Callback.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.cosinelrscheduler method)": [[93, "compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.earlystopping method)": [[101, "compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.exponentiallrscheduler method)": [[109, "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.history method)": [[117, "compyute.nn.trainer.callbacks.History.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.multisteplrscheduler method)": [[125, "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.progressbar method)": [[133, "compyute.nn.trainer.callbacks.ProgressBar.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.steplrscheduler method)": [[141, "compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_start", false]], "on_epoch_start() (compyute.nn.trainer.callbacks.tensorboard method)": [[149, "compyute.nn.trainer.callbacks.Tensorboard.on_epoch_start", false]], "on_run_end() (compyute.nn.trainer.callbacks.adaptivelrscheduler method)": [[78, "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.callback method)": [[86, "compyute.nn.trainer.callbacks.Callback.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.cosinelrscheduler method)": [[94, "compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.earlystopping method)": [[102, "compyute.nn.trainer.callbacks.EarlyStopping.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.exponentiallrscheduler method)": [[110, "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.history method)": [[118, "compyute.nn.trainer.callbacks.History.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.multisteplrscheduler method)": [[126, "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.progressbar method)": [[134, "compyute.nn.trainer.callbacks.ProgressBar.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.steplrscheduler method)": [[142, "compyute.nn.trainer.callbacks.StepLrScheduler.on_run_end", false]], "on_run_end() (compyute.nn.trainer.callbacks.tensorboard method)": [[150, "compyute.nn.trainer.callbacks.Tensorboard.on_run_end", false]], "on_run_start() (compyute.nn.trainer.callbacks.adaptivelrscheduler method)": [[79, "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.callback method)": [[87, "compyute.nn.trainer.callbacks.Callback.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.cosinelrscheduler method)": [[95, "compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.earlystopping method)": [[103, "compyute.nn.trainer.callbacks.EarlyStopping.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.exponentiallrscheduler method)": [[111, "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.history method)": [[119, "compyute.nn.trainer.callbacks.History.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.multisteplrscheduler method)": [[127, "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.progressbar method)": [[135, "compyute.nn.trainer.callbacks.ProgressBar.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.steplrscheduler method)": [[143, "compyute.nn.trainer.callbacks.StepLrScheduler.on_run_start", false]], "on_run_start() (compyute.nn.trainer.callbacks.tensorboard method)": [[151, "compyute.nn.trainer.callbacks.Tensorboard.on_run_start", false]], "on_step_end() (compyute.nn.trainer.callbacks.adaptivelrscheduler method)": [[80, "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.callback method)": [[88, "compyute.nn.trainer.callbacks.Callback.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.cosinelrscheduler method)": [[96, "compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.earlystopping method)": [[104, "compyute.nn.trainer.callbacks.EarlyStopping.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.exponentiallrscheduler method)": [[112, "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.history method)": [[120, "compyute.nn.trainer.callbacks.History.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.multisteplrscheduler method)": [[128, "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.progressbar method)": [[136, "compyute.nn.trainer.callbacks.ProgressBar.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.steplrscheduler method)": [[144, "compyute.nn.trainer.callbacks.StepLrScheduler.on_step_end", false]], "on_step_end() (compyute.nn.trainer.callbacks.tensorboard method)": [[152, "compyute.nn.trainer.callbacks.Tensorboard.on_step_end", false]], "on_step_start() (compyute.nn.trainer.callbacks.adaptivelrscheduler method)": [[81, "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.callback method)": [[89, "compyute.nn.trainer.callbacks.Callback.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.cosinelrscheduler method)": [[97, "compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.earlystopping method)": [[105, "compyute.nn.trainer.callbacks.EarlyStopping.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.exponentiallrscheduler method)": [[113, "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.history method)": [[121, "compyute.nn.trainer.callbacks.History.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.multisteplrscheduler method)": [[129, "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.progressbar method)": [[137, "compyute.nn.trainer.callbacks.ProgressBar.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.steplrscheduler method)": [[145, "compyute.nn.trainer.callbacks.StepLrScheduler.on_step_start", false]], "on_step_start() (compyute.nn.trainer.callbacks.tensorboard method)": [[153, "compyute.nn.trainer.callbacks.Tensorboard.on_step_start", false]], "one_hot_encode() (in module compyute.preprocessing)": [[950, "compyute.preprocessing.one_hot_encode", false]], "ones() (in module compyute)": [[1057, "compyute.ones", false]], "ones_like() (in module compyute)": [[1058, "compyute.ones_like", false]], "optimizer (class in compyute.nn.optimizers)": [[60, "compyute.nn.optimizers.Optimizer", false]], "outer() (in module compyute)": [[1059, "compyute.outer", false]], "pad() (in module compyute)": [[1060, "compyute.pad", false]], "pad1d() (in module compyute.nn.functional)": [[28, "compyute.nn.functional.pad1d", false]], "pad2d() (in module compyute.nn.functional)": [[29, "compyute.nn.functional.pad2d", false]], "pad_to_shape() (in module compyute)": [[1061, "compyute.pad_to_shape", false]], "paralleladd (class in compyute.nn)": [[673, "compyute.nn.ParallelAdd", false]], "parallelconcat (class in compyute.nn)": [[690, "compyute.nn.ParallelConcat", false]], "parameter (class in compyute.nn)": [[707, "compyute.nn.Parameter", false]], "permutation() (in module compyute.random)": [[955, "compyute.random.permutation", false]], "permute() (compyute.nn.buffer method)": [[262, "compyute.nn.Buffer.permute", false]], "permute() (compyute.nn.parameter method)": [[721, "compyute.nn.Parameter.permute", false]], "permute() (compyute.tensor method)": [[977, "compyute.Tensor.permute", false]], "permute() (in module compyute)": [[1062, "compyute.permute", false]], "pooling1d() (in module compyute)": [[1063, "compyute.pooling1d", false]], "pooling2d() (in module compyute)": [[1064, "compyute.pooling2d", false]], "pop() (compyute.nn.modulelist method)": [[669, "compyute.nn.ModuleList.pop", false]], "prod() (in module compyute)": [[1065, "compyute.prod", false]], "progressbar (class in compyute.nn.trainer.callbacks)": [[130, "compyute.nn.trainer.callbacks.ProgressBar", false]], "r2 (class in compyute.nn)": [[742, "compyute.nn.R2", false]], "r2_score() (in module compyute.nn.functional)": [[30, "compyute.nn.functional.r2_score", false]], "random() (in module compyute.random)": [[956, "compyute.random.random", false]], "real() (compyute.nn.buffer method)": [[263, "compyute.nn.Buffer.real", false]], "real() (compyute.nn.parameter method)": [[722, "compyute.nn.Parameter.real", false]], "real() (compyute.tensor method)": [[978, "compyute.Tensor.real", false]], "real() (in module compyute)": [[1066, "compyute.real", false]], "recurrent (class in compyute.nn)": [[778, "compyute.nn.Recurrent", false]], "recurrent() (in module compyute.nn.functional)": [[31, "compyute.nn.functional.recurrent", false]], "register_backward() (compyute.nn.avgpooling2d static method)": [[202, "compyute.nn.AvgPooling2D.register_backward", false]], "register_backward() (compyute.nn.batchnorm1d static method)": [[225, "compyute.nn.BatchNorm1D.register_backward", false]], "register_backward() (compyute.nn.batchnorm2d static method)": [[242, "compyute.nn.BatchNorm2D.register_backward", false]], "register_backward() (compyute.nn.bceloss static method)": [[212, "compyute.nn.BCELoss.register_backward", false]], "register_backward() (compyute.nn.conv1d static method)": [[294, "compyute.nn.Conv1D.register_backward", false]], "register_backward() (compyute.nn.conv1dblock static method)": [[312, "compyute.nn.Conv1DBlock.register_backward", false]], "register_backward() (compyute.nn.conv2d static method)": [[329, "compyute.nn.Conv2D.register_backward", false]], "register_backward() (compyute.nn.conv2dblock static method)": [[347, "compyute.nn.Conv2DBlock.register_backward", false]], "register_backward() (compyute.nn.convtranspose1d static method)": [[364, "compyute.nn.ConvTranspose1D.register_backward", false]], "register_backward() (compyute.nn.convtranspose2d static method)": [[381, "compyute.nn.ConvTranspose2D.register_backward", false]], "register_backward() (compyute.nn.crossentropyloss static method)": [[391, "compyute.nn.CrossEntropyLoss.register_backward", false]], "register_backward() (compyute.nn.denseblock static method)": [[405, "compyute.nn.DenseBlock.register_backward", false]], "register_backward() (compyute.nn.diceloss static method)": [[415, "compyute.nn.DiceLoss.register_backward", false]], "register_backward() (compyute.nn.dropout static method)": [[428, "compyute.nn.Dropout.register_backward", false]], "register_backward() (compyute.nn.embedding static method)": [[445, "compyute.nn.Embedding.register_backward", false]], "register_backward() (compyute.nn.fastgelu static method)": [[462, "compyute.nn.FastGELU.register_backward", false]], "register_backward() (compyute.nn.flatten static method)": [[479, "compyute.nn.Flatten.register_backward", false]], "register_backward() (compyute.nn.gelu static method)": [[504, "compyute.nn.GELU.register_backward", false]], "register_backward() (compyute.nn.gru static method)": [[521, "compyute.nn.GRU.register_backward", false]], "register_backward() (compyute.nn.identity static method)": [[538, "compyute.nn.Identity.register_backward", false]], "register_backward() (compyute.nn.layernorm static method)": [[572, "compyute.nn.LayerNorm.register_backward", false]], "register_backward() (compyute.nn.leakyrelu static method)": [[589, "compyute.nn.LeakyReLU.register_backward", false]], "register_backward() (compyute.nn.linear static method)": [[606, "compyute.nn.Linear.register_backward", false]], "register_backward() (compyute.nn.loss static method)": [[616, "compyute.nn.Loss.register_backward", false]], "register_backward() (compyute.nn.lstm static method)": [[555, "compyute.nn.LSTM.register_backward", false]], "register_backward() (compyute.nn.maxpooling2d static method)": [[635, "compyute.nn.MaxPooling2D.register_backward", false]], "register_backward() (compyute.nn.module static method)": [[654, "compyute.nn.Module.register_backward", false]], "register_backward() (compyute.nn.mseloss static method)": [[622, "compyute.nn.MSELoss.register_backward", false]], "register_backward() (compyute.nn.paralleladd static method)": [[684, "compyute.nn.ParallelAdd.register_backward", false]], "register_backward() (compyute.nn.parallelconcat static method)": [[701, "compyute.nn.ParallelConcat.register_backward", false]], "register_backward() (compyute.nn.recurrent static method)": [[789, "compyute.nn.Recurrent.register_backward", false]], "register_backward() (compyute.nn.relu static method)": [[772, "compyute.nn.ReLU.register_backward", false]], "register_backward() (compyute.nn.reshape static method)": [[806, "compyute.nn.Reshape.register_backward", false]], "register_backward() (compyute.nn.residualconnection static method)": [[823, "compyute.nn.ResidualConnection.register_backward", false]], "register_backward() (compyute.nn.rmsnorm static method)": [[755, "compyute.nn.RMSNorm.register_backward", false]], "register_backward() (compyute.nn.sequential static method)": [[841, "compyute.nn.Sequential.register_backward", false]], "register_backward() (compyute.nn.sigmoid static method)": [[875, "compyute.nn.Sigmoid.register_backward", false]], "register_backward() (compyute.nn.silu static method)": [[858, "compyute.nn.SiLU.register_backward", false]], "register_backward() (compyute.nn.slice static method)": [[892, "compyute.nn.Slice.register_backward", false]], "register_backward() (compyute.nn.softmax static method)": [[909, "compyute.nn.Softmax.register_backward", false]], "register_backward() (compyute.nn.tanh static method)": [[926, "compyute.nn.Tanh.register_backward", false]], "register_backward() (compyute.nn.upsample2d static method)": [[943, "compyute.nn.Upsample2D.register_backward", false]], "register_forward() (compyute.nn.avgpooling2d static method)": [[203, "compyute.nn.AvgPooling2D.register_forward", false]], "register_forward() (compyute.nn.batchnorm1d static method)": [[226, "compyute.nn.BatchNorm1D.register_forward", false]], "register_forward() (compyute.nn.batchnorm2d static method)": [[243, "compyute.nn.BatchNorm2D.register_forward", false]], "register_forward() (compyute.nn.bceloss static method)": [[213, "compyute.nn.BCELoss.register_forward", false]], "register_forward() (compyute.nn.conv1d static method)": [[295, "compyute.nn.Conv1D.register_forward", false]], "register_forward() (compyute.nn.conv1dblock static method)": [[313, "compyute.nn.Conv1DBlock.register_forward", false]], "register_forward() (compyute.nn.conv2d static method)": [[330, "compyute.nn.Conv2D.register_forward", false]], "register_forward() (compyute.nn.conv2dblock static method)": [[348, "compyute.nn.Conv2DBlock.register_forward", false]], "register_forward() (compyute.nn.convtranspose1d static method)": [[365, "compyute.nn.ConvTranspose1D.register_forward", false]], "register_forward() (compyute.nn.convtranspose2d static method)": [[382, "compyute.nn.ConvTranspose2D.register_forward", false]], "register_forward() (compyute.nn.crossentropyloss static method)": [[392, "compyute.nn.CrossEntropyLoss.register_forward", false]], "register_forward() (compyute.nn.denseblock static method)": [[406, "compyute.nn.DenseBlock.register_forward", false]], "register_forward() (compyute.nn.diceloss static method)": [[416, "compyute.nn.DiceLoss.register_forward", false]], "register_forward() (compyute.nn.dropout static method)": [[429, "compyute.nn.Dropout.register_forward", false]], "register_forward() (compyute.nn.embedding static method)": [[446, "compyute.nn.Embedding.register_forward", false]], "register_forward() (compyute.nn.fastgelu static method)": [[463, "compyute.nn.FastGELU.register_forward", false]], "register_forward() (compyute.nn.flatten static method)": [[480, "compyute.nn.Flatten.register_forward", false]], "register_forward() (compyute.nn.gelu static method)": [[505, "compyute.nn.GELU.register_forward", false]], "register_forward() (compyute.nn.gru static method)": [[522, "compyute.nn.GRU.register_forward", false]], "register_forward() (compyute.nn.identity static method)": [[539, "compyute.nn.Identity.register_forward", false]], "register_forward() (compyute.nn.layernorm static method)": [[573, "compyute.nn.LayerNorm.register_forward", false]], "register_forward() (compyute.nn.leakyrelu static method)": [[590, "compyute.nn.LeakyReLU.register_forward", false]], "register_forward() (compyute.nn.linear static method)": [[607, "compyute.nn.Linear.register_forward", false]], "register_forward() (compyute.nn.loss static method)": [[617, "compyute.nn.Loss.register_forward", false]], "register_forward() (compyute.nn.lstm static method)": [[556, "compyute.nn.LSTM.register_forward", false]], "register_forward() (compyute.nn.maxpooling2d static method)": [[636, "compyute.nn.MaxPooling2D.register_forward", false]], "register_forward() (compyute.nn.module static method)": [[655, "compyute.nn.Module.register_forward", false]], "register_forward() (compyute.nn.mseloss static method)": [[623, "compyute.nn.MSELoss.register_forward", false]], "register_forward() (compyute.nn.paralleladd static method)": [[685, "compyute.nn.ParallelAdd.register_forward", false]], "register_forward() (compyute.nn.parallelconcat static method)": [[702, "compyute.nn.ParallelConcat.register_forward", false]], "register_forward() (compyute.nn.recurrent static method)": [[790, "compyute.nn.Recurrent.register_forward", false]], "register_forward() (compyute.nn.relu static method)": [[773, "compyute.nn.ReLU.register_forward", false]], "register_forward() (compyute.nn.reshape static method)": [[807, "compyute.nn.Reshape.register_forward", false]], "register_forward() (compyute.nn.residualconnection static method)": [[824, "compyute.nn.ResidualConnection.register_forward", false]], "register_forward() (compyute.nn.rmsnorm static method)": [[756, "compyute.nn.RMSNorm.register_forward", false]], "register_forward() (compyute.nn.sequential static method)": [[842, "compyute.nn.Sequential.register_forward", false]], "register_forward() (compyute.nn.sigmoid static method)": [[876, "compyute.nn.Sigmoid.register_forward", false]], "register_forward() (compyute.nn.silu static method)": [[859, "compyute.nn.SiLU.register_forward", false]], "register_forward() (compyute.nn.slice static method)": [[893, "compyute.nn.Slice.register_forward", false]], "register_forward() (compyute.nn.softmax static method)": [[910, "compyute.nn.Softmax.register_forward", false]], "register_forward() (compyute.nn.tanh static method)": [[927, "compyute.nn.Tanh.register_forward", false]], "register_forward() (compyute.nn.upsample2d static method)": [[944, "compyute.nn.Upsample2D.register_forward", false]], "relu (class in compyute.nn)": [[761, "compyute.nn.ReLU", false]], "relu() (in module compyute.nn.functional)": [[32, "compyute.nn.functional.relu", false]], "remove() (compyute.nn.modulelist method)": [[670, "compyute.nn.ModuleList.remove", false]], "repeat1d() (in module compyute)": [[1067, "compyute.repeat1d", false]], "repeat2d() (in module compyute)": [[1068, "compyute.repeat2d", false]], "reset_grads() (compyute.nn.optimizers.adam method)": [[43, "compyute.nn.optimizers.Adam.reset_grads", false]], "reset_grads() (compyute.nn.optimizers.adamw method)": [[50, "compyute.nn.optimizers.AdamW.reset_grads", false]], "reset_grads() (compyute.nn.optimizers.nadam method)": [[57, "compyute.nn.optimizers.NAdam.reset_grads", false]], "reset_grads() (compyute.nn.optimizers.optimizer method)": [[64, "compyute.nn.optimizers.Optimizer.reset_grads", false]], "reset_grads() (compyute.nn.optimizers.sgd method)": [[71, "compyute.nn.optimizers.SGD.reset_grads", false]], "reshape (class in compyute.nn)": [[795, "compyute.nn.Reshape", false]], "reshape() (in module compyute)": [[1069, "compyute.reshape", false]], "residualconnection (class in compyute.nn)": [[812, "compyute.nn.ResidualConnection", false]], "reverse() (compyute.nn.modulelist method)": [[671, "compyute.nn.ModuleList.reverse", false]], "rmsnorm (class in compyute.nn)": [[744, "compyute.nn.RMSNorm", false]], "rmsnorm() (in module compyute.nn.functional)": [[33, "compyute.nn.functional.rmsnorm", false]], "round() (in module compyute)": [[1070, "compyute.round", false]], "save() (in module compyute)": [[1071, "compyute.save", false]], "sech() (in module compyute)": [[1072, "compyute.sech", false]], "sequential (class in compyute.nn)": [[829, "compyute.nn.Sequential", false]], "set_debug_mode() (in module compyute)": [[1073, "compyute.set_debug_mode", false]], "set_default_device() (in module compyute)": [[1074, "compyute.set_default_device", false]], "set_default_dtype() (in module compyute)": [[1075, "compyute.set_default_dtype", false]], "set_parameters() (compyute.nn.optimizers.adam method)": [[44, "compyute.nn.optimizers.Adam.set_parameters", false]], "set_parameters() (compyute.nn.optimizers.adamw method)": [[51, "compyute.nn.optimizers.AdamW.set_parameters", false]], "set_parameters() (compyute.nn.optimizers.nadam method)": [[58, "compyute.nn.optimizers.NAdam.set_parameters", false]], "set_parameters() (compyute.nn.optimizers.optimizer method)": [[65, "compyute.nn.optimizers.Optimizer.set_parameters", false]], "set_parameters() (compyute.nn.optimizers.sgd method)": [[72, "compyute.nn.optimizers.SGD.set_parameters", false]], "set_seed() (in module compyute.random)": [[957, "compyute.random.set_seed", false]], "sgd (class in compyute.nn.optimizers)": [[67, "compyute.nn.optimizers.SGD", false]], "shuffle() (in module compyute.random)": [[958, "compyute.random.shuffle", false]], "sigmoid (class in compyute.nn)": [[864, "compyute.nn.Sigmoid", false]], "sigmoid() (in module compyute.nn.functional)": [[34, "compyute.nn.functional.sigmoid", false]], "silu (class in compyute.nn)": [[847, "compyute.nn.SiLU", false]], "silu() (in module compyute.nn.functional)": [[35, "compyute.nn.functional.silu", false]], "sin() (in module compyute)": [[1076, "compyute.sin", false]], "sinh() (in module compyute)": [[1077, "compyute.sinh", false]], "slice (class in compyute.nn)": [[881, "compyute.nn.Slice", false]], "softmax (class in compyute.nn)": [[898, "compyute.nn.Softmax", false]], "softmax() (in module compyute.nn.functional)": [[36, "compyute.nn.functional.softmax", false]], "sort() (compyute.nn.modulelist method)": [[672, "compyute.nn.ModuleList.sort", false]], "split() (in module compyute)": [[1078, "compyute.split", false]], "split_train_val_test() (in module compyute.preprocessing)": [[951, "compyute.preprocessing.split_train_val_test", false]], "sqrt() (in module compyute)": [[1079, "compyute.sqrt", false]], "squeeze() (compyute.nn.buffer method)": [[264, "compyute.nn.Buffer.squeeze", false]], "squeeze() (compyute.nn.parameter method)": [[723, "compyute.nn.Parameter.squeeze", false]], "squeeze() (compyute.tensor method)": [[979, "compyute.Tensor.squeeze", false]], "squeeze() (in module compyute)": [[1080, "compyute.squeeze", false]], "stack() (in module compyute)": [[1081, "compyute.stack", false]], "standardize() (in module compyute.preprocessing)": [[952, "compyute.preprocessing.standardize", false]], "std() (compyute.nn.buffer method)": [[265, "compyute.nn.Buffer.std", false]], "std() (compyute.nn.parameter method)": [[724, "compyute.nn.Parameter.std", false]], "std() (compyute.tensor method)": [[980, "compyute.Tensor.std", false]], "std() (in module compyute)": [[1082, "compyute.std", false]], "step() (compyute.nn.optimizers.adam method)": [[45, "compyute.nn.optimizers.Adam.step", false]], "step() (compyute.nn.optimizers.adamw method)": [[52, "compyute.nn.optimizers.AdamW.step", false]], "step() (compyute.nn.optimizers.nadam method)": [[59, "compyute.nn.optimizers.NAdam.step", false]], "step() (compyute.nn.optimizers.optimizer method)": [[66, "compyute.nn.optimizers.Optimizer.step", false]], "step() (compyute.nn.optimizers.sgd method)": [[73, "compyute.nn.optimizers.SGD.step", false]], "step() (compyute.nn.utils.lr_schedulers.adaptivelrscheduler method)": [[168, "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.step", false]], "step() (compyute.nn.utils.lr_schedulers.cosinelrscheduler method)": [[171, "compyute.nn.utils.lr_schedulers.CosineLrScheduler.step", false]], "step() (compyute.nn.utils.lr_schedulers.exponentiallrscheduler method)": [[174, "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.step", false]], "step() (compyute.nn.utils.lr_schedulers.lrscheduler method)": [[177, "compyute.nn.utils.lr_schedulers.LrScheduler.step", false]], "step() (compyute.nn.utils.lr_schedulers.multisteplrscheduler method)": [[180, "compyute.nn.utils.lr_schedulers.MultistepLrScheduler.step", false]], "step() (compyute.nn.utils.lr_schedulers.steplrscheduler method)": [[183, "compyute.nn.utils.lr_schedulers.StepLrScheduler.step", false]], "steplrscheduler (class in compyute.nn.trainer.callbacks)": [[138, "compyute.nn.trainer.callbacks.StepLrScheduler", false]], "steplrscheduler (class in compyute.nn.utils.lr_schedulers)": [[181, "compyute.nn.utils.lr_schedulers.StepLrScheduler", false]], "sum() (compyute.nn.buffer method)": [[266, "compyute.nn.Buffer.sum", false]], "sum() (compyute.nn.parameter method)": [[725, "compyute.nn.Parameter.sum", false]], "sum() (compyute.tensor method)": [[981, "compyute.Tensor.sum", false]], "sum() (in module compyute)": [[1083, "compyute.sum", false]], "summarywriter (class in compyute.nn.utils.tensorboard)": [[1110, "compyute.nn.utils.tensorboard.SummaryWriter", false]], "synchronize() (in module compyute.backend)": [[3, "compyute.backend.synchronize", false]], "tan() (in module compyute)": [[1084, "compyute.tan", false]], "tanh (class in compyute.nn)": [[915, "compyute.nn.Tanh", false]], "tanh() (in module compyute)": [[1085, "compyute.tanh", false]], "tanh() (in module compyute.nn.functional)": [[37, "compyute.nn.functional.tanh", false]], "tensor (class in compyute)": [[963, "compyute.Tensor", false]], "tensor() (in module compyute)": [[1086, "compyute.tensor", false]], "tensorboard (class in compyute.nn.trainer.callbacks)": [[146, "compyute.nn.trainer.callbacks.Tensorboard", false]], "tensorprod() (in module compyute)": [[1087, "compyute.tensorprod", false]], "tensorsum() (in module compyute)": [[1088, "compyute.tensorsum", false]], "tile() (in module compyute)": [[1089, "compyute.tile", false]], "to_complex() (compyute.nn.buffer method)": [[267, "compyute.nn.Buffer.to_complex", false]], "to_complex() (compyute.nn.parameter method)": [[726, "compyute.nn.Parameter.to_complex", false]], "to_complex() (compyute.tensor method)": [[982, "compyute.Tensor.to_complex", false]], "to_contiguous() (compyute.nn.buffer method)": [[268, "compyute.nn.Buffer.to_contiguous", false]], "to_contiguous() (compyute.nn.parameter method)": [[727, "compyute.nn.Parameter.to_contiguous", false]], "to_contiguous() (compyute.tensor method)": [[983, "compyute.Tensor.to_contiguous", false]], "to_cpu() (compyute.nn.buffer method)": [[269, "compyute.nn.Buffer.to_cpu", false]], "to_cpu() (compyute.nn.parameter method)": [[728, "compyute.nn.Parameter.to_cpu", false]], "to_cpu() (compyute.tensor method)": [[984, "compyute.Tensor.to_cpu", false]], "to_cuda() (compyute.nn.buffer method)": [[270, "compyute.nn.Buffer.to_cuda", false]], "to_cuda() (compyute.nn.parameter method)": [[729, "compyute.nn.Parameter.to_cuda", false]], "to_cuda() (compyute.tensor method)": [[985, "compyute.Tensor.to_cuda", false]], "to_device() (compyute.nn.avgpooling2d method)": [[204, "compyute.nn.AvgPooling2D.to_device", false]], "to_device() (compyute.nn.batchnorm1d method)": [[227, "compyute.nn.BatchNorm1D.to_device", false]], "to_device() (compyute.nn.batchnorm2d method)": [[244, "compyute.nn.BatchNorm2D.to_device", false]], "to_device() (compyute.nn.buffer method)": [[271, "compyute.nn.Buffer.to_device", false]], "to_device() (compyute.nn.conv1d method)": [[296, "compyute.nn.Conv1D.to_device", false]], "to_device() (compyute.nn.conv1dblock method)": [[314, "compyute.nn.Conv1DBlock.to_device", false]], "to_device() (compyute.nn.conv2d method)": [[331, "compyute.nn.Conv2D.to_device", false]], "to_device() (compyute.nn.conv2dblock method)": [[349, "compyute.nn.Conv2DBlock.to_device", false]], "to_device() (compyute.nn.convtranspose1d method)": [[366, "compyute.nn.ConvTranspose1D.to_device", false]], "to_device() (compyute.nn.convtranspose2d method)": [[383, "compyute.nn.ConvTranspose2D.to_device", false]], "to_device() (compyute.nn.denseblock method)": [[407, "compyute.nn.DenseBlock.to_device", false]], "to_device() (compyute.nn.dropout method)": [[430, "compyute.nn.Dropout.to_device", false]], "to_device() (compyute.nn.embedding method)": [[447, "compyute.nn.Embedding.to_device", false]], "to_device() (compyute.nn.fastgelu method)": [[464, "compyute.nn.FastGELU.to_device", false]], "to_device() (compyute.nn.flatten method)": [[481, "compyute.nn.Flatten.to_device", false]], "to_device() (compyute.nn.gelu method)": [[506, "compyute.nn.GELU.to_device", false]], "to_device() (compyute.nn.gru method)": [[523, "compyute.nn.GRU.to_device", false]], "to_device() (compyute.nn.identity method)": [[540, "compyute.nn.Identity.to_device", false]], "to_device() (compyute.nn.layernorm method)": [[574, "compyute.nn.LayerNorm.to_device", false]], "to_device() (compyute.nn.leakyrelu method)": [[591, "compyute.nn.LeakyReLU.to_device", false]], "to_device() (compyute.nn.linear method)": [[608, "compyute.nn.Linear.to_device", false]], "to_device() (compyute.nn.lstm method)": [[557, "compyute.nn.LSTM.to_device", false]], "to_device() (compyute.nn.maxpooling2d method)": [[637, "compyute.nn.MaxPooling2D.to_device", false]], "to_device() (compyute.nn.module method)": [[656, "compyute.nn.Module.to_device", false]], "to_device() (compyute.nn.paralleladd method)": [[686, "compyute.nn.ParallelAdd.to_device", false]], "to_device() (compyute.nn.parallelconcat method)": [[703, "compyute.nn.ParallelConcat.to_device", false]], "to_device() (compyute.nn.parameter method)": [[730, "compyute.nn.Parameter.to_device", false]], "to_device() (compyute.nn.recurrent method)": [[791, "compyute.nn.Recurrent.to_device", false]], "to_device() (compyute.nn.relu method)": [[774, "compyute.nn.ReLU.to_device", false]], "to_device() (compyute.nn.reshape method)": [[808, "compyute.nn.Reshape.to_device", false]], "to_device() (compyute.nn.residualconnection method)": [[825, "compyute.nn.ResidualConnection.to_device", false]], "to_device() (compyute.nn.rmsnorm method)": [[757, "compyute.nn.RMSNorm.to_device", false]], "to_device() (compyute.nn.sequential method)": [[843, "compyute.nn.Sequential.to_device", false]], "to_device() (compyute.nn.sigmoid method)": [[877, "compyute.nn.Sigmoid.to_device", false]], "to_device() (compyute.nn.silu method)": [[860, "compyute.nn.SiLU.to_device", false]], "to_device() (compyute.nn.slice method)": [[894, "compyute.nn.Slice.to_device", false]], "to_device() (compyute.nn.softmax method)": [[911, "compyute.nn.Softmax.to_device", false]], "to_device() (compyute.nn.tanh method)": [[928, "compyute.nn.Tanh.to_device", false]], "to_device() (compyute.nn.upsample2d method)": [[945, "compyute.nn.Upsample2D.to_device", false]], "to_device() (compyute.tensor method)": [[986, "compyute.Tensor.to_device", false]], "to_double() (compyute.nn.buffer method)": [[272, "compyute.nn.Buffer.to_double", false]], "to_double() (compyute.nn.parameter method)": [[731, "compyute.nn.Parameter.to_double", false]], "to_double() (compyute.tensor method)": [[987, "compyute.Tensor.to_double", false]], "to_float() (compyute.nn.buffer method)": [[273, "compyute.nn.Buffer.to_float", false]], "to_float() (compyute.nn.parameter method)": [[732, "compyute.nn.Parameter.to_float", false]], "to_float() (compyute.tensor method)": [[988, "compyute.Tensor.to_float", false]], "to_half() (compyute.nn.buffer method)": [[274, "compyute.nn.Buffer.to_half", false]], "to_half() (compyute.nn.parameter method)": [[733, "compyute.nn.Parameter.to_half", false]], "to_half() (compyute.tensor method)": [[989, "compyute.Tensor.to_half", false]], "to_int() (compyute.nn.buffer method)": [[275, "compyute.nn.Buffer.to_int", false]], "to_int() (compyute.nn.parameter method)": [[734, "compyute.nn.Parameter.to_int", false]], "to_int() (compyute.tensor method)": [[990, "compyute.Tensor.to_int", false]], "to_list() (compyute.nn.buffer method)": [[276, "compyute.nn.Buffer.to_list", false]], "to_list() (compyute.nn.parameter method)": [[735, "compyute.nn.Parameter.to_list", false]], "to_list() (compyute.tensor method)": [[991, "compyute.Tensor.to_list", false]], "to_long() (compyute.nn.buffer method)": [[277, "compyute.nn.Buffer.to_long", false]], "to_long() (compyute.nn.parameter method)": [[736, "compyute.nn.Parameter.to_long", false]], "to_long() (compyute.tensor method)": [[992, "compyute.Tensor.to_long", false]], "to_numpy() (compyute.nn.buffer method)": [[278, "compyute.nn.Buffer.to_numpy", false]], "to_numpy() (compyute.nn.parameter method)": [[737, "compyute.nn.Parameter.to_numpy", false]], "to_numpy() (compyute.tensor method)": [[993, "compyute.Tensor.to_numpy", false]], "to_type() (compyute.nn.avgpooling2d method)": [[205, "compyute.nn.AvgPooling2D.to_type", false]], "to_type() (compyute.nn.batchnorm1d method)": [[228, "compyute.nn.BatchNorm1D.to_type", false]], "to_type() (compyute.nn.batchnorm2d method)": [[245, "compyute.nn.BatchNorm2D.to_type", false]], "to_type() (compyute.nn.buffer method)": [[279, "compyute.nn.Buffer.to_type", false]], "to_type() (compyute.nn.conv1d method)": [[297, "compyute.nn.Conv1D.to_type", false]], "to_type() (compyute.nn.conv1dblock method)": [[315, "compyute.nn.Conv1DBlock.to_type", false]], "to_type() (compyute.nn.conv2d method)": [[332, "compyute.nn.Conv2D.to_type", false]], "to_type() (compyute.nn.conv2dblock method)": [[350, "compyute.nn.Conv2DBlock.to_type", false]], "to_type() (compyute.nn.convtranspose1d method)": [[367, "compyute.nn.ConvTranspose1D.to_type", false]], "to_type() (compyute.nn.convtranspose2d method)": [[384, "compyute.nn.ConvTranspose2D.to_type", false]], "to_type() (compyute.nn.denseblock method)": [[408, "compyute.nn.DenseBlock.to_type", false]], "to_type() (compyute.nn.dropout method)": [[431, "compyute.nn.Dropout.to_type", false]], "to_type() (compyute.nn.embedding method)": [[448, "compyute.nn.Embedding.to_type", false]], "to_type() (compyute.nn.fastgelu method)": [[465, "compyute.nn.FastGELU.to_type", false]], "to_type() (compyute.nn.flatten method)": [[482, "compyute.nn.Flatten.to_type", false]], "to_type() (compyute.nn.gelu method)": [[507, "compyute.nn.GELU.to_type", false]], "to_type() (compyute.nn.gru method)": [[524, "compyute.nn.GRU.to_type", false]], "to_type() (compyute.nn.identity method)": [[541, "compyute.nn.Identity.to_type", false]], "to_type() (compyute.nn.layernorm method)": [[575, "compyute.nn.LayerNorm.to_type", false]], "to_type() (compyute.nn.leakyrelu method)": [[592, "compyute.nn.LeakyReLU.to_type", false]], "to_type() (compyute.nn.linear method)": [[609, "compyute.nn.Linear.to_type", false]], "to_type() (compyute.nn.lstm method)": [[558, "compyute.nn.LSTM.to_type", false]], "to_type() (compyute.nn.maxpooling2d method)": [[638, "compyute.nn.MaxPooling2D.to_type", false]], "to_type() (compyute.nn.module method)": [[657, "compyute.nn.Module.to_type", false]], "to_type() (compyute.nn.paralleladd method)": [[687, "compyute.nn.ParallelAdd.to_type", false]], "to_type() (compyute.nn.parallelconcat method)": [[704, "compyute.nn.ParallelConcat.to_type", false]], "to_type() (compyute.nn.parameter method)": [[738, "compyute.nn.Parameter.to_type", false]], "to_type() (compyute.nn.recurrent method)": [[792, "compyute.nn.Recurrent.to_type", false]], "to_type() (compyute.nn.relu method)": [[775, "compyute.nn.ReLU.to_type", false]], "to_type() (compyute.nn.reshape method)": [[809, "compyute.nn.Reshape.to_type", false]], "to_type() (compyute.nn.residualconnection method)": [[826, "compyute.nn.ResidualConnection.to_type", false]], "to_type() (compyute.nn.rmsnorm method)": [[758, "compyute.nn.RMSNorm.to_type", false]], "to_type() (compyute.nn.sequential method)": [[844, "compyute.nn.Sequential.to_type", false]], "to_type() (compyute.nn.sigmoid method)": [[878, "compyute.nn.Sigmoid.to_type", false]], "to_type() (compyute.nn.silu method)": [[861, "compyute.nn.SiLU.to_type", false]], "to_type() (compyute.nn.slice method)": [[895, "compyute.nn.Slice.to_type", false]], "to_type() (compyute.nn.softmax method)": [[912, "compyute.nn.Softmax.to_type", false]], "to_type() (compyute.nn.tanh method)": [[929, "compyute.nn.Tanh.to_type", false]], "to_type() (compyute.nn.upsample2d method)": [[946, "compyute.nn.Upsample2D.to_type", false]], "to_type() (compyute.tensor method)": [[994, "compyute.Tensor.to_type", false]], "train() (compyute.nn.trainer.trainer method)": [[157, "compyute.nn.trainer.Trainer.train", false]], "trainer (class in compyute.nn.trainer)": [[154, "compyute.nn.trainer.Trainer", false]], "training() (compyute.nn.avgpooling2d method)": [[206, "compyute.nn.AvgPooling2D.training", false]], "training() (compyute.nn.batchnorm1d method)": [[229, "compyute.nn.BatchNorm1D.training", false]], "training() (compyute.nn.batchnorm2d method)": [[246, "compyute.nn.BatchNorm2D.training", false]], "training() (compyute.nn.conv1d method)": [[298, "compyute.nn.Conv1D.training", false]], "training() (compyute.nn.conv1dblock method)": [[316, "compyute.nn.Conv1DBlock.training", false]], "training() (compyute.nn.conv2d method)": [[333, "compyute.nn.Conv2D.training", false]], "training() (compyute.nn.conv2dblock method)": [[351, "compyute.nn.Conv2DBlock.training", false]], "training() (compyute.nn.convtranspose1d method)": [[368, "compyute.nn.ConvTranspose1D.training", false]], "training() (compyute.nn.convtranspose2d method)": [[385, "compyute.nn.ConvTranspose2D.training", false]], "training() (compyute.nn.denseblock method)": [[409, "compyute.nn.DenseBlock.training", false]], "training() (compyute.nn.dropout method)": [[432, "compyute.nn.Dropout.training", false]], "training() (compyute.nn.embedding method)": [[449, "compyute.nn.Embedding.training", false]], "training() (compyute.nn.fastgelu method)": [[466, "compyute.nn.FastGELU.training", false]], "training() (compyute.nn.flatten method)": [[483, "compyute.nn.Flatten.training", false]], "training() (compyute.nn.gelu method)": [[508, "compyute.nn.GELU.training", false]], "training() (compyute.nn.gru method)": [[525, "compyute.nn.GRU.training", false]], "training() (compyute.nn.identity method)": [[542, "compyute.nn.Identity.training", false]], "training() (compyute.nn.layernorm method)": [[576, "compyute.nn.LayerNorm.training", false]], "training() (compyute.nn.leakyrelu method)": [[593, "compyute.nn.LeakyReLU.training", false]], "training() (compyute.nn.linear method)": [[610, "compyute.nn.Linear.training", false]], "training() (compyute.nn.lstm method)": [[559, "compyute.nn.LSTM.training", false]], "training() (compyute.nn.maxpooling2d method)": [[639, "compyute.nn.MaxPooling2D.training", false]], "training() (compyute.nn.module method)": [[658, "compyute.nn.Module.training", false]], "training() (compyute.nn.paralleladd method)": [[688, "compyute.nn.ParallelAdd.training", false]], "training() (compyute.nn.parallelconcat method)": [[705, "compyute.nn.ParallelConcat.training", false]], "training() (compyute.nn.recurrent method)": [[793, "compyute.nn.Recurrent.training", false]], "training() (compyute.nn.relu method)": [[776, "compyute.nn.ReLU.training", false]], "training() (compyute.nn.reshape method)": [[810, "compyute.nn.Reshape.training", false]], "training() (compyute.nn.residualconnection method)": [[827, "compyute.nn.ResidualConnection.training", false]], "training() (compyute.nn.rmsnorm method)": [[759, "compyute.nn.RMSNorm.training", false]], "training() (compyute.nn.sequential method)": [[845, "compyute.nn.Sequential.training", false]], "training() (compyute.nn.sigmoid method)": [[879, "compyute.nn.Sigmoid.training", false]], "training() (compyute.nn.silu method)": [[862, "compyute.nn.SiLU.training", false]], "training() (compyute.nn.slice method)": [[896, "compyute.nn.Slice.training", false]], "training() (compyute.nn.softmax method)": [[913, "compyute.nn.Softmax.training", false]], "training() (compyute.nn.tanh method)": [[930, "compyute.nn.Tanh.training", false]], "training() (compyute.nn.upsample2d method)": [[947, "compyute.nn.Upsample2D.training", false]], "transpose() (compyute.nn.buffer method)": [[280, "compyute.nn.Buffer.transpose", false]], "transpose() (compyute.nn.parameter method)": [[739, "compyute.nn.Parameter.transpose", false]], "transpose() (compyute.tensor method)": [[995, "compyute.Tensor.transpose", false]], "transpose() (in module compyute)": [[1090, "compyute.transpose", false]], "tril() (in module compyute)": [[1091, "compyute.tril", false]], "triu() (in module compyute)": [[1092, "compyute.triu", false]], "uniform() (in module compyute.random)": [[959, "compyute.random.uniform", false]], "uniform_int() (in module compyute.random)": [[960, "compyute.random.uniform_int", false]], "unique() (in module compyute)": [[1093, "compyute.unique", false]], "update_parameter_grad() (compyute.nn.avgpooling2d method)": [[207, "compyute.nn.AvgPooling2D.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.batchnorm1d method)": [[230, "compyute.nn.BatchNorm1D.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.batchnorm2d method)": [[247, "compyute.nn.BatchNorm2D.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.conv1d method)": [[299, "compyute.nn.Conv1D.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.conv1dblock method)": [[317, "compyute.nn.Conv1DBlock.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.conv2d method)": [[334, "compyute.nn.Conv2D.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.conv2dblock method)": [[352, "compyute.nn.Conv2DBlock.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.convtranspose1d method)": [[369, "compyute.nn.ConvTranspose1D.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.convtranspose2d method)": [[386, "compyute.nn.ConvTranspose2D.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.denseblock method)": [[410, "compyute.nn.DenseBlock.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.dropout method)": [[433, "compyute.nn.Dropout.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.embedding method)": [[450, "compyute.nn.Embedding.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.fastgelu method)": [[467, "compyute.nn.FastGELU.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.flatten method)": [[484, "compyute.nn.Flatten.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.gelu method)": [[509, "compyute.nn.GELU.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.gru method)": [[526, "compyute.nn.GRU.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.identity method)": [[543, "compyute.nn.Identity.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.layernorm method)": [[577, "compyute.nn.LayerNorm.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.leakyrelu method)": [[594, "compyute.nn.LeakyReLU.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.linear method)": [[611, "compyute.nn.Linear.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.lstm method)": [[560, "compyute.nn.LSTM.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.maxpooling2d method)": [[640, "compyute.nn.MaxPooling2D.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.module method)": [[659, "compyute.nn.Module.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.paralleladd method)": [[689, "compyute.nn.ParallelAdd.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.parallelconcat method)": [[706, "compyute.nn.ParallelConcat.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.recurrent method)": [[794, "compyute.nn.Recurrent.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.relu method)": [[777, "compyute.nn.ReLU.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.reshape method)": [[811, "compyute.nn.Reshape.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.residualconnection method)": [[828, "compyute.nn.ResidualConnection.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.rmsnorm method)": [[760, "compyute.nn.RMSNorm.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.sequential method)": [[846, "compyute.nn.Sequential.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.sigmoid method)": [[880, "compyute.nn.Sigmoid.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.silu method)": [[863, "compyute.nn.SiLU.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.slice method)": [[897, "compyute.nn.Slice.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.softmax method)": [[914, "compyute.nn.Softmax.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.tanh method)": [[931, "compyute.nn.Tanh.update_parameter_grad", false]], "update_parameter_grad() (compyute.nn.upsample2d method)": [[948, "compyute.nn.Upsample2D.update_parameter_grad", false]], "upsample2d (class in compyute.nn)": [[932, "compyute.nn.Upsample2D", false]], "upsample2d() (in module compyute.nn.functional)": [[38, "compyute.nn.functional.upsample2d", false]], "use_device() (in module compyute)": [[1094, "compyute.use_device", false]], "use_dtype() (in module compyute)": [[1095, "compyute.use_dtype", false]], "var() (compyute.nn.buffer method)": [[281, "compyute.nn.Buffer.var", false]], "var() (compyute.nn.parameter method)": [[740, "compyute.nn.Parameter.var", false]], "var() (compyute.tensor method)": [[996, "compyute.Tensor.var", false]], "var() (in module compyute)": [[1096, "compyute.var", false]], "view() (compyute.nn.buffer method)": [[282, "compyute.nn.Buffer.view", false]], "view() (compyute.nn.parameter method)": [[741, "compyute.nn.Parameter.view", false]], "view() (compyute.tensor method)": [[997, "compyute.Tensor.view", false]], "zeros() (in module compyute)": [[1097, "compyute.zeros", false]], "zeros_like() (in module compyute)": [[1098, "compyute.zeros_like", false]]}, "objects": {"compyute": [[961, 0, 1, "", "Device"], [963, 0, 1, "", "Tensor"], [998, 2, 1, "", "abs"], [999, 2, 1, "", "all"], [1000, 2, 1, "", "allclose"], [1001, 2, 1, "", "any"], [1002, 2, 1, "", "append"], [1003, 2, 1, "", "arange"], [1004, 2, 1, "", "argmax"], [1005, 3, 1, "", "bool_"], [1006, 2, 1, "", "broadcast_to"], [1007, 2, 1, "", "clip"], [1008, 3, 1, "", "complex128"], [1009, 3, 1, "", "complex64"], [1010, 2, 1, "", "concat"], [1011, 2, 1, "", "convolve1d_fft"], [1012, 2, 1, "", "convolve2d_fft"], [1013, 2, 1, "", "cos"], [1014, 2, 1, "", "cosh"], [1015, 3, 1, "", "cpu"], [1016, 3, 1, "", "cuda"], [1017, 2, 1, "", "debug"], [1018, 2, 1, "", "diagonal"], [1019, 2, 1, "", "dot"], [1020, 2, 1, "", "einsum"], [1021, 2, 1, "", "empty"], [1022, 2, 1, "", "empty_like"], [1023, 2, 1, "", "exp"], [1024, 2, 1, "", "fft1d"], [1025, 2, 1, "", "fft2d"], [1026, 2, 1, "", "flatten"], [1027, 2, 1, "", "flip"], [1028, 3, 1, "", "float16"], [1029, 3, 1, "", "float32"], [1030, 3, 1, "", "float64"], [1031, 2, 1, "", "full"], [1032, 2, 1, "", "full_like"], [1033, 2, 1, "", "get_diagonal"], [1034, 2, 1, "", "histogram"], [1035, 2, 1, "", "identity"], [1036, 2, 1, "", "ifft1d"], [1037, 2, 1, "", "ifft2d"], [1038, 2, 1, "", "inner"], [1039, 2, 1, "", "insert_dim"], [1040, 3, 1, "", "int16"], [1041, 3, 1, "", "int32"], [1042, 3, 1, "", "int64"], [1043, 3, 1, "", "int8"], [1044, 2, 1, "", "is_nan"], [1045, 2, 1, "", "linspace"], [1046, 2, 1, "", "load"], [1047, 2, 1, "", "log"], [1048, 2, 1, "", "log10"], [1049, 2, 1, "", "log2"], [1050, 2, 1, "", "max"], [1051, 2, 1, "", "maximum"], [1052, 2, 1, "", "mean"], [1053, 2, 1, "", "min"], [1054, 2, 1, "", "minimum"], [1055, 2, 1, "", "movedim"], [1100, 3, 1, "", "newaxis"], [1056, 2, 1, "", "norm"], [1057, 2, 1, "", "ones"], [1058, 2, 1, "", "ones_like"], [1059, 2, 1, "", "outer"], [1060, 2, 1, "", "pad"], [1061, 2, 1, "", "pad_to_shape"], [1062, 2, 1, "", "permute"], [1063, 2, 1, "", "pooling1d"], [1064, 2, 1, "", "pooling2d"], [1065, 2, 1, "", "prod"], [1066, 2, 1, "", "real"], [1067, 2, 1, "", "repeat1d"], [1068, 2, 1, "", "repeat2d"], [1069, 2, 1, "", "reshape"], [1070, 2, 1, "", "round"], [1071, 2, 1, "", "save"], [1072, 2, 1, "", "sech"], [1073, 2, 1, "", "set_debug_mode"], [1074, 2, 1, "", "set_default_device"], [1075, 2, 1, "", "set_default_dtype"], [1076, 2, 1, "", "sin"], [1077, 2, 1, "", "sinh"], [1078, 2, 1, "", "split"], [1079, 2, 1, "", "sqrt"], [1080, 2, 1, "", "squeeze"], [1081, 2, 1, "", "stack"], [1082, 2, 1, "", "std"], [1083, 2, 1, "", "sum"], [1084, 2, 1, "", "tan"], [1085, 2, 1, "", "tanh"], [1086, 2, 1, "", "tensor"], [1087, 2, 1, "", "tensorprod"], [1088, 2, 1, "", "tensorsum"], [1089, 2, 1, "", "tile"], [1090, 2, 1, "", "transpose"], [1091, 2, 1, "", "tril"], [1092, 2, 1, "", "triu"], [1093, 2, 1, "", "unique"], [1094, 2, 1, "", "use_device"], [1095, 2, 1, "", "use_dtype"], [1096, 2, 1, "", "var"], [1097, 2, 1, "", "zeros"], [1098, 2, 1, "", "zeros_like"]], "compyute.Device": [[962, 1, 1, "", "__init__"]], "compyute.Tensor": [[964, 1, 1, "", "__init__"], [965, 1, 1, "", "abs"], [966, 1, 1, "", "all"], [967, 1, 1, "", "any"], [968, 1, 1, "", "argmax"], [969, 1, 1, "", "copy"], [970, 1, 1, "", "imag"], [971, 1, 1, "", "item"], [972, 1, 1, "", "ito_device"], [973, 1, 1, "", "ito_type"], [974, 1, 1, "", "max"], [975, 1, 1, "", "mean"], [976, 1, 1, "", "min"], [977, 1, 1, "", "permute"], [978, 1, 1, "", "real"], [979, 1, 1, "", "squeeze"], [980, 1, 1, "", "std"], [981, 1, 1, "", "sum"], [982, 1, 1, "", "to_complex"], [983, 1, 1, "", "to_contiguous"], [984, 1, 1, "", "to_cpu"], [985, 1, 1, "", "to_cuda"], [986, 1, 1, "", "to_device"], [987, 1, 1, "", "to_double"], [988, 1, 1, "", "to_float"], [989, 1, 1, "", "to_half"], [990, 1, 1, "", "to_int"], [991, 1, 1, "", "to_list"], [992, 1, 1, "", "to_long"], [993, 1, 1, "", "to_numpy"], [994, 1, 1, "", "to_type"], [995, 1, 1, "", "transpose"], [996, 1, 1, "", "var"], [997, 1, 1, "", "view"]], "compyute.backend": [[0, 2, 1, "", "free_memory"], [1, 2, 1, "", "get_device_count"], [2, 2, 1, "", "gpu_available"], [3, 2, 1, "", "synchronize"]], "compyute.nn": [[189, 0, 1, "", "Accuracy"], [191, 0, 1, "", "AvgPooling2D"], [208, 0, 1, "", "BCELoss"], [214, 0, 1, "", "BatchNorm1D"], [231, 0, 1, "", "BatchNorm2D"], [248, 0, 1, "", "Buffer"], [283, 0, 1, "", "Conv1D"], [300, 0, 1, "", "Conv1DBlock"], [318, 0, 1, "", "Conv2D"], [335, 0, 1, "", "Conv2DBlock"], [353, 0, 1, "", "ConvTranspose1D"], [370, 0, 1, "", "ConvTranspose2D"], [387, 0, 1, "", "CrossEntropyLoss"], [393, 0, 1, "", "DenseBlock"], [411, 0, 1, "", "DiceLoss"], [417, 0, 1, "", "Dropout"], [434, 0, 1, "", "Embedding"], [451, 0, 1, "", "FastGELU"], [468, 0, 1, "", "Flatten"], [485, 0, 1, "", "Function"], [489, 0, 1, "", "FunctionContext"], [493, 0, 1, "", "GELU"], [510, 0, 1, "", "GRU"], [527, 0, 1, "", "Identity"], [544, 0, 1, "", "LSTM"], [561, 0, 1, "", "LayerNorm"], [578, 0, 1, "", "LeakyReLU"], [595, 0, 1, "", "Linear"], [612, 0, 1, "", "Loss"], [618, 0, 1, "", "MSELoss"], [624, 0, 1, "", "MaxPooling2D"], [641, 0, 1, "", "Metric"], [643, 0, 1, "", "Module"], [660, 0, 1, "", "ModuleList"], [673, 0, 1, "", "ParallelAdd"], [690, 0, 1, "", "ParallelConcat"], [707, 0, 1, "", "Parameter"], [742, 0, 1, "", "R2"], [744, 0, 1, "", "RMSNorm"], [761, 0, 1, "", "ReLU"], [778, 0, 1, "", "Recurrent"], [795, 0, 1, "", "Reshape"], [812, 0, 1, "", "ResidualConnection"], [829, 0, 1, "", "Sequential"], [847, 0, 1, "", "SiLU"], [864, 0, 1, "", "Sigmoid"], [881, 0, 1, "", "Slice"], [898, 0, 1, "", "Softmax"], [915, 0, 1, "", "Tanh"], [932, 0, 1, "", "Upsample2D"]], "compyute.nn.Accuracy": [[190, 1, 1, "", "__init__"]], "compyute.nn.AvgPooling2D": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "backward"], [194, 1, 1, "", "clean"], [195, 1, 1, "", "forward"], [196, 1, 1, "", "get_buffers"], [197, 1, 1, "", "get_modules"], [198, 1, 1, "", "get_parameters"], [199, 1, 1, "", "get_state_dict"], [200, 1, 1, "", "inference"], [201, 1, 1, "", "load_state_dict"], [202, 1, 1, "", "register_backward"], [203, 1, 1, "", "register_forward"], [204, 1, 1, "", "to_device"], [205, 1, 1, "", "to_type"], [206, 1, 1, "", "training"], [207, 1, 1, "", "update_parameter_grad"]], "compyute.nn.BCELoss": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "backward"], [211, 1, 1, "", "forward"], [212, 1, 1, "", "register_backward"], [213, 1, 1, "", "register_forward"]], "compyute.nn.BatchNorm1D": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "backward"], [217, 1, 1, "", "clean"], [218, 1, 1, "", "forward"], [219, 1, 1, "", "get_buffers"], [220, 1, 1, "", "get_modules"], [221, 1, 1, "", "get_parameters"], [222, 1, 1, "", "get_state_dict"], [223, 1, 1, "", "inference"], [224, 1, 1, "", "load_state_dict"], [225, 1, 1, "", "register_backward"], [226, 1, 1, "", "register_forward"], [227, 1, 1, "", "to_device"], [228, 1, 1, "", "to_type"], [229, 1, 1, "", "training"], [230, 1, 1, "", "update_parameter_grad"]], "compyute.nn.BatchNorm2D": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "backward"], [234, 1, 1, "", "clean"], [235, 1, 1, "", "forward"], [236, 1, 1, "", "get_buffers"], [237, 1, 1, "", "get_modules"], [238, 1, 1, "", "get_parameters"], [239, 1, 1, "", "get_state_dict"], [240, 1, 1, "", "inference"], [241, 1, 1, "", "load_state_dict"], [242, 1, 1, "", "register_backward"], [243, 1, 1, "", "register_forward"], [244, 1, 1, "", "to_device"], [245, 1, 1, "", "to_type"], [246, 1, 1, "", "training"], [247, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Buffer": [[249, 1, 1, "", "__init__"], [250, 1, 1, "", "abs"], [251, 1, 1, "", "all"], [252, 1, 1, "", "any"], [253, 1, 1, "", "argmax"], [254, 1, 1, "", "copy"], [255, 1, 1, "", "imag"], [256, 1, 1, "", "item"], [257, 1, 1, "", "ito_device"], [258, 1, 1, "", "ito_type"], [259, 1, 1, "", "max"], [260, 1, 1, "", "mean"], [261, 1, 1, "", "min"], [262, 1, 1, "", "permute"], [263, 1, 1, "", "real"], [264, 1, 1, "", "squeeze"], [265, 1, 1, "", "std"], [266, 1, 1, "", "sum"], [267, 1, 1, "", "to_complex"], [268, 1, 1, "", "to_contiguous"], [269, 1, 1, "", "to_cpu"], [270, 1, 1, "", "to_cuda"], [271, 1, 1, "", "to_device"], [272, 1, 1, "", "to_double"], [273, 1, 1, "", "to_float"], [274, 1, 1, "", "to_half"], [275, 1, 1, "", "to_int"], [276, 1, 1, "", "to_list"], [277, 1, 1, "", "to_long"], [278, 1, 1, "", "to_numpy"], [279, 1, 1, "", "to_type"], [280, 1, 1, "", "transpose"], [281, 1, 1, "", "var"], [282, 1, 1, "", "view"]], "compyute.nn.Conv1D": [[284, 1, 1, "", "__init__"], [285, 1, 1, "", "backward"], [286, 1, 1, "", "clean"], [287, 1, 1, "", "forward"], [288, 1, 1, "", "get_buffers"], [289, 1, 1, "", "get_modules"], [290, 1, 1, "", "get_parameters"], [291, 1, 1, "", "get_state_dict"], [292, 1, 1, "", "inference"], [293, 1, 1, "", "load_state_dict"], [294, 1, 1, "", "register_backward"], [295, 1, 1, "", "register_forward"], [296, 1, 1, "", "to_device"], [297, 1, 1, "", "to_type"], [298, 1, 1, "", "training"], [299, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Conv1DBlock": [[301, 1, 1, "", "__init__"], [302, 1, 1, "", "add"], [303, 1, 1, "", "backward"], [304, 1, 1, "", "clean"], [305, 1, 1, "", "forward"], [306, 1, 1, "", "get_buffers"], [307, 1, 1, "", "get_modules"], [308, 1, 1, "", "get_parameters"], [309, 1, 1, "", "get_state_dict"], [310, 1, 1, "", "inference"], [311, 1, 1, "", "load_state_dict"], [312, 1, 1, "", "register_backward"], [313, 1, 1, "", "register_forward"], [314, 1, 1, "", "to_device"], [315, 1, 1, "", "to_type"], [316, 1, 1, "", "training"], [317, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Conv2D": [[319, 1, 1, "", "__init__"], [320, 1, 1, "", "backward"], [321, 1, 1, "", "clean"], [322, 1, 1, "", "forward"], [323, 1, 1, "", "get_buffers"], [324, 1, 1, "", "get_modules"], [325, 1, 1, "", "get_parameters"], [326, 1, 1, "", "get_state_dict"], [327, 1, 1, "", "inference"], [328, 1, 1, "", "load_state_dict"], [329, 1, 1, "", "register_backward"], [330, 1, 1, "", "register_forward"], [331, 1, 1, "", "to_device"], [332, 1, 1, "", "to_type"], [333, 1, 1, "", "training"], [334, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Conv2DBlock": [[336, 1, 1, "", "__init__"], [337, 1, 1, "", "add"], [338, 1, 1, "", "backward"], [339, 1, 1, "", "clean"], [340, 1, 1, "", "forward"], [341, 1, 1, "", "get_buffers"], [342, 1, 1, "", "get_modules"], [343, 1, 1, "", "get_parameters"], [344, 1, 1, "", "get_state_dict"], [345, 1, 1, "", "inference"], [346, 1, 1, "", "load_state_dict"], [347, 1, 1, "", "register_backward"], [348, 1, 1, "", "register_forward"], [349, 1, 1, "", "to_device"], [350, 1, 1, "", "to_type"], [351, 1, 1, "", "training"], [352, 1, 1, "", "update_parameter_grad"]], "compyute.nn.ConvTranspose1D": [[354, 1, 1, "", "__init__"], [355, 1, 1, "", "backward"], [356, 1, 1, "", "clean"], [357, 1, 1, "", "forward"], [358, 1, 1, "", "get_buffers"], [359, 1, 1, "", "get_modules"], [360, 1, 1, "", "get_parameters"], [361, 1, 1, "", "get_state_dict"], [362, 1, 1, "", "inference"], [363, 1, 1, "", "load_state_dict"], [364, 1, 1, "", "register_backward"], [365, 1, 1, "", "register_forward"], [366, 1, 1, "", "to_device"], [367, 1, 1, "", "to_type"], [368, 1, 1, "", "training"], [369, 1, 1, "", "update_parameter_grad"]], "compyute.nn.ConvTranspose2D": [[371, 1, 1, "", "__init__"], [372, 1, 1, "", "backward"], [373, 1, 1, "", "clean"], [374, 1, 1, "", "forward"], [375, 1, 1, "", "get_buffers"], [376, 1, 1, "", "get_modules"], [377, 1, 1, "", "get_parameters"], [378, 1, 1, "", "get_state_dict"], [379, 1, 1, "", "inference"], [380, 1, 1, "", "load_state_dict"], [381, 1, 1, "", "register_backward"], [382, 1, 1, "", "register_forward"], [383, 1, 1, "", "to_device"], [384, 1, 1, "", "to_type"], [385, 1, 1, "", "training"], [386, 1, 1, "", "update_parameter_grad"]], "compyute.nn.CrossEntropyLoss": [[388, 1, 1, "", "__init__"], [389, 1, 1, "", "backward"], [390, 1, 1, "", "forward"], [391, 1, 1, "", "register_backward"], [392, 1, 1, "", "register_forward"]], "compyute.nn.DenseBlock": [[394, 1, 1, "", "__init__"], [395, 1, 1, "", "add"], [396, 1, 1, "", "backward"], [397, 1, 1, "", "clean"], [398, 1, 1, "", "forward"], [399, 1, 1, "", "get_buffers"], [400, 1, 1, "", "get_modules"], [401, 1, 1, "", "get_parameters"], [402, 1, 1, "", "get_state_dict"], [403, 1, 1, "", "inference"], [404, 1, 1, "", "load_state_dict"], [405, 1, 1, "", "register_backward"], [406, 1, 1, "", "register_forward"], [407, 1, 1, "", "to_device"], [408, 1, 1, "", "to_type"], [409, 1, 1, "", "training"], [410, 1, 1, "", "update_parameter_grad"]], "compyute.nn.DiceLoss": [[412, 1, 1, "", "__init__"], [413, 1, 1, "", "backward"], [414, 1, 1, "", "forward"], [415, 1, 1, "", "register_backward"], [416, 1, 1, "", "register_forward"]], "compyute.nn.Dropout": [[418, 1, 1, "", "__init__"], [419, 1, 1, "", "backward"], [420, 1, 1, "", "clean"], [421, 1, 1, "", "forward"], [422, 1, 1, "", "get_buffers"], [423, 1, 1, "", "get_modules"], [424, 1, 1, "", "get_parameters"], [425, 1, 1, "", "get_state_dict"], [426, 1, 1, "", "inference"], [427, 1, 1, "", "load_state_dict"], [428, 1, 1, "", "register_backward"], [429, 1, 1, "", "register_forward"], [430, 1, 1, "", "to_device"], [431, 1, 1, "", "to_type"], [432, 1, 1, "", "training"], [433, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Embedding": [[435, 1, 1, "", "__init__"], [436, 1, 1, "", "backward"], [437, 1, 1, "", "clean"], [438, 1, 1, "", "forward"], [439, 1, 1, "", "get_buffers"], [440, 1, 1, "", "get_modules"], [441, 1, 1, "", "get_parameters"], [442, 1, 1, "", "get_state_dict"], [443, 1, 1, "", "inference"], [444, 1, 1, "", "load_state_dict"], [445, 1, 1, "", "register_backward"], [446, 1, 1, "", "register_forward"], [447, 1, 1, "", "to_device"], [448, 1, 1, "", "to_type"], [449, 1, 1, "", "training"], [450, 1, 1, "", "update_parameter_grad"]], "compyute.nn.FastGELU": [[452, 1, 1, "", "__init__"], [453, 1, 1, "", "backward"], [454, 1, 1, "", "clean"], [455, 1, 1, "", "forward"], [456, 1, 1, "", "get_buffers"], [457, 1, 1, "", "get_modules"], [458, 1, 1, "", "get_parameters"], [459, 1, 1, "", "get_state_dict"], [460, 1, 1, "", "inference"], [461, 1, 1, "", "load_state_dict"], [462, 1, 1, "", "register_backward"], [463, 1, 1, "", "register_forward"], [464, 1, 1, "", "to_device"], [465, 1, 1, "", "to_type"], [466, 1, 1, "", "training"], [467, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Flatten": [[469, 1, 1, "", "__init__"], [470, 1, 1, "", "backward"], [471, 1, 1, "", "clean"], [472, 1, 1, "", "forward"], [473, 1, 1, "", "get_buffers"], [474, 1, 1, "", "get_modules"], [475, 1, 1, "", "get_parameters"], [476, 1, 1, "", "get_state_dict"], [477, 1, 1, "", "inference"], [478, 1, 1, "", "load_state_dict"], [479, 1, 1, "", "register_backward"], [480, 1, 1, "", "register_forward"], [481, 1, 1, "", "to_device"], [482, 1, 1, "", "to_type"], [483, 1, 1, "", "training"], [484, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Function": [[486, 1, 1, "", "__init__"], [487, 1, 1, "", "backward"], [488, 1, 1, "", "forward"]], "compyute.nn.FunctionContext": [[490, 1, 1, "", "__init__"], [491, 1, 1, "", "add"], [492, 1, 1, "", "get"]], "compyute.nn.GELU": [[494, 1, 1, "", "__init__"], [495, 1, 1, "", "backward"], [496, 1, 1, "", "clean"], [497, 1, 1, "", "forward"], [498, 1, 1, "", "get_buffers"], [499, 1, 1, "", "get_modules"], [500, 1, 1, "", "get_parameters"], [501, 1, 1, "", "get_state_dict"], [502, 1, 1, "", "inference"], [503, 1, 1, "", "load_state_dict"], [504, 1, 1, "", "register_backward"], [505, 1, 1, "", "register_forward"], [506, 1, 1, "", "to_device"], [507, 1, 1, "", "to_type"], [508, 1, 1, "", "training"], [509, 1, 1, "", "update_parameter_grad"]], "compyute.nn.GRU": [[511, 1, 1, "", "__init__"], [512, 1, 1, "", "backward"], [513, 1, 1, "", "clean"], [514, 1, 1, "", "forward"], [515, 1, 1, "", "get_buffers"], [516, 1, 1, "", "get_modules"], [517, 1, 1, "", "get_parameters"], [518, 1, 1, "", "get_state_dict"], [519, 1, 1, "", "inference"], [520, 1, 1, "", "load_state_dict"], [521, 1, 1, "", "register_backward"], [522, 1, 1, "", "register_forward"], [523, 1, 1, "", "to_device"], [524, 1, 1, "", "to_type"], [525, 1, 1, "", "training"], [526, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Identity": [[528, 1, 1, "", "__init__"], [529, 1, 1, "", "backward"], [530, 1, 1, "", "clean"], [531, 1, 1, "", "forward"], [532, 1, 1, "", "get_buffers"], [533, 1, 1, "", "get_modules"], [534, 1, 1, "", "get_parameters"], [535, 1, 1, "", "get_state_dict"], [536, 1, 1, "", "inference"], [537, 1, 1, "", "load_state_dict"], [538, 1, 1, "", "register_backward"], [539, 1, 1, "", "register_forward"], [540, 1, 1, "", "to_device"], [541, 1, 1, "", "to_type"], [542, 1, 1, "", "training"], [543, 1, 1, "", "update_parameter_grad"]], "compyute.nn.LSTM": [[545, 1, 1, "", "__init__"], [546, 1, 1, "", "backward"], [547, 1, 1, "", "clean"], [548, 1, 1, "", "forward"], [549, 1, 1, "", "get_buffers"], [550, 1, 1, "", "get_modules"], [551, 1, 1, "", "get_parameters"], [552, 1, 1, "", "get_state_dict"], [553, 1, 1, "", "inference"], [554, 1, 1, "", "load_state_dict"], [555, 1, 1, "", "register_backward"], [556, 1, 1, "", "register_forward"], [557, 1, 1, "", "to_device"], [558, 1, 1, "", "to_type"], [559, 1, 1, "", "training"], [560, 1, 1, "", "update_parameter_grad"]], "compyute.nn.LayerNorm": [[562, 1, 1, "", "__init__"], [563, 1, 1, "", "backward"], [564, 1, 1, "", "clean"], [565, 1, 1, "", "forward"], [566, 1, 1, "", "get_buffers"], [567, 1, 1, "", "get_modules"], [568, 1, 1, "", "get_parameters"], [569, 1, 1, "", "get_state_dict"], [570, 1, 1, "", "inference"], [571, 1, 1, "", "load_state_dict"], [572, 1, 1, "", "register_backward"], [573, 1, 1, "", "register_forward"], [574, 1, 1, "", "to_device"], [575, 1, 1, "", "to_type"], [576, 1, 1, "", "training"], [577, 1, 1, "", "update_parameter_grad"]], "compyute.nn.LeakyReLU": [[579, 1, 1, "", "__init__"], [580, 1, 1, "", "backward"], [581, 1, 1, "", "clean"], [582, 1, 1, "", "forward"], [583, 1, 1, "", "get_buffers"], [584, 1, 1, "", "get_modules"], [585, 1, 1, "", "get_parameters"], [586, 1, 1, "", "get_state_dict"], [587, 1, 1, "", "inference"], [588, 1, 1, "", "load_state_dict"], [589, 1, 1, "", "register_backward"], [590, 1, 1, "", "register_forward"], [591, 1, 1, "", "to_device"], [592, 1, 1, "", "to_type"], [593, 1, 1, "", "training"], [594, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Linear": [[596, 1, 1, "", "__init__"], [597, 1, 1, "", "backward"], [598, 1, 1, "", "clean"], [599, 1, 1, "", "forward"], [600, 1, 1, "", "get_buffers"], [601, 1, 1, "", "get_modules"], [602, 1, 1, "", "get_parameters"], [603, 1, 1, "", "get_state_dict"], [604, 1, 1, "", "inference"], [605, 1, 1, "", "load_state_dict"], [606, 1, 1, "", "register_backward"], [607, 1, 1, "", "register_forward"], [608, 1, 1, "", "to_device"], [609, 1, 1, "", "to_type"], [610, 1, 1, "", "training"], [611, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Loss": [[613, 1, 1, "", "__init__"], [614, 1, 1, "", "backward"], [615, 1, 1, "", "forward"], [616, 1, 1, "", "register_backward"], [617, 1, 1, "", "register_forward"]], "compyute.nn.MSELoss": [[619, 1, 1, "", "__init__"], [620, 1, 1, "", "backward"], [621, 1, 1, "", "forward"], [622, 1, 1, "", "register_backward"], [623, 1, 1, "", "register_forward"]], "compyute.nn.MaxPooling2D": [[625, 1, 1, "", "__init__"], [626, 1, 1, "", "backward"], [627, 1, 1, "", "clean"], [628, 1, 1, "", "forward"], [629, 1, 1, "", "get_buffers"], [630, 1, 1, "", "get_modules"], [631, 1, 1, "", "get_parameters"], [632, 1, 1, "", "get_state_dict"], [633, 1, 1, "", "inference"], [634, 1, 1, "", "load_state_dict"], [635, 1, 1, "", "register_backward"], [636, 1, 1, "", "register_forward"], [637, 1, 1, "", "to_device"], [638, 1, 1, "", "to_type"], [639, 1, 1, "", "training"], [640, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Metric": [[642, 1, 1, "", "__init__"]], "compyute.nn.Module": [[644, 1, 1, "", "__init__"], [645, 1, 1, "", "backward"], [646, 1, 1, "", "clean"], [647, 1, 1, "", "forward"], [648, 1, 1, "", "get_buffers"], [649, 1, 1, "", "get_modules"], [650, 1, 1, "", "get_parameters"], [651, 1, 1, "", "get_state_dict"], [652, 1, 1, "", "inference"], [653, 1, 1, "", "load_state_dict"], [654, 1, 1, "", "register_backward"], [655, 1, 1, "", "register_forward"], [656, 1, 1, "", "to_device"], [657, 1, 1, "", "to_type"], [658, 1, 1, "", "training"], [659, 1, 1, "", "update_parameter_grad"]], "compyute.nn.ModuleList": [[661, 1, 1, "", "__init__"], [662, 1, 1, "", "append"], [663, 1, 1, "", "clear"], [664, 1, 1, "", "copy"], [665, 1, 1, "", "count"], [666, 1, 1, "", "extend"], [667, 1, 1, "", "index"], [668, 1, 1, "", "insert"], [669, 1, 1, "", "pop"], [670, 1, 1, "", "remove"], [671, 1, 1, "", "reverse"], [672, 1, 1, "", "sort"]], "compyute.nn.ParallelAdd": [[674, 1, 1, "", "__init__"], [675, 1, 1, "", "backward"], [676, 1, 1, "", "clean"], [677, 1, 1, "", "forward"], [678, 1, 1, "", "get_buffers"], [679, 1, 1, "", "get_modules"], [680, 1, 1, "", "get_parameters"], [681, 1, 1, "", "get_state_dict"], [682, 1, 1, "", "inference"], [683, 1, 1, "", "load_state_dict"], [684, 1, 1, "", "register_backward"], [685, 1, 1, "", "register_forward"], [686, 1, 1, "", "to_device"], [687, 1, 1, "", "to_type"], [688, 1, 1, "", "training"], [689, 1, 1, "", "update_parameter_grad"]], "compyute.nn.ParallelConcat": [[691, 1, 1, "", "__init__"], [692, 1, 1, "", "backward"], [693, 1, 1, "", "clean"], [694, 1, 1, "", "forward"], [695, 1, 1, "", "get_buffers"], [696, 1, 1, "", "get_modules"], [697, 1, 1, "", "get_parameters"], [698, 1, 1, "", "get_state_dict"], [699, 1, 1, "", "inference"], [700, 1, 1, "", "load_state_dict"], [701, 1, 1, "", "register_backward"], [702, 1, 1, "", "register_forward"], [703, 1, 1, "", "to_device"], [704, 1, 1, "", "to_type"], [705, 1, 1, "", "training"], [706, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Parameter": [[708, 1, 1, "", "__init__"], [709, 1, 1, "", "abs"], [710, 1, 1, "", "all"], [711, 1, 1, "", "any"], [712, 1, 1, "", "argmax"], [713, 1, 1, "", "copy"], [714, 1, 1, "", "imag"], [715, 1, 1, "", "item"], [716, 1, 1, "", "ito_device"], [717, 1, 1, "", "ito_type"], [718, 1, 1, "", "max"], [719, 1, 1, "", "mean"], [720, 1, 1, "", "min"], [721, 1, 1, "", "permute"], [722, 1, 1, "", "real"], [723, 1, 1, "", "squeeze"], [724, 1, 1, "", "std"], [725, 1, 1, "", "sum"], [726, 1, 1, "", "to_complex"], [727, 1, 1, "", "to_contiguous"], [728, 1, 1, "", "to_cpu"], [729, 1, 1, "", "to_cuda"], [730, 1, 1, "", "to_device"], [731, 1, 1, "", "to_double"], [732, 1, 1, "", "to_float"], [733, 1, 1, "", "to_half"], [734, 1, 1, "", "to_int"], [735, 1, 1, "", "to_list"], [736, 1, 1, "", "to_long"], [737, 1, 1, "", "to_numpy"], [738, 1, 1, "", "to_type"], [739, 1, 1, "", "transpose"], [740, 1, 1, "", "var"], [741, 1, 1, "", "view"]], "compyute.nn.R2": [[743, 1, 1, "", "__init__"]], "compyute.nn.RMSNorm": [[745, 1, 1, "", "__init__"], [746, 1, 1, "", "backward"], [747, 1, 1, "", "clean"], [748, 1, 1, "", "forward"], [749, 1, 1, "", "get_buffers"], [750, 1, 1, "", "get_modules"], [751, 1, 1, "", "get_parameters"], [752, 1, 1, "", "get_state_dict"], [753, 1, 1, "", "inference"], [754, 1, 1, "", "load_state_dict"], [755, 1, 1, "", "register_backward"], [756, 1, 1, "", "register_forward"], [757, 1, 1, "", "to_device"], [758, 1, 1, "", "to_type"], [759, 1, 1, "", "training"], [760, 1, 1, "", "update_parameter_grad"]], "compyute.nn.ReLU": [[762, 1, 1, "", "__init__"], [763, 1, 1, "", "backward"], [764, 1, 1, "", "clean"], [765, 1, 1, "", "forward"], [766, 1, 1, "", "get_buffers"], [767, 1, 1, "", "get_modules"], [768, 1, 1, "", "get_parameters"], [769, 1, 1, "", "get_state_dict"], [770, 1, 1, "", "inference"], [771, 1, 1, "", "load_state_dict"], [772, 1, 1, "", "register_backward"], [773, 1, 1, "", "register_forward"], [774, 1, 1, "", "to_device"], [775, 1, 1, "", "to_type"], [776, 1, 1, "", "training"], [777, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Recurrent": [[779, 1, 1, "", "__init__"], [780, 1, 1, "", "backward"], [781, 1, 1, "", "clean"], [782, 1, 1, "", "forward"], [783, 1, 1, "", "get_buffers"], [784, 1, 1, "", "get_modules"], [785, 1, 1, "", "get_parameters"], [786, 1, 1, "", "get_state_dict"], [787, 1, 1, "", "inference"], [788, 1, 1, "", "load_state_dict"], [789, 1, 1, "", "register_backward"], [790, 1, 1, "", "register_forward"], [791, 1, 1, "", "to_device"], [792, 1, 1, "", "to_type"], [793, 1, 1, "", "training"], [794, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Reshape": [[796, 1, 1, "", "__init__"], [797, 1, 1, "", "backward"], [798, 1, 1, "", "clean"], [799, 1, 1, "", "forward"], [800, 1, 1, "", "get_buffers"], [801, 1, 1, "", "get_modules"], [802, 1, 1, "", "get_parameters"], [803, 1, 1, "", "get_state_dict"], [804, 1, 1, "", "inference"], [805, 1, 1, "", "load_state_dict"], [806, 1, 1, "", "register_backward"], [807, 1, 1, "", "register_forward"], [808, 1, 1, "", "to_device"], [809, 1, 1, "", "to_type"], [810, 1, 1, "", "training"], [811, 1, 1, "", "update_parameter_grad"]], "compyute.nn.ResidualConnection": [[813, 1, 1, "", "__init__"], [814, 1, 1, "", "backward"], [815, 1, 1, "", "clean"], [816, 1, 1, "", "forward"], [817, 1, 1, "", "get_buffers"], [818, 1, 1, "", "get_modules"], [819, 1, 1, "", "get_parameters"], [820, 1, 1, "", "get_state_dict"], [821, 1, 1, "", "inference"], [822, 1, 1, "", "load_state_dict"], [823, 1, 1, "", "register_backward"], [824, 1, 1, "", "register_forward"], [825, 1, 1, "", "to_device"], [826, 1, 1, "", "to_type"], [827, 1, 1, "", "training"], [828, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Sequential": [[830, 1, 1, "", "__init__"], [831, 1, 1, "", "add"], [832, 1, 1, "", "backward"], [833, 1, 1, "", "clean"], [834, 1, 1, "", "forward"], [835, 1, 1, "", "get_buffers"], [836, 1, 1, "", "get_modules"], [837, 1, 1, "", "get_parameters"], [838, 1, 1, "", "get_state_dict"], [839, 1, 1, "", "inference"], [840, 1, 1, "", "load_state_dict"], [841, 1, 1, "", "register_backward"], [842, 1, 1, "", "register_forward"], [843, 1, 1, "", "to_device"], [844, 1, 1, "", "to_type"], [845, 1, 1, "", "training"], [846, 1, 1, "", "update_parameter_grad"]], "compyute.nn.SiLU": [[848, 1, 1, "", "__init__"], [849, 1, 1, "", "backward"], [850, 1, 1, "", "clean"], [851, 1, 1, "", "forward"], [852, 1, 1, "", "get_buffers"], [853, 1, 1, "", "get_modules"], [854, 1, 1, "", "get_parameters"], [855, 1, 1, "", "get_state_dict"], [856, 1, 1, "", "inference"], [857, 1, 1, "", "load_state_dict"], [858, 1, 1, "", "register_backward"], [859, 1, 1, "", "register_forward"], [860, 1, 1, "", "to_device"], [861, 1, 1, "", "to_type"], [862, 1, 1, "", "training"], [863, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Sigmoid": [[865, 1, 1, "", "__init__"], [866, 1, 1, "", "backward"], [867, 1, 1, "", "clean"], [868, 1, 1, "", "forward"], [869, 1, 1, "", "get_buffers"], [870, 1, 1, "", "get_modules"], [871, 1, 1, "", "get_parameters"], [872, 1, 1, "", "get_state_dict"], [873, 1, 1, "", "inference"], [874, 1, 1, "", "load_state_dict"], [875, 1, 1, "", "register_backward"], [876, 1, 1, "", "register_forward"], [877, 1, 1, "", "to_device"], [878, 1, 1, "", "to_type"], [879, 1, 1, "", "training"], [880, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Slice": [[882, 1, 1, "", "__init__"], [883, 1, 1, "", "backward"], [884, 1, 1, "", "clean"], [885, 1, 1, "", "forward"], [886, 1, 1, "", "get_buffers"], [887, 1, 1, "", "get_modules"], [888, 1, 1, "", "get_parameters"], [889, 1, 1, "", "get_state_dict"], [890, 1, 1, "", "inference"], [891, 1, 1, "", "load_state_dict"], [892, 1, 1, "", "register_backward"], [893, 1, 1, "", "register_forward"], [894, 1, 1, "", "to_device"], [895, 1, 1, "", "to_type"], [896, 1, 1, "", "training"], [897, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Softmax": [[899, 1, 1, "", "__init__"], [900, 1, 1, "", "backward"], [901, 1, 1, "", "clean"], [902, 1, 1, "", "forward"], [903, 1, 1, "", "get_buffers"], [904, 1, 1, "", "get_modules"], [905, 1, 1, "", "get_parameters"], [906, 1, 1, "", "get_state_dict"], [907, 1, 1, "", "inference"], [908, 1, 1, "", "load_state_dict"], [909, 1, 1, "", "register_backward"], [910, 1, 1, "", "register_forward"], [911, 1, 1, "", "to_device"], [912, 1, 1, "", "to_type"], [913, 1, 1, "", "training"], [914, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Tanh": [[916, 1, 1, "", "__init__"], [917, 1, 1, "", "backward"], [918, 1, 1, "", "clean"], [919, 1, 1, "", "forward"], [920, 1, 1, "", "get_buffers"], [921, 1, 1, "", "get_modules"], [922, 1, 1, "", "get_parameters"], [923, 1, 1, "", "get_state_dict"], [924, 1, 1, "", "inference"], [925, 1, 1, "", "load_state_dict"], [926, 1, 1, "", "register_backward"], [927, 1, 1, "", "register_forward"], [928, 1, 1, "", "to_device"], [929, 1, 1, "", "to_type"], [930, 1, 1, "", "training"], [931, 1, 1, "", "update_parameter_grad"]], "compyute.nn.Upsample2D": [[933, 1, 1, "", "__init__"], [934, 1, 1, "", "backward"], [935, 1, 1, "", "clean"], [936, 1, 1, "", "forward"], [937, 1, 1, "", "get_buffers"], [938, 1, 1, "", "get_modules"], [939, 1, 1, "", "get_parameters"], [940, 1, 1, "", "get_state_dict"], [941, 1, 1, "", "inference"], [942, 1, 1, "", "load_state_dict"], [943, 1, 1, "", "register_backward"], [944, 1, 1, "", "register_forward"], [945, 1, 1, "", "to_device"], [946, 1, 1, "", "to_type"], [947, 1, 1, "", "training"], [948, 1, 1, "", "update_parameter_grad"]], "compyute.nn.functional": [[4, 2, 1, "", "accuracy_score"], [5, 2, 1, "", "avgpooling2d"], [6, 2, 1, "", "batchnorm1d"], [7, 2, 1, "", "batchnorm2d"], [8, 2, 1, "", "bce_loss"], [9, 2, 1, "", "conv1d"], [10, 2, 1, "", "conv2d"], [11, 2, 1, "", "conv_transpose1d"], [12, 2, 1, "", "conv_transpose2d"], [13, 2, 1, "", "cross_entropy_loss"], [14, 2, 1, "", "dice_loss"], [15, 2, 1, "", "dilate1d"], [16, 2, 1, "", "dilate2d"], [17, 2, 1, "", "dropout"], [18, 2, 1, "", "embedding"], [19, 2, 1, "", "fast_gelu"], [20, 2, 1, "", "gelu"], [21, 2, 1, "", "gru"], [22, 2, 1, "", "layernorm"], [23, 2, 1, "", "leaky_relu"], [24, 2, 1, "", "linear"], [25, 2, 1, "", "lstm"], [26, 2, 1, "", "maxpooling2d"], [27, 2, 1, "", "mse_loss"], [28, 2, 1, "", "pad1d"], [29, 2, 1, "", "pad2d"], [30, 2, 1, "", "r2_score"], [31, 2, 1, "", "recurrent"], [32, 2, 1, "", "relu"], [33, 2, 1, "", "rmsnorm"], [34, 2, 1, "", "sigmoid"], [35, 2, 1, "", "silu"], [36, 2, 1, "", "softmax"], [37, 2, 1, "", "tanh"], [38, 2, 1, "", "upsample2d"]], "compyute.nn.optimizers": [[39, 0, 1, "", "Adam"], [46, 0, 1, "", "AdamW"], [53, 0, 1, "", "NAdam"], [60, 0, 1, "", "Optimizer"], [67, 0, 1, "", "SGD"]], "compyute.nn.optimizers.Adam": [[40, 1, 1, "", "__init__"], [41, 1, 1, "", "get_state_dict"], [42, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "reset_grads"], [44, 1, 1, "", "set_parameters"], [45, 1, 1, "", "step"]], "compyute.nn.optimizers.AdamW": [[47, 1, 1, "", "__init__"], [48, 1, 1, "", "get_state_dict"], [49, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "reset_grads"], [51, 1, 1, "", "set_parameters"], [52, 1, 1, "", "step"]], "compyute.nn.optimizers.NAdam": [[54, 1, 1, "", "__init__"], [55, 1, 1, "", "get_state_dict"], [56, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "reset_grads"], [58, 1, 1, "", "set_parameters"], [59, 1, 1, "", "step"]], "compyute.nn.optimizers.Optimizer": [[61, 1, 1, "", "__init__"], [62, 1, 1, "", "get_state_dict"], [63, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "reset_grads"], [65, 1, 1, "", "set_parameters"], [66, 1, 1, "", "step"]], "compyute.nn.optimizers.SGD": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "get_state_dict"], [70, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "reset_grads"], [72, 1, 1, "", "set_parameters"], [73, 1, 1, "", "step"]], "compyute.nn.trainer": [[154, 0, 1, "", "Trainer"]], "compyute.nn.trainer.Trainer": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "evaluate_model"], [157, 1, 1, "", "train"]], "compyute.nn.trainer.callbacks": [[74, 0, 1, "", "AdaptiveLrScheduler"], [82, 0, 1, "", "Callback"], [90, 0, 1, "", "CosineLrScheduler"], [98, 0, 1, "", "EarlyStopping"], [106, 0, 1, "", "ExponentialLrScheduler"], [114, 0, 1, "", "History"], [122, 0, 1, "", "MultistepLrScheduler"], [130, 0, 1, "", "ProgressBar"], [138, 0, 1, "", "StepLrScheduler"], [146, 0, 1, "", "Tensorboard"]], "compyute.nn.trainer.callbacks.AdaptiveLrScheduler": [[75, 1, 1, "", "__init__"], [76, 1, 1, "", "on_epoch_end"], [77, 1, 1, "", "on_epoch_start"], [78, 1, 1, "", "on_run_end"], [79, 1, 1, "", "on_run_start"], [80, 1, 1, "", "on_step_end"], [81, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.Callback": [[83, 1, 1, "", "__init__"], [84, 1, 1, "", "on_epoch_end"], [85, 1, 1, "", "on_epoch_start"], [86, 1, 1, "", "on_run_end"], [87, 1, 1, "", "on_run_start"], [88, 1, 1, "", "on_step_end"], [89, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.CosineLrScheduler": [[91, 1, 1, "", "__init__"], [92, 1, 1, "", "on_epoch_end"], [93, 1, 1, "", "on_epoch_start"], [94, 1, 1, "", "on_run_end"], [95, 1, 1, "", "on_run_start"], [96, 1, 1, "", "on_step_end"], [97, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.EarlyStopping": [[99, 1, 1, "", "__init__"], [100, 1, 1, "", "on_epoch_end"], [101, 1, 1, "", "on_epoch_start"], [102, 1, 1, "", "on_run_end"], [103, 1, 1, "", "on_run_start"], [104, 1, 1, "", "on_step_end"], [105, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.ExponentialLrScheduler": [[107, 1, 1, "", "__init__"], [108, 1, 1, "", "on_epoch_end"], [109, 1, 1, "", "on_epoch_start"], [110, 1, 1, "", "on_run_end"], [111, 1, 1, "", "on_run_start"], [112, 1, 1, "", "on_step_end"], [113, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.History": [[115, 1, 1, "", "__init__"], [116, 1, 1, "", "on_epoch_end"], [117, 1, 1, "", "on_epoch_start"], [118, 1, 1, "", "on_run_end"], [119, 1, 1, "", "on_run_start"], [120, 1, 1, "", "on_step_end"], [121, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.MultistepLrScheduler": [[123, 1, 1, "", "__init__"], [124, 1, 1, "", "on_epoch_end"], [125, 1, 1, "", "on_epoch_start"], [126, 1, 1, "", "on_run_end"], [127, 1, 1, "", "on_run_start"], [128, 1, 1, "", "on_step_end"], [129, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.ProgressBar": [[131, 1, 1, "", "__init__"], [132, 1, 1, "", "on_epoch_end"], [133, 1, 1, "", "on_epoch_start"], [134, 1, 1, "", "on_run_end"], [135, 1, 1, "", "on_run_start"], [136, 1, 1, "", "on_step_end"], [137, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.StepLrScheduler": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "on_epoch_end"], [141, 1, 1, "", "on_epoch_start"], [142, 1, 1, "", "on_run_end"], [143, 1, 1, "", "on_run_start"], [144, 1, 1, "", "on_step_end"], [145, 1, 1, "", "on_step_start"]], "compyute.nn.trainer.callbacks.Tensorboard": [[147, 1, 1, "", "__init__"], [148, 1, 1, "", "on_epoch_end"], [149, 1, 1, "", "on_epoch_start"], [150, 1, 1, "", "on_run_end"], [151, 1, 1, "", "on_run_start"], [152, 1, 1, "", "on_step_end"], [153, 1, 1, "", "on_step_start"]], "compyute.nn.utils": [[184, 0, 1, "", "Dataloader"], [186, 2, 1, "", "batched"], [187, 2, 1, "", "clip_grad_norm"], [188, 2, 1, "", "get_module_summary"]], "compyute.nn.utils.Dataloader": [[185, 1, 1, "", "__init__"]], "compyute.nn.utils.initializers": [[158, 2, 1, "", "init_kaiming_normal"], [159, 2, 1, "", "init_kaiming_uniform"], [160, 2, 1, "", "init_normal"], [161, 2, 1, "", "init_ones"], [162, 2, 1, "", "init_uniform"], [163, 2, 1, "", "init_xavier_normal"], [164, 2, 1, "", "init_xavier_uniform"], [165, 2, 1, "", "init_zeros"]], "compyute.nn.utils.lr_schedulers": [[166, 0, 1, "", "AdaptiveLrScheduler"], [169, 0, 1, "", "CosineLrScheduler"], [172, 0, 1, "", "ExponentialLrScheduler"], [175, 0, 1, "", "LrScheduler"], [178, 0, 1, "", "MultistepLrScheduler"], [181, 0, 1, "", "StepLrScheduler"]], "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "step"]], "compyute.nn.utils.lr_schedulers.CosineLrScheduler": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "step"]], "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "step"]], "compyute.nn.utils.lr_schedulers.LrScheduler": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "step"]], "compyute.nn.utils.lr_schedulers.MultistepLrScheduler": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "step"]], "compyute.nn.utils.lr_schedulers.StepLrScheduler": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "step"]], "compyute.nn.utils.tensorboard": [[1110, 0, 1, "", "SummaryWriter"]], "compyute.preprocessing": [[949, 2, 1, "", "normalize"], [950, 2, 1, "", "one_hot_encode"], [951, 2, 1, "", "split_train_val_test"], [952, 2, 1, "", "standardize"]], "compyute.random": [[953, 2, 1, "", "multinomial"], [954, 2, 1, "", "normal"], [955, 2, 1, "", "permutation"], [956, 2, 1, "", "random"], [957, 2, 1, "", "set_seed"], [958, 2, 1, "", "shuffle"], [959, 2, 1, "", "uniform"], [960, 2, 1, "", "uniform_int"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "data", "Python data"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:data"}, "terms": {"": [210, 214, 389, 413, 434, 510, 544, 614, 620, 778, 1034, 1037, 1060, 1062, 1099], "0": [6, 7, 8, 9, 10, 11, 12, 17, 23, 39, 40, 42, 46, 47, 49, 53, 54, 56, 60, 61, 63, 67, 68, 70, 74, 75, 90, 106, 107, 122, 123, 138, 139, 160, 162, 166, 167, 169, 172, 173, 178, 179, 181, 182, 184, 185, 186, 201, 208, 214, 215, 224, 231, 232, 241, 281, 283, 293, 300, 301, 311, 318, 328, 335, 336, 346, 363, 380, 404, 411, 417, 418, 427, 434, 444, 461, 478, 493, 503, 520, 537, 554, 571, 578, 579, 588, 605, 634, 653, 667, 683, 700, 740, 754, 761, 771, 788, 805, 822, 840, 857, 874, 891, 908, 925, 942, 949, 951, 952, 954, 956, 959, 961, 962, 996, 1003, 1015, 1016, 1033, 1081, 1091, 1092, 1096, 1099], "001": [39, 40, 46, 47, 60, 61, 67, 68], "002": [53, 54], "004": [53, 54], "01": [23, 46, 47, 578, 579], "044715": 493, "05": [6, 7, 22, 33, 214, 215, 231, 232, 300, 301, 335, 336, 561, 562, 744, 745, 1000], "08": [13, 30, 39, 40, 46, 47, 53, 54, 390, 742, 743, 1000], "1": [6, 7, 8, 9, 10, 11, 12, 36, 39, 46, 53, 67, 74, 75, 106, 107, 122, 123, 138, 139, 157, 160, 162, 166, 167, 172, 173, 178, 179, 181, 182, 184, 185, 186, 208, 214, 215, 231, 232, 256, 283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 387, 411, 434, 451, 493, 510, 544, 595, 618, 669, 673, 690, 691, 715, 744, 778, 847, 864, 898, 949, 950, 951, 952, 954, 956, 959, 971, 1002, 1003, 1010, 1024, 1025, 1036, 1037, 1063, 1064, 1078, 1080, 1099], "10": [74, 75, 166, 167, 1034, 1048, 1099, 1110], "100": [157, 1099], "10mm": 67, "115mm": [39, 46, 53, 67], "120": 1110, "128": 1008, "16": [1028, 1040, 1099], "1997": 544, "1d": [6, 283, 300, 353, 1024, 1026, 1036], "1e": [6, 7, 13, 22, 30, 33, 39, 40, 46, 47, 53, 54, 60, 67, 214, 215, 231, 232, 300, 301, 335, 336, 390, 561, 562, 742, 743, 744, 745, 1000], "1pt": [39, 46, 53, 67], "1st": [39, 46, 53], "2": [5, 26, 38, 39, 46, 53, 67, 166, 167, 191, 192, 318, 353, 370, 411, 493, 618, 624, 625, 744, 932, 933, 1025, 1037, 1049, 1099], "2010": [163, 164], "2014": [39, 510], "2015": [53, 158, 159, 214, 231, 353, 370], "2016": [411, 451, 493, 561], "2017": 46, "2019": [417, 744], "2d": [7, 318, 335, 370, 1025, 1037], "2e": 53, "2nd": [39, 46, 53], "3": [39, 46, 53, 60, 67, 98, 99, 1099], "32": [156, 157, 1029, 1041, 1099], "4": [39, 46, 53, 67, 1099], "4e": 53, "4f": 1099, "5": [6, 7, 17, 22, 33, 39, 46, 53, 67, 74, 75, 166, 214, 231, 300, 335, 417, 418, 493, 561, 1099], "5mm": [39, 53, 67], "6": [39, 46, 53, 67, 1099], "64": [1009, 1030, 1042], "7": [39, 46, 53, 67, 1099], "702x": 451, "8": [13, 30, 53, 67, 742, 1043, 1099], "9": [39, 40, 46, 47, 53, 54, 67, 1099], "9223372036854775807": 667, "96": 53, "99": 1099, "999": [39, 40, 46, 47, 53, 54], "A": [13, 1100], "As": 1099, "For": [510, 544, 778, 963, 1099], "IN": 671, "If": [9, 10, 11, 12, 24, 38, 157, 214, 231, 283, 300, 318, 335, 353, 370, 393, 417, 434, 451, 468, 493, 510, 527, 544, 561, 578, 595, 643, 672, 673, 690, 707, 744, 761, 778, 795, 812, 829, 847, 864, 881, 898, 915, 932, 949, 950, 952, 953, 957, 999, 1001, 1004, 1007, 1050, 1052, 1053, 1056, 1065, 1082, 1083, 1086, 1096, 1099], "It": 963, "One": 950, "The": [208, 210, 214, 231, 389, 413, 614, 620, 672, 744, 954, 955, 956, 959, 960, 1003, 1021, 1031, 1033, 1034, 1035, 1045, 1057, 1074, 1075, 1086, 1097, 1099], "There": 1099, "With": 1099, "_": 1099, "__init__": 1099, "_activationlik": [158, 159, 163, 164], "_i": [208, 387, 618], "_initializerlik": 300, "_n": 411, "_shapelik": [188, 561, 744], "abort": 98, "about": [188, 1073], "abov": [208, 1033, 1091, 1092], "absolut": [250, 709, 965, 998, 1000], "abstract": [66, 177, 487, 488, 614, 615, 645, 647], "accord": 672, "accuraci": [4, 1099], "achiev": 812, "across": [1063, 1064], "act": [510, 544], "activ": [19, 20, 21, 25, 31, 32, 35, 36, 37, 158, 159, 163, 164, 300, 301, 335, 336, 393, 394, 451, 493, 510, 511, 544, 545, 578, 761, 778, 779, 847, 864, 898, 915, 1017, 1073, 1099], "activationlik": [300, 335, 393], "ad": [9, 10, 11, 12, 13, 24, 950, 1039, 1099], "adam": 1099, "adapt": [74, 90, 106, 122, 138, 166, 169, 172, 175, 178, 181], "add": [660, 1099], "addit": 950, "addition": [42, 49, 56, 63, 70, 1099], "after": [38, 80, 88, 90, 96, 104, 112, 120, 128, 136, 144, 152, 169, 932], "aggreg": [1099, 1100], "al": [39, 46, 158, 159, 163, 164, 214, 231, 353, 370, 411, 417, 451, 493, 510, 544, 561, 744], "algebra": 1099, "algorithm": [39, 46, 53, 67, 154, 1099], "alia": 1100, "align": [39, 46, 53, 67], "all": [90, 157, 169, 663, 1000, 1027, 1060, 1099], "along": [253, 690, 712, 951, 958, 968, 999, 1001, 1002, 1004, 1010, 1027, 1050, 1052, 1053, 1056, 1065, 1067, 1068, 1078, 1081, 1082, 1083, 1089, 1096], "alpha": [23, 578, 579], "alreadi": 1099, "also": 1099, "altern": 1099, "am": 1099, "an": [23, 34, 36, 74, 90, 106, 122, 138, 166, 169, 172, 178, 181, 196, 198, 219, 221, 236, 238, 288, 290, 300, 306, 308, 323, 325, 335, 341, 343, 358, 360, 375, 377, 393, 399, 401, 422, 424, 439, 441, 456, 458, 473, 475, 498, 500, 515, 517, 532, 534, 549, 551, 566, 568, 583, 585, 600, 602, 629, 631, 648, 650, 678, 680, 695, 697, 707, 749, 751, 761, 766, 768, 783, 785, 800, 802, 817, 819, 835, 837, 852, 854, 869, 871, 886, 888, 903, 905, 920, 922, 937, 939, 950, 953, 1020, 1021, 1039, 1046, 1071, 1099], "ani": [41, 42, 48, 49, 55, 56, 62, 63, 69, 70, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 256, 715, 971, 1046, 1087, 1088, 1099], "append": 666, "appli": [9, 10, 19, 20, 21, 23, 24, 25, 28, 29, 31, 32, 34, 35, 36, 37, 90, 106, 122, 138, 169, 172, 178, 181, 283, 300, 318, 335, 353, 370, 595, 672, 761], "approch": 1099, "approxim": [451, 493], "ar": [38, 154, 157, 214, 231, 251, 283, 318, 353, 370, 434, 489, 510, 544, 561, 595, 710, 744, 778, 812, 932, 953, 966, 999, 1000, 1022, 1027, 1032, 1058, 1073, 1086, 1089, 1098, 1099, 1100], "arang": 953, "arbitrari": 1086, "arg": [487, 488], "arithmet": 1099, "around": 812, "arrai": [278, 510, 544, 737, 963, 993, 1099, 1100], "arraylik": [963, 1086], "ascend": 672, "assign": [42, 49, 56, 63, 70], "associ": 1034, "atol": 1000, "attribut": [191, 214, 231, 248, 283, 300, 318, 335, 353, 370, 393, 417, 434, 451, 468, 489, 493, 510, 527, 544, 561, 578, 595, 624, 643, 673, 690, 707, 744, 761, 778, 795, 812, 829, 847, 864, 881, 898, 915, 932, 961, 963], "autograd": 1099, "automat": [963, 1099], "avail": [1, 2, 1099, 1100], "averag": [5, 39, 46, 53, 191], "avoid": 812, "axi": 1099, "b": [6, 7, 9, 10, 11, 12, 22, 24, 214, 231, 283, 300, 318, 335, 353, 370, 510, 544, 561, 595, 744, 778], "b_": [510, 544, 778], "b_1": [393, 434, 595], "b_h": [21, 25, 31], "b_i": [21, 25, 31], "b_n": [393, 434, 595], "ba": 561, "backend": 1113, "backward": [202, 212, 225, 242, 294, 312, 329, 347, 364, 381, 391, 405, 415, 428, 445, 462, 479, 504, 521, 538, 555, 572, 589, 606, 616, 622, 635, 654, 684, 701, 755, 772, 789, 806, 823, 841, 858, 875, 892, 909, 926, 943, 1099], "bar": 130, "base": [60, 74, 82, 166, 175, 485, 612, 641, 643, 961, 1022, 1048, 1049, 1058, 1098, 1099], "basic": 1099, "batch": [6, 7, 184, 188, 214, 231, 283, 300, 318, 335, 353, 370, 393, 434, 468, 510, 544, 561, 595, 744, 778], "batch_siz": [156, 157, 184, 185, 186, 1099], "batchnorm": [300, 301, 335, 336], "batchnorm1d": 300, "batchnorm2d": [335, 1099], "batchnorm_ep": [300, 301, 335, 336], "batchnorm_m": [300, 301, 335, 336], "bceloss": 8, "befor": [81, 89, 97, 98, 105, 113, 121, 129, 137, 145, 153, 283, 300, 318, 335, 668], "begin": [28, 29, 39, 46, 53, 67, 510, 544, 1060], "being": [17, 417], "below": [1033, 1091, 1092], "best": 98, "beta1": [39, 40, 46, 47, 53, 54], "beta2": [39, 40, 46, 47, 53, 54], "beta_1": [39, 46, 53], "beta_2": [39, 46, 53], "between": 1003, "bia": [6, 7, 9, 10, 11, 12, 21, 22, 24, 25, 31, 283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 393, 394, 510, 511, 544, 545, 595, 596, 778, 779], "bias": [214, 231, 283, 318, 353, 370, 510, 544, 561, 595, 778], "bias_init": [300, 301, 335, 336, 393, 394], "bin": 1034, "binari": [8, 208, 1046, 1071], "binrang": 1034, "bit": [1008, 1009, 1028, 1029, 1030, 1040, 1041, 1042, 1043], "block": [0, 300, 335, 393, 812, 1099], "bn": 1099, "bool": [6, 7, 17, 67, 98, 184, 186, 194, 196, 198, 217, 219, 221, 234, 236, 238, 283, 286, 288, 290, 300, 304, 306, 308, 318, 321, 323, 325, 335, 339, 341, 343, 353, 356, 358, 360, 370, 373, 375, 377, 393, 397, 399, 401, 420, 422, 424, 437, 439, 441, 454, 456, 458, 471, 473, 475, 496, 498, 500, 510, 513, 515, 517, 530, 532, 534, 544, 547, 549, 551, 564, 566, 568, 581, 583, 585, 595, 598, 600, 602, 627, 629, 631, 646, 648, 650, 673, 676, 678, 680, 693, 695, 697, 747, 749, 751, 764, 766, 768, 778, 781, 783, 785, 798, 800, 802, 815, 817, 819, 833, 835, 837, 850, 852, 854, 867, 869, 871, 884, 886, 888, 901, 903, 905, 918, 920, 922, 935, 937, 939, 999, 1000, 1001, 1004, 1005, 1034, 1050, 1052, 1053, 1056, 1065, 1073, 1082, 1083, 1096], "boolean": [999, 1001, 1005, 1044], "bound": [162, 949, 959, 960, 1007], "broadcast": 1006, "buffer": [42, 49, 56, 63, 70, 196, 199, 201, 219, 222, 224, 236, 239, 241, 288, 291, 293, 306, 309, 311, 323, 326, 328, 341, 344, 346, 358, 361, 363, 375, 378, 380, 399, 402, 404, 422, 425, 427, 439, 442, 444, 456, 459, 461, 473, 476, 478, 498, 501, 503, 515, 518, 520, 532, 535, 537, 549, 552, 554, 566, 569, 571, 583, 586, 588, 600, 603, 605, 629, 632, 634, 648, 651, 653, 678, 681, 683, 695, 698, 700, 749, 752, 754, 766, 769, 771, 783, 786, 788, 800, 803, 805, 817, 820, 822, 835, 838, 840, 852, 855, 857, 869, 872, 874, 886, 889, 891, 903, 906, 908, 920, 923, 925, 937, 940, 942], "bug": 1099, "built": 1099, "bwd_fn": [202, 212, 225, 242, 294, 312, 329, 347, 364, 381, 391, 405, 415, 428, 445, 462, 479, 504, 521, 538, 555, 572, 589, 606, 616, 622, 635, 654, 684, 701, 755, 772, 789, 806, 823, 841, 858, 875, 892, 909, 926, 943], "c": [214, 231, 268, 411, 727, 983, 1099], "c_": [283, 300, 318, 335, 353, 370, 393, 510, 544, 595, 778], "c_t": 544, "cach": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 489], "calcul": [6, 7, 17, 1020, 1096], "call": [184, 186], "callback": [154, 155, 1099, 1113], "can": [208, 672, 963, 1086, 1099], "cast": [205, 228, 245, 258, 279, 297, 315, 332, 350, 367, 384, 408, 431, 448, 465, 482, 507, 524, 541, 558, 575, 592, 609, 638, 657, 687, 704, 717, 738, 758, 775, 792, 809, 826, 844, 861, 878, 895, 912, 929, 946, 973, 994], "categor": 950, "cdot": [53, 208, 214, 231, 283, 387, 451, 493, 561, 578, 744, 847], "central": 1099, "chang": [1099, 1100], "channel": [214, 215, 231, 232, 283, 300, 318, 335, 353, 370, 393, 510, 544, 595, 778], "check": 2, "checkpoint": 1099, "cheer": 1099, "child": [188, 196, 197, 198, 219, 220, 221, 236, 237, 238, 288, 289, 290, 306, 307, 308, 323, 324, 325, 341, 342, 343, 358, 359, 360, 375, 376, 377, 399, 400, 401, 422, 423, 424, 439, 440, 441, 456, 457, 458, 473, 474, 475, 498, 499, 500, 515, 516, 517, 532, 533, 534, 549, 550, 551, 566, 567, 568, 583, 584, 585, 600, 601, 602, 629, 630, 631, 648, 649, 650, 678, 679, 680, 695, 696, 697, 749, 750, 751, 766, 767, 768, 783, 784, 785, 800, 801, 802, 817, 818, 819, 835, 836, 837, 852, 853, 854, 869, 870, 871, 886, 887, 888, 903, 904, 905, 920, 921, 922, 937, 938, 939], "cho": 510, "class": [4, 8, 13, 14, 39, 46, 53, 60, 67, 74, 82, 90, 98, 106, 114, 122, 130, 138, 146, 154, 166, 169, 172, 175, 178, 181, 184, 189, 191, 208, 214, 231, 248, 283, 300, 318, 335, 353, 370, 387, 393, 411, 417, 434, 451, 468, 485, 489, 493, 510, 527, 544, 561, 578, 595, 612, 618, 624, 641, 643, 660, 673, 690, 707, 742, 744, 761, 778, 795, 812, 829, 847, 864, 881, 898, 915, 932, 950, 961, 963, 1099, 1110], "classic": 1020, "clip": 187, "code": 1099, "coeffici": [30, 53, 742], "col": [11, 12, 353, 370], "collaps": [999, 1001, 1004, 1050, 1052, 1053, 1056, 1065, 1082, 1083, 1096], "color": [318, 335, 370], "column": 950, "com": 1099, "come": 1099, "comet_config": 1110, "comma": 1020, "comment": 1110, "common": 1099, "complex": [255, 263, 267, 714, 722, 726, 970, 978, 982, 1008, 1009, 1024, 1025, 1066], "complex64": [267, 726, 982], "compos": 1099, "comput": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 30, 74, 166, 189, 208, 210, 211, 214, 231, 250, 259, 260, 261, 265, 266, 281, 387, 389, 390, 411, 413, 414, 489, 510, 544, 561, 614, 615, 618, 620, 621, 709, 718, 719, 720, 724, 725, 740, 742, 744, 778, 965, 974, 975, 976, 980, 981, 996, 998, 1011, 1012, 1013, 1014, 1019, 1020, 1023, 1024, 1025, 1034, 1036, 1037, 1038, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1059, 1065, 1072, 1076, 1077, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1096, 1099], "concat_dim": [690, 691], "concaten": [690, 1010], "concatin": 690, "connect": 812, "consid": [74, 98, 166, 950], "constant": [6, 7, 13, 22, 30, 33, 39, 46, 53, 214, 231, 300, 335, 561, 742], "constantli": 1099, "construct": 1033, "contact": 1099, "contain": [18, 41, 42, 48, 49, 55, 56, 62, 63, 69, 70, 199, 201, 222, 224, 239, 241, 291, 293, 300, 302, 309, 311, 326, 328, 335, 337, 344, 346, 361, 363, 378, 380, 393, 395, 402, 404, 425, 427, 442, 444, 459, 461, 476, 478, 501, 503, 518, 520, 535, 537, 552, 554, 569, 571, 586, 588, 603, 605, 632, 634, 651, 653, 673, 681, 683, 690, 698, 700, 752, 754, 769, 771, 786, 788, 803, 805, 812, 820, 822, 829, 831, 838, 840, 855, 857, 872, 874, 889, 891, 906, 908, 923, 925, 940, 942, 950, 955, 998, 1002, 1004, 1007, 1013, 1014, 1023, 1024, 1025, 1027, 1034, 1036, 1037, 1038, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1059, 1065, 1066, 1070, 1072, 1076, 1077, 1078, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1093, 1096, 1099], "context": [489, 491, 492, 1017, 1094, 1095], "contigu": [268, 727, 983], "contribut": 1034, "conv": 1099, "conv2d": 1099, "conveni": 1100, "convolut": [9, 10, 11, 12, 283, 300, 318, 335, 353, 370, 1011, 1012, 1099], "convolution1d": [9, 300], "convolution2d": [10, 335], "convtranspose1d": 11, "copi": [267, 269, 270, 271, 272, 273, 274, 275, 277, 279, 726, 728, 729, 730, 731, 732, 733, 734, 736, 738, 982, 984, 985, 986, 987, 988, 989, 990, 992, 994, 1002], "correl": [283, 318], "correspond": 953, "cosin": [90, 169, 1013, 1014], "count": 1034, "cp": 1099, "cpu": [42, 49, 56, 63, 70, 184, 185, 186, 201, 224, 241, 269, 293, 311, 328, 346, 363, 380, 404, 427, 444, 461, 478, 503, 520, 537, 554, 571, 588, 605, 634, 653, 683, 700, 728, 754, 771, 788, 805, 822, 840, 857, 874, 891, 908, 925, 942, 984, 1099], "creat": [954, 956, 959, 960, 1086, 1099], "cross": [8, 13, 208, 283, 318, 387], "cross_entropi": 1099, "crossentropyloss": [13, 1099], "cuda": 1099, "cupi": [963, 1086, 1099], "current": 3, "custom": 1099, "cy_n": 411, "d": 1033, "dakofl": 1099, "daniel": 1099, "data": [157, 184, 185, 186, 188, 248, 249, 276, 278, 489, 707, 708, 735, 737, 950, 954, 956, 959, 960, 963, 964, 991, 993, 1003, 1021, 1031, 1035, 1045, 1057, 1075, 1078, 1086, 1097, 1099], "dataload": [186, 1099], "datatyp": [258, 279, 717, 738, 950, 954, 956, 959, 960, 973, 994, 1003, 1021, 1031, 1035, 1045, 1057, 1097, 1099], "ddof": [281, 740, 996, 1096], "debug": 1073, "decai": [39, 46, 53, 67, 90, 106, 122, 138, 169, 172, 178, 181], "decay_step": [90, 91, 106, 107, 169, 170, 172, 173], "decim": 1070, "deconvolut": [11, 12, 353, 370], "deconvolution2d": 12, "decor": 186, "deep": 1099, "deeper": 1099, "def": 1099, "default": [5, 6, 7, 9, 10, 11, 12, 13, 17, 21, 22, 23, 24, 25, 26, 30, 31, 33, 36, 38, 39, 42, 46, 49, 53, 56, 60, 63, 67, 70, 74, 98, 106, 122, 130, 138, 154, 156, 157, 160, 162, 166, 172, 178, 181, 184, 186, 188, 191, 194, 196, 198, 201, 214, 217, 219, 221, 224, 231, 234, 236, 238, 241, 283, 286, 288, 290, 293, 300, 304, 306, 308, 311, 318, 321, 323, 325, 328, 335, 339, 341, 343, 346, 353, 356, 358, 360, 363, 370, 373, 375, 377, 380, 393, 397, 399, 401, 404, 417, 420, 422, 424, 427, 434, 437, 439, 441, 444, 451, 454, 456, 458, 461, 468, 471, 473, 475, 478, 493, 496, 498, 500, 503, 510, 513, 515, 517, 520, 527, 530, 532, 534, 537, 544, 547, 549, 551, 554, 561, 564, 566, 568, 571, 578, 581, 583, 585, 588, 595, 598, 600, 602, 605, 624, 627, 629, 631, 634, 643, 646, 648, 650, 653, 669, 673, 676, 678, 680, 683, 690, 693, 695, 697, 700, 742, 744, 747, 749, 751, 754, 761, 764, 766, 768, 771, 778, 781, 783, 785, 788, 795, 798, 800, 802, 805, 812, 815, 817, 819, 822, 829, 833, 835, 837, 840, 847, 850, 852, 854, 857, 864, 867, 869, 871, 874, 881, 884, 886, 888, 891, 898, 901, 903, 905, 908, 915, 918, 920, 922, 925, 932, 935, 937, 939, 942, 949, 950, 951, 952, 954, 955, 956, 957, 959, 960, 999, 1000, 1001, 1002, 1003, 1004, 1007, 1010, 1021, 1024, 1025, 1027, 1031, 1033, 1034, 1035, 1036, 1037, 1045, 1050, 1052, 1053, 1056, 1057, 1065, 1074, 1075, 1078, 1081, 1082, 1083, 1091, 1092, 1094, 1095, 1096, 1097], "defin": [156, 950, 1034, 1099], "degre": 1096, "delta": 1096, "dens": 393, "densiti": 1034, "descend": 672, "descent": [67, 73], "descirb": [353, 370], "describ": [39, 46, 53, 158, 159, 163, 164, 214, 231, 411, 417, 451, 493, 510, 544, 561, 744], "detail": [154, 300, 335, 393, 1073], "determin": [30, 742], "deviat": [160, 265, 724, 954, 980, 1082], "devic": [1, 3, 42, 49, 56, 63, 70, 184, 185, 186, 201, 204, 224, 227, 241, 244, 257, 271, 293, 296, 311, 314, 328, 331, 346, 349, 363, 366, 380, 383, 404, 407, 427, 430, 444, 447, 461, 464, 478, 481, 503, 506, 520, 523, 537, 540, 554, 557, 571, 574, 588, 591, 605, 608, 634, 637, 653, 656, 683, 686, 700, 703, 716, 730, 754, 757, 771, 774, 788, 791, 805, 808, 822, 825, 840, 843, 857, 860, 874, 877, 891, 894, 908, 911, 925, 928, 942, 945, 954, 955, 956, 959, 960, 963, 972, 986, 1003, 1015, 1016, 1021, 1022, 1031, 1032, 1035, 1045, 1057, 1058, 1074, 1086, 1094, 1097, 1098, 1099], "diag_index": [1091, 1092], "diagon": [1033, 1035, 1091, 1092], "dice": [14, 411], "diceloss": 14, "dict": [41, 42, 48, 49, 55, 56, 62, 63, 69, 70, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 199, 201, 222, 224, 239, 241, 291, 293, 309, 311, 326, 328, 344, 346, 361, 363, 378, 380, 402, 404, 425, 427, 442, 444, 459, 461, 476, 478, 501, 503, 518, 520, 535, 537, 552, 554, 569, 571, 586, 588, 603, 605, 632, 634, 651, 653, 681, 683, 698, 700, 752, 754, 769, 771, 786, 788, 803, 805, 820, 822, 838, 840, 855, 857, 872, 874, 889, 891, 906, 908, 923, 925, 940, 942], "dictionari": 114, "differ": [510, 544, 778], "dilat": [9, 10, 11, 12, 15, 16, 283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371], "dim": [36, 251, 252, 253, 259, 260, 261, 262, 265, 266, 281, 710, 711, 712, 718, 719, 720, 721, 724, 725, 740, 949, 950, 952, 966, 967, 968, 974, 975, 976, 977, 980, 981, 996, 999, 1001, 1002, 1004, 1010, 1018, 1024, 1025, 1027, 1036, 1037, 1039, 1050, 1052, 1053, 1056, 1060, 1062, 1063, 1065, 1078, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1096], "dim1": [280, 739, 995, 1090], "dim2": [280, 739, 995, 1090], "dimens": [5, 9, 10, 11, 12, 15, 16, 26, 28, 29, 36, 38, 188, 214, 231, 251, 252, 253, 259, 260, 261, 262, 264, 265, 266, 280, 281, 283, 300, 318, 335, 353, 370, 393, 434, 468, 510, 544, 561, 595, 690, 710, 711, 712, 718, 719, 720, 721, 723, 724, 725, 739, 740, 744, 778, 812, 932, 949, 950, 951, 952, 958, 966, 967, 968, 974, 975, 976, 977, 979, 980, 981, 995, 996, 999, 1001, 1002, 1004, 1010, 1011, 1012, 1024, 1025, 1027, 1036, 1037, 1039, 1050, 1052, 1053, 1055, 1056, 1060, 1062, 1064, 1065, 1067, 1068, 1078, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1096], "dimension": [264, 723, 979], "dimlik": [949, 952, 999, 1001, 1010, 1027, 1050, 1052, 1053, 1056, 1065, 1081, 1082, 1083, 1096], "directli": 1099, "directori": 146, "disabl": 1110, "discret": 960, "displai": 130, "distribut": [4, 6, 7, 22, 33, 160, 162, 953, 954, 959, 960], "divis": [184, 186], "divisor": 1096, "do": [38, 932], "doe": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 1099], "don": 1099, "doubl": [272, 731, 987], "down": [74, 166], "downsampl": [191, 624], "dozat": 53, "draw": 953, "drawn": [953, 954, 959, 960], "drop": [184, 186], "drop_remain": [184, 185, 186], "dtype": [188, 205, 228, 245, 258, 279, 297, 315, 332, 350, 367, 384, 408, 431, 448, 465, 482, 507, 524, 541, 558, 575, 592, 609, 638, 657, 687, 704, 717, 738, 758, 775, 792, 809, 826, 844, 861, 878, 895, 912, 929, 946, 950, 954, 956, 959, 960, 973, 994, 1003, 1005, 1008, 1009, 1021, 1022, 1028, 1029, 1030, 1031, 1032, 1035, 1040, 1041, 1042, 1043, 1045, 1057, 1058, 1075, 1086, 1095, 1097, 1098, 1099], "dtypelik": [950, 954, 956, 959, 960, 1003, 1021, 1031, 1035, 1045, 1057, 1097], "dure": [90, 169, 1099], "dy": [193, 216, 233, 285, 303, 320, 338, 355, 372, 396, 419, 436, 453, 470, 495, 512, 529, 546, 563, 580, 597, 626, 645, 675, 692, 746, 763, 780, 797, 814, 832, 849, 866, 883, 900, 917, 934, 1099], "e": [146, 208, 214, 231, 434, 561, 672, 847, 864, 898], "each": [76, 77, 80, 81, 84, 85, 88, 89, 92, 93, 96, 97, 100, 101, 104, 105, 106, 108, 109, 112, 113, 116, 117, 120, 121, 122, 124, 125, 128, 129, 130, 132, 133, 136, 137, 140, 141, 144, 145, 148, 149, 152, 153, 154, 172, 178, 184, 186, 283, 300, 318, 335, 353, 370, 510, 544, 672, 778, 1025, 1034, 1037, 1060], "earlystop": 1099, "easi": 1099, "edg": [1007, 1034], "einstein": 1020, "either": 8, "elaps": [122, 178], "element": [250, 251, 252, 256, 258, 259, 260, 261, 265, 266, 279, 281, 510, 544, 666, 672, 673, 709, 710, 711, 715, 717, 718, 719, 720, 724, 725, 738, 740, 778, 965, 966, 967, 971, 973, 974, 975, 976, 980, 981, 994, 996, 998, 999, 1000, 1001, 1013, 1014, 1023, 1027, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1065, 1067, 1068, 1070, 1072, 1076, 1077, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1096, 1099], "elman": [31, 778], "els": 67, "emb_tabl": 18, "embed_dim": [434, 435], "embed_t": 18, "empti": 669, "enabl": 1073, "encod": 950, "end": [28, 29, 39, 46, 53, 67, 76, 78, 84, 86, 92, 94, 100, 102, 108, 110, 116, 118, 124, 126, 132, 134, 140, 142, 148, 150, 510, 544, 662, 1060], "entir": 1099, "entropi": [8, 13, 208, 387], "ep": [6, 7, 22, 30, 33, 39, 40, 46, 47, 53, 54, 214, 215, 231, 232, 561, 562, 742, 743, 744, 745], "epoc": 98, "epoch": [76, 77, 84, 85, 92, 93, 100, 101, 108, 109, 116, 117, 124, 125, 130, 132, 133, 140, 141, 148, 149, 154, 157, 1099], "epsilon": [39, 46, 53, 214, 231, 561], "equal": [672, 1034, 1078], "equival": 208, "error": [19, 20, 27, 451, 493, 618], "estim": [39, 46, 53], "et": [39, 46, 158, 159, 163, 164, 214, 231, 353, 370, 411, 417, 451, 493, 510, 544, 561, 744], "eta": [13, 39, 46, 53, 67, 390], "evalu": [154, 156, 1020], "evenli": [1003, 1045], "everi": [157, 1099], "exclud": 188, "execut": 154, "exist": 1100, "expand": 1018, "expect": 188, "explicit": 1020, "exponenti": [39, 46, 53, 106, 172, 1023], "extend": 1099, "extract": [283, 318, 1033], "f": [9, 10, 11, 12, 812, 1099], "f_1": [690, 829], "f_2": [690, 829], "f_i": 673, "f_n": [690, 829], "f_t": 544, "facilit": 1099, "factor": [9, 10, 11, 12, 15, 16, 38, 39, 46, 53, 67, 74, 106, 122, 138, 166, 172, 178, 181, 283, 318, 353, 370, 932], "fals": [6, 7, 17, 67, 68, 184, 185, 186, 194, 217, 234, 251, 252, 253, 259, 260, 261, 265, 266, 281, 286, 300, 301, 304, 321, 335, 336, 339, 356, 373, 397, 420, 437, 454, 471, 496, 513, 530, 547, 564, 581, 598, 627, 646, 672, 673, 676, 693, 710, 711, 712, 718, 719, 720, 724, 725, 740, 747, 764, 781, 798, 815, 833, 850, 867, 884, 901, 918, 935, 966, 967, 968, 974, 975, 976, 980, 981, 996, 999, 1001, 1004, 1034, 1050, 1052, 1053, 1056, 1065, 1082, 1083, 1096, 1099], "far": 1099, "fast": [1024, 1025, 1036, 1037], "fastgelu": 19, "featur": [283, 318, 335, 370, 393, 561, 744, 949, 1099], "fft": [1011, 1012, 1024, 1025, 1036, 1037], "file": [1046, 1071], "filename_suffix": 1110, "filepath": [1046, 1071], "fill": [38, 932, 1031, 1032, 1057, 1058, 1097, 1098], "filter": [9, 10, 11, 12, 283, 300, 318, 335, 353, 370], "final": 1061, "find": 1099, "first": [39, 46, 53, 489, 667, 670, 958, 1051, 1054, 1087, 1088], "flag": 672, "flatt": 468, "flatten": [949, 952, 999, 1001, 1004, 1050, 1052, 1053, 1056, 1065, 1082, 1083, 1096], "float": [6, 7, 13, 17, 22, 23, 30, 33, 39, 46, 53, 60, 67, 74, 90, 106, 122, 138, 156, 160, 162, 166, 169, 172, 178, 181, 187, 214, 231, 300, 335, 417, 561, 578, 707, 742, 949, 951, 954, 959, 1000, 1003, 1007, 1008, 1009, 1028, 1029, 1030, 1034, 1036, 1037, 1045], "float16": [274, 733, 989], "float32": [188, 273, 732, 988, 1099], "float64": [272, 731, 987], "flow": 1099, "flush_sec": 1110, "focus": 1099, "follow": [39, 46, 53, 160, 162, 300, 335, 510, 544, 778, 1099], "forc": [194, 217, 234, 286, 304, 321, 339, 356, 373, 397, 420, 437, 454, 471, 496, 513, 530, 547, 564, 581, 598, 627, 646, 676, 693, 747, 764, 781, 798, 815, 833, 850, 867, 884, 901, 918, 935], "forev": 1099, "form": 1020, "formul": 208, "forward": [203, 213, 226, 243, 295, 313, 330, 348, 365, 382, 392, 406, 416, 429, 446, 463, 480, 505, 522, 527, 539, 556, 573, 590, 607, 617, 623, 636, 655, 685, 702, 756, 773, 790, 807, 824, 842, 859, 876, 893, 910, 927, 944, 1099], "found": 98, "fourier": [1024, 1025, 1036, 1037], "frac": [39, 46, 53, 208, 214, 231, 283, 318, 353, 370, 387, 411, 493, 510, 544, 561, 595, 618, 744, 778, 847, 864, 898], "free": 0, "freedom": 1096, "frist": 951, "from": [0, 8, 11, 12, 13, 14, 42, 49, 56, 63, 70, 90, 169, 201, 208, 224, 241, 283, 293, 311, 318, 328, 346, 353, 363, 370, 380, 387, 404, 411, 427, 434, 444, 461, 478, 492, 503, 510, 520, 537, 544, 554, 571, 588, 595, 605, 634, 653, 663, 666, 683, 700, 754, 771, 778, 788, 805, 822, 840, 857, 874, 891, 908, 925, 942, 953, 954, 959, 960, 1046, 1086, 1099], "from_dim": 1055, "full": 1099, "func": 186, "function": [154, 158, 159, 163, 164, 212, 213, 300, 335, 391, 392, 393, 415, 416, 451, 491, 492, 493, 510, 544, 578, 616, 617, 622, 623, 672, 761, 778, 847, 864, 898, 915, 963, 1099, 1113], "fwd_fn": [203, 213, 226, 243, 295, 313, 330, 348, 365, 382, 392, 406, 416, 429, 446, 463, 480, 505, 522, 539, 556, 573, 590, 607, 617, 623, 636, 655, 685, 702, 756, 773, 790, 807, 824, 842, 859, 876, 893, 910, 927, 944], "g": [39, 46, 53, 67, 146], "g_t": [39, 46, 53, 67, 544], "gain": [158, 159, 163, 164, 1099], "gate": 510, "gaussian": [19, 20, 451, 493], "gener": [188, 957, 1099], "get_paramet": 1099, "get_state_dict": 1099, "git": 1099, "github": 1099, "given": [4, 211, 251, 252, 253, 258, 259, 260, 261, 265, 266, 279, 281, 282, 390, 414, 615, 621, 672, 710, 711, 712, 717, 718, 719, 720, 724, 725, 738, 740, 741, 951, 953, 966, 967, 968, 973, 974, 975, 976, 980, 981, 994, 996, 997, 999, 1000, 1001, 1003, 1004, 1010, 1022, 1024, 1025, 1027, 1031, 1032, 1036, 1037, 1045, 1050, 1052, 1053, 1056, 1057, 1058, 1065, 1069, 1078, 1081, 1082, 1083, 1096, 1097, 1098], "glorot": [163, 164], "gpu": [0, 2, 270, 729, 985, 1016, 1099], "grad": [207, 230, 247, 299, 317, 334, 352, 369, 386, 410, 433, 450, 467, 484, 509, 526, 543, 560, 577, 594, 611, 640, 659, 689, 706, 760, 777, 794, 811, 828, 846, 863, 880, 897, 914, 931, 948], "gradient": [39, 43, 45, 46, 50, 52, 53, 57, 59, 64, 66, 67, 71, 73, 187, 193, 194, 207, 210, 216, 217, 230, 233, 234, 247, 285, 286, 299, 303, 304, 317, 320, 321, 334, 338, 339, 352, 355, 356, 369, 372, 373, 386, 389, 396, 397, 410, 413, 419, 420, 433, 436, 437, 450, 453, 454, 467, 470, 471, 484, 489, 495, 496, 509, 512, 513, 526, 527, 529, 530, 543, 546, 547, 560, 563, 564, 577, 580, 581, 594, 597, 598, 611, 614, 620, 626, 627, 640, 645, 646, 659, 675, 676, 689, 692, 693, 706, 746, 747, 760, 763, 764, 777, 780, 781, 794, 797, 798, 811, 814, 815, 828, 832, 833, 846, 849, 850, 863, 866, 867, 880, 883, 884, 897, 900, 901, 914, 917, 918, 931, 934, 935, 948, 1099], "ground": [208, 387, 411, 618], "guid": 1099, "h": [510, 544, 778], "h_": [510, 544, 778], "h_channel": [510, 511, 544, 545, 778, 779], "h_t": [510, 544, 778], "hadamard": [510, 544], "half": [274, 733, 956, 989], "hat": [39, 46, 53, 208, 387, 411, 618], "have": [122, 178, 1099], "he": [158, 159], "height": [231, 318, 335, 370], "hendryck": [451, 493], "here": 1099, "hesit": 1099, "hf": 544, "hg": 544, "hh": 778, "hi": 544, "hidden": [21, 25, 31, 510, 544, 778], "high": [162, 949, 959, 960], "histori": 1099, "hn": 510, "ho": 544, "hochreit": 544, "hood": 1099, "hot": 950, "how": [90, 106, 169, 172, 1099], "howev": 1099, "hr": 510, "hspace": [39, 53, 67], "http": 1099, "hyperbol": [37, 1014, 1077, 1085], "hz": 510, "i": [2, 9, 10, 11, 12, 24, 53, 74, 90, 98, 106, 122, 130, 138, 166, 169, 172, 178, 181, 184, 186, 191, 208, 214, 231, 252, 283, 300, 318, 335, 353, 370, 387, 393, 417, 434, 451, 468, 493, 510, 527, 544, 561, 578, 595, 618, 624, 643, 667, 669, 670, 672, 673, 690, 707, 711, 744, 761, 778, 795, 812, 829, 847, 864, 881, 898, 915, 949, 950, 952, 954, 955, 956, 957, 959, 960, 967, 999, 1001, 1003, 1004, 1007, 1020, 1021, 1031, 1035, 1044, 1045, 1050, 1052, 1053, 1056, 1057, 1065, 1078, 1082, 1083, 1086, 1096, 1097, 1099], "i_t": 544, "ig": 544, "ignor": [194, 217, 234, 286, 304, 321, 339, 356, 373, 397, 420, 437, 454, 471, 496, 513, 530, 547, 564, 581, 598, 627, 646, 676, 693, 747, 764, 781, 798, 815, 833, 850, 867, 884, 901, 918, 935], "ih": 778, "ii": 544, "imaginari": [255, 714, 970], "implement": [214, 231, 510, 544, 561, 744, 778, 812, 1099], "implicit": 1020, "import": 1099, "improv": [74, 98, 166], "in_channel": [283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 393, 394, 510, 511, 544, 545, 595, 596, 778, 779, 1099], "includ": [196, 198, 219, 221, 236, 238, 288, 290, 306, 308, 323, 325, 341, 343, 358, 360, 375, 377, 399, 401, 422, 424, 439, 441, 456, 458, 468, 473, 475, 498, 500, 515, 517, 532, 534, 549, 551, 566, 568, 583, 585, 600, 602, 629, 631, 648, 650, 678, 680, 695, 697, 749, 751, 766, 768, 783, 785, 800, 802, 817, 819, 835, 837, 852, 854, 869, 871, 886, 888, 903, 905, 920, 922, 937, 939, 1003, 1020, 1034, 1099], "increas": [90, 169], "index": [668, 669, 961, 962, 1033, 1091, 1092, 1100], "indexerror": 669, "indic": [18, 253, 712, 958, 968, 1004, 1020, 1078], "infer": [158, 159, 163, 164, 184, 186, 963, 1086, 1099], "inform": 188, "inherit": 1099, "initi": [39, 46, 53, 67, 90, 169, 214, 231, 248, 283, 300, 318, 335, 353, 370, 393, 434, 510, 544, 561, 595, 707, 744, 778, 963, 1086, 1099, 1113], "initializerlik": [300, 335, 393], "inner": 1099, "inplac": [257, 258, 716, 717, 972, 973], "input": [5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 156, 157, 188, 193, 195, 214, 216, 218, 231, 233, 235, 283, 285, 287, 300, 303, 305, 318, 320, 322, 335, 338, 340, 353, 355, 357, 370, 372, 374, 393, 396, 398, 419, 421, 434, 436, 438, 453, 455, 470, 472, 495, 497, 510, 512, 514, 527, 529, 531, 544, 546, 548, 561, 563, 565, 580, 582, 595, 597, 599, 626, 628, 645, 647, 675, 677, 692, 694, 744, 746, 748, 761, 763, 765, 778, 780, 782, 797, 799, 814, 816, 832, 834, 849, 851, 866, 868, 883, 885, 900, 902, 917, 919, 934, 936, 949, 951, 998, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1011, 1012, 1013, 1014, 1018, 1019, 1023, 1024, 1025, 1026, 1027, 1033, 1034, 1036, 1037, 1039, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1096], "input_dtyp": 188, "input_shap": 188, "insert": 1039, "instabl": 208, "instead": [812, 1034, 1099], "int": [4, 5, 9, 10, 11, 12, 13, 15, 16, 26, 28, 29, 36, 38, 74, 90, 98, 106, 122, 138, 156, 157, 166, 169, 172, 178, 181, 184, 186, 191, 214, 231, 283, 300, 318, 335, 353, 370, 393, 434, 510, 544, 595, 624, 690, 778, 932, 950, 953, 955, 957, 960, 1002, 1003, 1004, 1024, 1025, 1027, 1033, 1034, 1035, 1036, 1037, 1039, 1045, 1055, 1060, 1062, 1063, 1064, 1067, 1068, 1070, 1078, 1089, 1090, 1091, 1092, 1096], "int32": [275, 734, 990, 1099], "int64": [277, 736, 950, 960, 992], "integ": [18, 275, 277, 734, 736, 960, 990, 992, 1040, 1041, 1042, 1043], "interv": [122, 178, 956, 1003, 1045], "invalid": 707, "invers": [1036, 1037], "io": 544, "ioff": [214, 231], "ir": 510, "issu": 1099, "item": [489, 491, 492, 663, 669, 672, 1099], "iter": [39, 44, 46, 51, 53, 58, 60, 65, 67, 72, 157, 187, 196, 197, 198, 219, 220, 221, 236, 237, 238, 288, 289, 290, 306, 307, 308, 323, 324, 325, 341, 342, 343, 358, 359, 360, 375, 376, 377, 399, 400, 401, 422, 423, 424, 439, 440, 441, 456, 457, 458, 473, 474, 475, 498, 499, 500, 515, 516, 517, 532, 533, 534, 549, 550, 551, 566, 567, 568, 583, 584, 585, 600, 601, 602, 629, 630, 631, 648, 649, 650, 660, 666, 678, 679, 680, 695, 696, 697, 749, 750, 751, 766, 767, 768, 783, 784, 785, 800, 801, 802, 817, 818, 819, 835, 836, 837, 852, 853, 854, 869, 870, 871, 886, 887, 888, 903, 904, 905, 920, 921, 922, 937, 938, 939, 1087, 1088], "its": [15, 16, 28, 29, 188, 280, 673, 739, 995, 1034, 1099], "itself": 672, "iz": 510, "join": 1010, "just": 527, "k": [283, 318, 353, 370, 510, 544, 595, 778], "keep": [999, 1001, 1004, 1050, 1052, 1053, 1056, 1065, 1082, 1083, 1096, 1099], "keepdim": [251, 252, 253, 259, 260, 261, 265, 266, 281, 710, 711, 712, 718, 719, 720, 724, 725, 740, 966, 967, 968, 974, 975, 976, 980, 981, 996, 999, 1001, 1004, 1050, 1052, 1053, 1056, 1065, 1082, 1083, 1096], "kei": 672, "kernel": [283, 300, 318, 335, 353, 370], "kernel_s": [5, 26, 191, 192, 283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 624, 625, 1099], "kingma": 39, "known": 1099, "kwarg": [168, 171, 174, 177, 180, 183, 487, 488, 1110], "l": [208, 387, 411, 618], "label": [8, 13, 14, 191, 192, 214, 215, 231, 232, 283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 393, 394, 417, 418, 434, 435, 451, 452, 468, 469, 493, 494, 510, 511, 527, 528, 544, 545, 561, 562, 578, 579, 595, 596, 624, 625, 643, 644, 673, 674, 690, 691, 744, 745, 761, 762, 778, 779, 795, 796, 812, 813, 829, 830, 847, 848, 864, 865, 881, 882, 898, 899, 915, 916, 932, 933, 1020], "lambda": [39, 46, 53, 67], "last": [5, 9, 10, 11, 12, 15, 16, 26, 28, 29, 36, 38, 489, 669, 932, 1011, 1012, 1018, 1063, 1064, 1067, 1068, 1091, 1092], "later": 1099, "layer": [22, 191, 300, 335, 393, 417, 434, 561, 624, 744, 932, 1099], "leaki": [23, 578], "leakyrelu": 23, "learn": [39, 46, 53, 60, 67, 74, 90, 106, 122, 138, 166, 168, 169, 171, 172, 174, 175, 177, 178, 180, 181, 183, 1099], "least": [252, 711, 967, 1001], "left": 493, "leftarrow": [39, 46, 53, 67], "len": 1099, "length": [955, 1024, 1025, 1036, 1037], "librari": 1099, "like": [194, 217, 234, 286, 304, 321, 339, 356, 373, 397, 420, 437, 454, 471, 496, 513, 530, 547, 564, 581, 598, 627, 646, 676, 693, 747, 764, 781, 798, 815, 833, 850, 867, 884, 901, 918, 935], "lin1": 1099, "lin2": 1099, "linear": [19, 20, 32, 35, 393, 451, 493, 761, 847, 1099], "linearli": [90, 169], "link": 1099, "list": [154, 197, 220, 237, 276, 289, 307, 324, 342, 359, 376, 400, 423, 440, 457, 474, 499, 516, 533, 550, 567, 584, 601, 630, 649, 660, 662, 663, 664, 666, 669, 672, 679, 696, 735, 750, 767, 784, 801, 818, 836, 853, 870, 887, 904, 921, 938, 991, 1020, 1078, 1086, 1099], "liter": [21, 25, 31, 130, 510, 544, 778], "ll": [510, 544], "load": [42, 49, 56, 63, 70, 184, 186, 201, 224, 241, 293, 311, 328, 346, 363, 380, 404, 427, 444, 461, 478, 503, 520, 537, 554, 571, 588, 605, 634, 653, 683, 700, 754, 771, 788, 805, 822, 840, 857, 874, 891, 908, 925, 942, 1099], "load_state_dict": 1099, "loaded_st": 1099, "log": [146, 208, 387, 1048, 1049], "log_dir": 1110, "logdir": [146, 147, 1110], "logit": [8, 13, 14, 27, 208, 211, 387, 390, 411, 414, 615, 618, 621], "long": [277, 353, 370, 544, 736, 992], "lookup": [18, 434], "loop": 1099, "loshchilov": 46, "loss": [8, 13, 14, 27, 74, 98, 99, 154, 155, 156, 166, 208, 210, 211, 212, 213, 387, 389, 390, 391, 392, 411, 413, 414, 415, 416, 618, 620, 621, 622, 623, 1099], "loss_fn": 1099, "loss_funct": 1099, "losslik": 154, "low": [162, 949, 959, 960], "lower": [162, 949, 959, 960, 1007, 1091], "lr": [39, 40, 46, 47, 53, 54, 60, 61, 67, 68], "lr_decai": [106, 107, 122, 123, 138, 139, 172, 173, 178, 179, 181, 182], "lr_downscale_factor": [74, 75, 166, 167], "lr_schedul": [74, 90, 106, 122, 138, 1113], "lr_upscale_factor": [74, 75, 166, 167], "m": [6, 7, 39, 46, 53, 214, 215, 231, 232], "m_": [39, 46, 53], "m_0": [39, 46, 53], "m_t": [39, 46, 53], "machin": 1099, "main": [1033, 1091, 1092], "maintain": 672, "make": 1099, "manag": [1017, 1094, 1095], "mani": [90, 106, 169, 172], "map": [318, 335, 370], "match": [38, 812, 932, 1061], "math": 1003, "mathcal": [283, 318, 353, 370, 434, 510, 544, 595, 778], "matrix": 1018, "max": [26, 187, 208, 578, 761, 949], "max_norm": 187, "max_queu": 1110, "max_val": 1007, "max_valu": 1007, "maximum": [253, 259, 624, 712, 718, 968, 974, 1004, 1050], "me": 1099, "mean": [6, 7, 27, 160, 214, 231, 618, 744, 952, 954, 1099], "memori": [0, 544], "method": [39, 42, 46, 49, 53, 56, 60, 63, 67, 70, 74, 82, 90, 98, 106, 114, 122, 130, 138, 146, 154, 166, 169, 172, 175, 178, 181, 184, 189, 191, 202, 203, 208, 212, 213, 214, 225, 226, 231, 242, 243, 248, 283, 294, 295, 300, 312, 313, 318, 329, 330, 335, 347, 348, 353, 364, 365, 370, 381, 382, 387, 391, 392, 393, 405, 406, 411, 415, 416, 417, 428, 429, 434, 445, 446, 451, 462, 463, 468, 479, 480, 485, 489, 493, 504, 505, 510, 521, 522, 527, 538, 539, 544, 555, 556, 561, 572, 573, 578, 589, 590, 595, 606, 607, 612, 616, 617, 618, 622, 623, 624, 635, 636, 641, 643, 654, 655, 660, 673, 684, 685, 690, 701, 702, 707, 742, 744, 755, 756, 761, 772, 773, 778, 789, 790, 795, 806, 807, 812, 823, 824, 829, 841, 842, 847, 858, 859, 864, 875, 876, 881, 892, 893, 898, 909, 910, 915, 926, 927, 932, 943, 944, 961, 963, 1099], "metric": [74, 98, 154, 155, 156, 166], "metric_funct": 1099, "metriclik": 154, "milletari": 411, "min": 949, "min_val": 1007, "min_valu": 1007, "minimum": [261, 720, 976, 1053], "mode": [6, 7, 17, 130, 131, 200, 206, 223, 229, 240, 246, 292, 298, 310, 316, 327, 333, 345, 351, 362, 368, 379, 385, 403, 409, 426, 432, 443, 449, 460, 466, 477, 483, 502, 508, 519, 525, 536, 542, 553, 559, 570, 576, 587, 593, 604, 610, 633, 639, 652, 658, 673, 682, 688, 699, 705, 753, 759, 770, 776, 787, 793, 804, 810, 821, 827, 839, 845, 856, 862, 873, 879, 890, 896, 907, 913, 924, 930, 941, 947, 1017, 1073], "model": [4, 8, 13, 14, 27, 30, 98, 99, 154, 155, 156, 157, 208, 210, 211, 387, 389, 390, 411, 413, 414, 614, 615, 618, 620, 621], "modifi": 672, "modul": [98, 154, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 660, 661, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 744, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 1073, 1099], "moment": [39, 46, 53], "momentum": [6, 7, 39, 46, 53, 67, 68, 214, 231, 300, 335], "momentum_decai": [53, 54], "more": [154, 300, 335, 393, 1038, 1059, 1073, 1087, 1088, 1099, 1100], "most": 1099, "move": [39, 42, 46, 49, 53, 56, 63, 70, 201, 204, 224, 227, 241, 244, 257, 271, 293, 296, 311, 314, 328, 331, 346, 349, 363, 366, 380, 383, 404, 407, 427, 430, 444, 447, 461, 464, 478, 481, 503, 506, 520, 523, 537, 540, 554, 557, 571, 574, 588, 591, 605, 608, 634, 637, 653, 656, 683, 686, 700, 703, 716, 730, 754, 757, 771, 774, 788, 791, 805, 808, 822, 825, 840, 843, 857, 860, 874, 877, 891, 894, 908, 911, 925, 928, 942, 945, 972, 986, 1055, 1099], "mseloss": 27, "mu": [53, 67], "mu_": 53, "mu_i": 53, "mu_t": 53, "multidimension": 963, "multipli": [106, 172, 1087], "must": [4, 8, 13, 18, 42, 49, 56, 63, 70, 707, 963], "my_model": 1099, "my_run": 146, "myconvblock": 1099, "mymodel": 1099, "n": [208, 387, 411, 434, 618, 673, 744, 898, 955, 1024, 1025, 1035, 1036, 1037, 1045, 1067, 1068, 1078, 1096], "n_emb": [434, 435], "n_repeat": 1089, "n_t": 510, "name": [214, 231, 283, 300, 318, 335, 353, 370, 393, 417, 434, 451, 468, 493, 510, 527, 544, 561, 578, 595, 643, 673, 690, 744, 761, 778, 795, 812, 829, 847, 864, 881, 898, 915], "natur": 1047, "ndarrai": [278, 737, 993, 1086], "need": 489, "neg": [23, 578], "nest": 1099, "nesterov": [67, 68], "neterov": 67, "network": [154, 248, 393, 485, 643, 707, 1099], "neural": [154, 248, 393, 485, 643, 707, 1099], "neuron": [393, 595], "new": [6, 7, 130, 953, 954, 956, 959, 960, 1006, 1010, 1021, 1031, 1035, 1039, 1055, 1057, 1069, 1074, 1075, 1078, 1081, 1094, 1095, 1097, 1099, 1100], "newaxi": 1100, "nn": [1099, 1113], "none": [9, 10, 11, 12, 24, 38, 39, 40, 43, 46, 47, 50, 53, 54, 57, 60, 61, 64, 67, 68, 71, 154, 155, 157, 158, 159, 163, 164, 191, 192, 214, 215, 231, 232, 251, 252, 253, 259, 260, 261, 265, 266, 281, 283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 393, 394, 417, 418, 434, 435, 451, 452, 468, 469, 493, 494, 510, 511, 527, 528, 544, 545, 561, 562, 578, 579, 595, 596, 624, 625, 643, 644, 672, 673, 674, 690, 691, 710, 711, 712, 718, 719, 720, 724, 725, 740, 744, 745, 761, 762, 778, 779, 795, 796, 812, 813, 829, 830, 847, 848, 864, 865, 881, 882, 898, 899, 915, 916, 932, 933, 949, 950, 952, 954, 955, 956, 957, 959, 960, 966, 967, 968, 974, 975, 976, 980, 981, 996, 999, 1001, 1003, 1004, 1007, 1021, 1024, 1025, 1027, 1031, 1034, 1035, 1036, 1037, 1045, 1050, 1052, 1053, 1056, 1057, 1065, 1074, 1075, 1082, 1083, 1086, 1096, 1097, 1100, 1110], "norm": 187, "normal": [6, 7, 22, 33, 158, 160, 163, 214, 231, 300, 335, 561, 744, 1099], "normalized_shap": [561, 562, 744, 745], "notebook": 1099, "nubmer": 434, "num": 1045, "num_class": 950, "number": [1, 11, 12, 74, 90, 98, 122, 156, 157, 166, 169, 178, 184, 186, 214, 231, 283, 300, 318, 335, 353, 370, 393, 411, 434, 510, 544, 595, 665, 778, 950, 957, 1034, 1044, 1045, 1067, 1068, 1087, 1088, 1089, 1096], "numer": [6, 7, 13, 22, 30, 33, 39, 46, 53, 208, 214, 231, 300, 335, 561, 742], "numpi": [278, 737, 963, 993, 1086, 1099], "o_t": 544, "obj": 1071, "object": [662, 668, 963, 1046, 1071, 1086, 1099], "occurr": [665, 670], "odot": [510, 544], "offer": 1099, "onc": 672, "one": [130, 252, 510, 544, 711, 778, 967, 1001, 1099, 1100], "ones": [161, 214, 231, 561, 744, 1058, 1099], "onli": [42, 49, 56, 63, 70, 963, 1099], "open": 956, "oper": [9, 10, 11, 12, 191, 257, 258, 283, 300, 318, 335, 353, 370, 624, 716, 717, 949, 952, 972, 973, 999, 1001, 1004, 1024, 1025, 1036, 1037, 1050, 1052, 1053, 1056, 1063, 1064, 1065, 1082, 1083, 1096, 1099], "optim": [74, 75, 90, 91, 106, 107, 122, 123, 138, 139, 154, 155, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1099, 1113], "optimizerlik": 154, "option": [5, 6, 7, 9, 10, 11, 12, 13, 17, 21, 22, 23, 24, 25, 26, 30, 31, 33, 36, 38, 39, 42, 46, 49, 53, 56, 60, 63, 67, 70, 74, 98, 106, 122, 130, 138, 154, 156, 157, 160, 162, 166, 172, 178, 181, 184, 186, 188, 191, 194, 196, 198, 201, 214, 217, 219, 221, 224, 231, 234, 236, 238, 241, 283, 286, 288, 290, 293, 300, 304, 306, 308, 311, 318, 321, 323, 325, 328, 335, 339, 341, 343, 346, 353, 356, 358, 360, 363, 370, 373, 375, 377, 380, 393, 397, 399, 401, 404, 417, 420, 422, 424, 427, 434, 437, 439, 441, 444, 451, 454, 456, 458, 461, 468, 471, 473, 475, 478, 493, 496, 498, 500, 503, 510, 513, 515, 517, 520, 527, 530, 532, 534, 537, 544, 547, 549, 551, 554, 561, 564, 566, 568, 571, 578, 581, 583, 585, 588, 595, 598, 600, 602, 605, 624, 627, 629, 631, 634, 643, 646, 648, 650, 653, 673, 676, 678, 680, 683, 690, 693, 695, 697, 700, 742, 744, 747, 749, 751, 754, 761, 764, 766, 768, 771, 778, 781, 783, 785, 788, 795, 798, 800, 802, 805, 812, 815, 817, 819, 822, 829, 833, 835, 837, 840, 847, 850, 852, 854, 857, 864, 867, 869, 871, 874, 881, 884, 886, 888, 891, 898, 901, 903, 905, 908, 915, 918, 920, 922, 925, 932, 935, 937, 939, 942, 949, 950, 951, 952, 954, 955, 956, 957, 959, 960, 999, 1000, 1001, 1002, 1003, 1004, 1007, 1010, 1021, 1024, 1025, 1027, 1031, 1033, 1034, 1035, 1036, 1037, 1045, 1050, 1052, 1053, 1056, 1057, 1065, 1074, 1075, 1078, 1081, 1082, 1083, 1086, 1091, 1092, 1096, 1097], "order": [672, 1055, 1093], "ordereddict": [199, 201, 222, 224, 239, 241, 291, 293, 309, 311, 326, 328, 344, 346, 361, 363, 378, 380, 402, 404, 425, 427, 442, 444, 459, 461, 476, 478, 501, 503, 518, 520, 535, 537, 552, 554, 569, 571, 586, 588, 603, 605, 632, 634, 651, 653, 681, 683, 698, 700, 752, 754, 769, 771, 786, 788, 803, 805, 820, 822, 838, 840, 855, 857, 872, 874, 889, 891, 906, 908, 923, 925, 940, 942], "origin": [510, 544, 778, 1055], "other": [963, 1022, 1055, 1058, 1086, 1098], "out": [283, 300, 318, 335, 353, 370, 393, 489, 595, 669], "out_channel": [283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 393, 394, 595, 596, 1099], "outer": 1099, "output": [5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 193, 194, 195, 214, 216, 217, 218, 231, 233, 234, 235, 283, 285, 286, 287, 300, 303, 304, 305, 318, 320, 321, 322, 335, 338, 339, 340, 353, 355, 356, 357, 370, 372, 373, 374, 393, 396, 397, 398, 419, 420, 421, 434, 436, 437, 438, 453, 454, 455, 470, 471, 472, 495, 496, 497, 510, 512, 513, 514, 529, 530, 531, 544, 546, 547, 548, 561, 563, 564, 565, 578, 580, 581, 582, 595, 597, 598, 599, 626, 627, 628, 645, 646, 647, 673, 675, 676, 677, 690, 692, 693, 694, 744, 746, 747, 748, 763, 764, 765, 778, 780, 781, 782, 795, 797, 798, 799, 814, 815, 816, 832, 833, 834, 849, 850, 851, 866, 867, 868, 881, 883, 884, 885, 900, 901, 902, 917, 918, 919, 934, 935, 936, 949, 950, 1020, 1024, 1025, 1036, 1037], "over": [5, 9, 10, 11, 12, 26, 38, 214, 231, 251, 252, 259, 260, 261, 265, 266, 281, 561, 710, 711, 718, 719, 720, 724, 725, 740, 744, 932, 966, 967, 974, 975, 976, 980, 981, 996, 999, 1001, 1011, 1012, 1024, 1025, 1036, 1037, 1050, 1052, 1053, 1056, 1065, 1082, 1083, 1087, 1088, 1096], "own": 1099, "p": [17, 39, 46, 53, 67, 417, 418, 953], "p_": [39, 46, 53, 67], "p_t": [39, 46, 53, 67], "packag": 1099, "pad": [9, 10, 11, 12, 28, 29, 283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 1061], "pad_width": 1060, "paddinglik": [283, 300, 318, 335, 353, 370], "paper": [510, 544, 778], "parallel": [156, 157, 673, 690], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 169, 172, 175, 178, 181, 184, 186, 187, 188, 191, 193, 194, 195, 196, 198, 199, 201, 204, 205, 207, 211, 214, 216, 217, 218, 219, 221, 222, 224, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 241, 244, 245, 247, 248, 257, 258, 271, 279, 282, 283, 285, 286, 287, 288, 290, 291, 293, 296, 297, 299, 300, 302, 303, 304, 305, 306, 308, 309, 311, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 328, 331, 332, 334, 335, 337, 338, 339, 340, 341, 343, 344, 346, 349, 350, 352, 353, 355, 356, 357, 358, 360, 361, 363, 366, 367, 369, 370, 372, 373, 374, 375, 377, 378, 380, 383, 384, 386, 390, 393, 395, 396, 397, 398, 399, 401, 402, 404, 407, 408, 410, 414, 417, 419, 420, 421, 422, 424, 425, 427, 430, 431, 433, 434, 436, 437, 438, 439, 441, 442, 444, 447, 448, 450, 451, 453, 454, 455, 456, 458, 459, 461, 464, 465, 467, 468, 470, 471, 472, 473, 475, 476, 478, 481, 482, 484, 493, 495, 496, 497, 498, 500, 501, 503, 506, 507, 509, 510, 512, 513, 514, 515, 517, 518, 520, 523, 524, 526, 527, 529, 530, 531, 532, 534, 535, 537, 540, 541, 543, 544, 546, 547, 548, 549, 551, 552, 554, 557, 558, 560, 561, 563, 564, 565, 566, 568, 569, 571, 574, 575, 577, 578, 580, 581, 582, 583, 585, 586, 588, 591, 592, 594, 595, 597, 598, 599, 600, 602, 603, 605, 608, 609, 611, 615, 621, 624, 626, 627, 628, 629, 631, 632, 634, 637, 638, 640, 643, 645, 646, 647, 648, 650, 651, 653, 656, 657, 659, 660, 673, 675, 676, 677, 678, 680, 681, 683, 686, 687, 689, 690, 692, 693, 694, 695, 697, 698, 700, 703, 704, 706, 742, 744, 746, 747, 748, 749, 751, 752, 754, 757, 758, 760, 761, 763, 764, 765, 766, 768, 769, 771, 774, 775, 777, 778, 780, 781, 782, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 799, 800, 802, 803, 805, 808, 809, 811, 812, 814, 815, 816, 817, 819, 820, 822, 825, 826, 828, 829, 831, 832, 833, 834, 835, 837, 838, 840, 843, 844, 846, 847, 849, 850, 851, 852, 854, 855, 857, 860, 861, 863, 864, 866, 867, 868, 869, 871, 872, 874, 877, 878, 880, 881, 883, 884, 885, 886, 888, 889, 891, 894, 895, 897, 898, 900, 901, 902, 903, 905, 906, 908, 911, 912, 914, 915, 917, 918, 919, 920, 922, 923, 925, 928, 929, 931, 932, 934, 935, 936, 937, 939, 940, 942, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 963, 972, 973, 986, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099], "paramt": [39, 44, 46, 51, 53, 58, 60, 65, 67, 72], "part": [255, 263, 714, 722, 812, 970, 978, 1066], "pass": [193, 195, 216, 218, 233, 235, 285, 287, 303, 305, 320, 322, 338, 340, 355, 357, 372, 374, 396, 398, 419, 421, 436, 438, 453, 455, 470, 472, 487, 488, 495, 497, 512, 514, 529, 531, 546, 548, 563, 565, 580, 582, 597, 599, 626, 628, 645, 647, 675, 677, 692, 694, 746, 748, 763, 765, 780, 782, 797, 799, 814, 816, 832, 834, 849, 851, 866, 868, 883, 885, 900, 902, 917, 919, 934, 936, 1099], "past": [74, 166], "path": 1046, "pathwai": 812, "patienc": [74, 75, 98, 99, 166, 167], "per": 130, "perfect": 1099, "perform": [5, 6, 7, 17, 18, 22, 26, 33, 154, 186, 949, 952, 999, 1001, 1004, 1007, 1020, 1024, 1025, 1036, 1037, 1050, 1052, 1053, 1056, 1065, 1082, 1083, 1096], "pi": 493, "pip": 1099, "place": [671, 672, 1070], "plan": 1099, "pleas": 1099, "point": [1008, 1009, 1028, 1029, 1030], "pool": [5, 26, 191, 624, 1063, 1064], "posit": 1055, "possibl": 953, "possibli": 1099, "precis": [272, 273, 274, 731, 732, 733, 987, 988, 989, 1020], "predefin": 1099, "predict": [4, 30, 210, 211, 389, 390, 413, 414, 614, 615, 620, 621], "preprocess": 1113, "present": [667, 670], "print": [1073, 1099], "probabl": [4, 17, 417, 953], "probablit": 953, "process": [98, 156, 157, 673, 690, 812, 829], "prod_": 53, "product": [510, 544, 1019, 1038, 1059, 1065, 1087], "progress": [130, 1099], "progressbar": 1099, "project": [21, 25, 31, 812, 1099], "provid": [707, 1099, 1110], "psi": 53, "purge_step": 1110, "put": [200, 206, 223, 229, 240, 246, 292, 298, 310, 316, 327, 333, 345, 351, 362, 368, 379, 385, 403, 409, 426, 432, 443, 449, 460, 466, 477, 483, 502, 508, 519, 525, 536, 542, 553, 559, 570, 576, 587, 593, 604, 610, 633, 639, 652, 658, 682, 688, 699, 705, 753, 759, 770, 776, 787, 793, 804, 810, 821, 827, 839, 845, 856, 862, 873, 879, 890, 896, 907, 913, 924, 930, 941, 947], "python": [256, 715, 971, 1099], "pytorch": [510, 544, 778, 1099], "quantifi": 154, "r2": 30, "r_t": 510, "rais": [667, 669, 670, 707, 950], "random": [162, 1099, 1113], "randomli": 17, "rang": [669, 955, 1034, 1099], "rate": [39, 46, 53, 60, 67, 74, 90, 106, 122, 138, 166, 168, 169, 171, 172, 174, 175, 177, 178, 180, 181, 183], "ratio": 951, "ratio_test": 951, "ratio_v": 951, "reach": [90, 169], "readabl": 1099, "rearrang": 1062, "rectifi": [32, 761], "recurr": [21, 25, 510, 1099], "recurs": [196, 197, 198, 219, 220, 221, 236, 237, 238, 288, 289, 290, 306, 307, 308, 323, 324, 325, 341, 342, 343, 358, 359, 360, 375, 376, 377, 399, 400, 401, 422, 423, 424, 439, 440, 441, 456, 457, 458, 473, 474, 475, 498, 499, 500, 515, 516, 517, 532, 533, 534, 549, 550, 551, 566, 567, 568, 583, 584, 585, 600, 601, 602, 629, 630, 631, 648, 649, 650, 678, 679, 680, 695, 696, 697, 749, 750, 751, 766, 767, 768, 783, 784, 785, 800, 801, 802, 817, 818, 819, 835, 836, 837, 852, 853, 854, 869, 870, 871, 886, 887, 888, 903, 904, 905, 920, 921, 922, 937, 938, 939], "regist": [202, 203, 212, 213, 225, 226, 242, 243, 294, 295, 312, 313, 329, 330, 347, 348, 364, 365, 381, 382, 391, 392, 405, 406, 415, 416, 428, 429, 445, 446, 462, 463, 479, 480, 504, 505, 521, 522, 538, 539, 555, 556, 572, 573, 589, 590, 606, 607, 616, 617, 622, 623, 635, 636, 654, 655, 684, 685, 701, 702, 755, 756, 772, 773, 789, 790, 806, 807, 823, 824, 841, 842, 858, 859, 875, 876, 892, 893, 909, 910, 926, 927, 943, 944], "register_backward": 1099, "register_forward": 1099, "regular": 417, "rel": 1000, "relu": [21, 23, 25, 31, 510, 544, 578, 778, 1099], "remain": [38, 184, 186, 932, 1055], "remov": [11, 12, 264, 353, 370, 492, 663, 669, 723, 979, 1080], "repeat": [38, 932, 1067, 1068, 1089], "repositori": 1099, "repres": [953, 1096, 1099], "reproduc": 957, "requir": 1099, "reset": [43, 50, 57, 64, 71, 98, 957, 1099], "reset_grad": 1099, "residu": 812, "residual_proj": [812, 813], "residual_project": 812, "respect": [210, 389, 413, 614, 620], "result": [1020, 1034], "retain_valu": [194, 217, 234, 286, 304, 321, 339, 356, 373, 397, 420, 437, 454, 471, 496, 513, 530, 547, 564, 581, 598, 627, 646, 676, 693, 747, 764, 781, 798, 815, 833, 850, 867, 884, 901, 918, 935], "return": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 48, 55, 62, 69, 156, 184, 186, 187, 188, 193, 195, 196, 197, 198, 199, 210, 211, 216, 218, 219, 220, 221, 222, 233, 235, 236, 237, 238, 239, 251, 252, 253, 254, 255, 256, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 287, 288, 289, 290, 291, 303, 305, 306, 307, 308, 309, 320, 322, 323, 324, 325, 326, 338, 340, 341, 342, 343, 344, 355, 357, 358, 359, 360, 361, 372, 374, 375, 376, 377, 378, 389, 390, 396, 398, 399, 400, 401, 402, 413, 414, 419, 421, 422, 423, 424, 425, 436, 438, 439, 440, 441, 442, 453, 455, 456, 457, 458, 459, 470, 472, 473, 474, 475, 476, 492, 495, 497, 498, 499, 500, 501, 512, 514, 515, 516, 517, 518, 529, 531, 532, 533, 534, 535, 546, 548, 549, 550, 551, 552, 563, 565, 566, 567, 568, 569, 580, 582, 583, 584, 585, 586, 597, 599, 600, 601, 602, 603, 614, 615, 620, 621, 626, 628, 629, 630, 631, 632, 645, 647, 648, 649, 650, 651, 664, 665, 667, 669, 672, 675, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 746, 748, 749, 750, 751, 752, 763, 765, 766, 767, 768, 769, 780, 782, 783, 784, 785, 786, 797, 799, 800, 801, 802, 803, 814, 816, 817, 818, 819, 820, 832, 834, 835, 836, 837, 838, 849, 851, 852, 853, 854, 855, 866, 868, 869, 870, 871, 872, 883, 885, 886, 887, 888, 889, 900, 902, 903, 904, 905, 906, 917, 919, 920, 921, 922, 923, 934, 936, 937, 938, 939, 940, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 966, 967, 968, 969, 970, 971, 977, 978, 979, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100], "revers": 672, "right": 493, "rightmost": 1034, "rm": [33, 744], "rmean": [6, 7], "root": [744, 1079], "row": [11, 12, 370], "rtol": 1000, "rule": [39, 46, 53, 67], "run": [6, 7, 78, 79, 86, 87, 94, 95, 102, 103, 110, 111, 118, 119, 126, 127, 134, 135, 142, 143, 146, 150, 151, 214, 231], "rvar": [6, 7], "s_": [283, 300, 353], "same": 1060, "sampl": [157, 184, 186, 953, 954, 959, 960, 1003, 1045], "save": [114, 146, 1099], "scalar": [1051, 1054, 1086], "scalarlik": [1031, 1032, 1051, 1054, 1086], "scale": [6, 7, 22, 33, 38, 74, 166, 932, 933, 949], "schedul": [90, 169, 175], "score": [4, 30, 156, 189, 742], "scratch": 1099, "secant": 1072, "second": [39, 46, 53, 1051, 1054], "see": [154, 300, 335, 393, 1099], "seed": 957, "self": 1099, "separ": 1020, "seper": 951, "sequenc": [214, 283, 300, 353, 434, 510, 544, 778, 1010, 1034, 1078, 1081], "sequenti": [812, 1099], "set": [17, 44, 51, 58, 65, 72, 74, 90, 166, 169, 417, 672, 957, 1073, 1074, 1075, 1094, 1095, 1099], "sever": 1099, "sgd": 1099, "shall": 690, "shallow": 664, "shape": [38, 188, 214, 231, 282, 283, 300, 318, 335, 353, 370, 393, 434, 510, 544, 561, 595, 741, 744, 778, 795, 796, 932, 953, 954, 956, 959, 960, 997, 1006, 1021, 1022, 1025, 1031, 1032, 1035, 1037, 1057, 1058, 1061, 1069, 1097, 1098, 1099], "shapelik": [38, 282, 741, 795, 932, 953, 954, 956, 959, 960, 997, 1006, 1021, 1025, 1031, 1037, 1057, 1061, 1069, 1097], "shift": [6, 7, 22], "short": 544, "should": [184, 186, 673, 812, 1086, 1099], "show": 1099, "shown": 130, "shuffl": [184, 186, 1099], "shuffle_data": [184, 185, 186], "sigma": [451, 510, 544], "sigmoid": [35, 451, 847], "sign": [1040, 1041, 1042, 1043], "similar": 1099, "sine": [1076, 1077], "singl": [264, 273, 723, 732, 979, 988], "size": [5, 26, 184, 186, 191, 283, 300, 318, 335, 353, 370, 624, 951, 1003, 1035, 1063, 1064, 1078], "slightli": [510, 544, 778], "slope": [23, 578], "small": 13, "so": 1099, "softmax": 387, "some": 1099, "somet": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 82, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 100, 106, 107, 113, 114, 115, 116, 120, 122, 123, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 145, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 208, 210, 211, 214, 215, 216, 218, 231, 232, 233, 235, 248, 249, 283, 284, 285, 287, 300, 301, 318, 319, 320, 322, 335, 336, 353, 354, 355, 357, 370, 371, 372, 374, 387, 389, 390, 393, 394, 411, 413, 414, 417, 418, 419, 421, 434, 435, 436, 438, 451, 453, 455, 468, 470, 472, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 510, 511, 512, 514, 527, 529, 531, 544, 545, 546, 548, 561, 562, 563, 565, 578, 579, 580, 582, 595, 596, 597, 599, 612, 613, 614, 615, 616, 617, 618, 620, 621, 624, 625, 626, 628, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 673, 674, 675, 677, 690, 691, 692, 694, 707, 708, 742, 743, 744, 745, 746, 748, 761, 763, 765, 778, 779, 780, 782, 795, 796, 797, 799, 812, 813, 814, 816, 829, 830, 831, 832, 834, 847, 849, 851, 864, 866, 868, 881, 882, 883, 885, 898, 900, 902, 915, 917, 919, 932, 933, 934, 936, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1110], "space": [1003, 1045], "specif": 1060, "specifi": [74, 122, 138, 166, 178, 181, 187, 204, 205, 227, 228, 244, 245, 257, 271, 296, 297, 314, 315, 331, 332, 349, 350, 366, 367, 383, 384, 407, 408, 430, 431, 447, 448, 464, 465, 481, 482, 506, 507, 523, 524, 540, 541, 557, 558, 561, 574, 575, 591, 592, 608, 609, 637, 638, 656, 657, 686, 687, 703, 704, 716, 730, 744, 757, 758, 774, 775, 791, 792, 808, 809, 825, 826, 843, 844, 860, 861, 877, 878, 894, 895, 911, 912, 928, 929, 945, 946, 955, 963, 972, 986, 1020, 1027, 1031, 1032, 1061, 1086, 1099], "split": 951, "sqrt": [39, 46, 53, 214, 231, 283, 318, 353, 370, 493, 510, 544, 561, 595, 744, 778], "squar": [27, 39, 46, 53, 618, 744, 1079], "srivastava": 417, "stabil": [6, 7, 13, 22, 30, 33, 39, 46, 53, 214, 231, 300, 335, 561, 742], "stabl": 672, "stack": [489, 491, 492], "standard": [160, 265, 724, 954, 980, 1082], "start": [77, 79, 85, 87, 93, 95, 101, 103, 109, 111, 117, 119, 125, 127, 133, 135, 141, 143, 149, 151, 667, 1003, 1045], "state": [41, 42, 48, 49, 55, 56, 62, 63, 69, 70, 199, 201, 222, 224, 239, 241, 291, 293, 309, 311, 326, 328, 344, 346, 361, 363, 378, 380, 402, 404, 425, 427, 442, 444, 459, 461, 476, 478, 501, 503, 510, 518, 520, 535, 537, 544, 552, 554, 569, 571, 586, 588, 603, 605, 632, 634, 651, 653, 681, 683, 698, 700, 752, 754, 769, 771, 778, 786, 788, 803, 805, 820, 822, 838, 840, 855, 857, 872, 874, 889, 891, 906, 908, 923, 925, 940, 942, 1099], "state_dict": [42, 49, 56, 63, 70, 201, 224, 241, 293, 311, 328, 346, 363, 380, 404, 427, 444, 461, 478, 503, 520, 537, 554, 571, 588, 605, 634, 653, 683, 700, 754, 771, 788, 805, 822, 840, 857, 874, 891, 908, 925, 942], "static": [202, 203, 212, 213, 225, 226, 242, 243, 294, 295, 312, 313, 329, 330, 347, 348, 364, 365, 381, 382, 391, 392, 405, 406, 415, 416, 428, 429, 445, 446, 462, 463, 479, 480, 487, 488, 504, 505, 521, 522, 538, 539, 555, 556, 572, 573, 589, 590, 606, 607, 616, 617, 622, 623, 635, 636, 654, 655, 684, 685, 701, 702, 755, 756, 772, 773, 789, 790, 806, 807, 823, 824, 841, 842, 858, 859, 875, 876, 892, 893, 909, 910, 926, 927, 943, 944], "statist": 146, "std": [160, 954], "step": [74, 80, 81, 88, 89, 90, 96, 97, 104, 105, 106, 112, 113, 120, 121, 122, 128, 129, 130, 131, 136, 137, 138, 144, 145, 152, 153, 154, 166, 169, 172, 178, 181, 1003, 1099], "still": 1099, "stochast": [67, 73], "stop": [98, 667, 1003, 1045], "store": [954, 955, 956, 959, 960, 963, 1003, 1021, 1031, 1035, 1045, 1057, 1086, 1097, 1099], "str": [41, 42, 48, 49, 55, 56, 62, 63, 69, 70, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 188, 199, 214, 222, 231, 239, 283, 291, 300, 309, 318, 326, 335, 344, 353, 361, 370, 378, 393, 402, 417, 425, 434, 442, 451, 459, 468, 476, 493, 501, 510, 518, 527, 535, 544, 552, 561, 569, 578, 586, 595, 603, 632, 643, 651, 673, 681, 690, 698, 744, 752, 761, 769, 778, 786, 795, 803, 812, 820, 829, 838, 847, 855, 864, 872, 881, 889, 898, 906, 915, 923, 940, 1020, 1046, 1071], "stride": [9, 10, 11, 12, 283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 1063, 1064], "string": 881, "subscript": 1020, "subset": 1100, "suggest": 1099, "sum": [673, 1088, 1099], "sum_": [208, 283, 318, 387, 411, 618, 673, 744, 898], "sume": 1088, "summari": 188, "summarywrit": 1110, "summat": 1020, "super": 1099, "support": 1099, "sure": 1099, "swap": 1090, "t": [39, 46, 53, 67, 510, 544, 595, 778, 961, 962, 1099], "t_decai": [138, 139, 181, 182], "t_decay_step": [122, 123, 178, 179], "tangent": [37, 1084, 1085], "tanh": [21, 25, 31, 493, 510, 511, 544, 545, 778, 779], "target": [4, 8, 13, 14, 27, 30, 38, 74, 75, 90, 98, 99, 156, 157, 169, 211, 390, 414, 615, 621, 932], "target_devic": [42, 49, 56, 63, 70, 201, 224, 241, 293, 311, 328, 346, 363, 380, 404, 427, 444, 461, 478, 503, 520, 537, 554, 571, 588, 605, 634, 653, 683, 700, 754, 771, 788, 805, 822, 840, 857, 874, 891, 908, 925, 942], "target_lr": [90, 91, 169, 170], "target_shap": [38, 932, 933], "temporari": [194, 217, 234, 286, 304, 321, 339, 356, 373, 397, 420, 437, 454, 471, 496, 513, 530, 547, 564, 581, 598, 627, 646, 676, 693, 747, 764, 781, 798, 815, 833, 850, 867, 884, 901, 918, 935], "tensor": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 184, 186, 193, 195, 199, 210, 211, 216, 218, 222, 233, 235, 239, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 287, 291, 303, 305, 309, 320, 322, 326, 338, 340, 344, 355, 357, 361, 372, 374, 378, 389, 390, 396, 398, 402, 413, 414, 419, 421, 425, 436, 438, 442, 453, 455, 459, 468, 470, 472, 476, 495, 497, 501, 512, 514, 518, 529, 531, 535, 546, 548, 552, 561, 563, 565, 569, 580, 582, 586, 597, 599, 603, 614, 615, 620, 621, 626, 628, 632, 645, 647, 651, 675, 677, 681, 692, 694, 698, 707, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 746, 748, 752, 761, 763, 765, 769, 780, 782, 786, 795, 797, 799, 803, 814, 816, 820, 832, 834, 838, 849, 851, 855, 866, 868, 872, 881, 883, 885, 889, 900, 902, 906, 917, 919, 923, 932, 934, 936, 940, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "tensorboard": 1113, "tensorboardx": 1110, "term": 544, "test": 951, "text": [39, 46, 53, 67, 208, 283, 318, 353, 370, 387, 493, 578, 690, 744, 761, 847, 915], "textbf": [39, 46, 53, 67], "thei": 812, "them": 672, "therefor": [208, 1099], "thi": [42, 49, 56, 63, 70, 208, 510, 544, 778, 1007, 1099], "thread": 3, "three": 951, "through": 1099, "time": [74, 90, 106, 122, 138, 166, 169, 172, 178, 181, 184, 186], "to_cpu": 1099, "to_devic": 1099, "to_dim": 1055, "to_float": 1099, "to_int": 1099, "to_typ": 1099, "toler": 1000, "toolbox": 1099, "toolkit": 1099, "topmost": 492, "toward": 1034, "track": 1099, "tracker": 1099, "train": [6, 7, 17, 78, 79, 86, 87, 94, 95, 98, 102, 103, 110, 111, 114, 118, 119, 126, 127, 130, 134, 135, 142, 143, 150, 151, 154, 184, 673, 951], "train_dl": 1099, "trainabl": 707, "trainer": [1099, 1113], "trainer_cach": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153], "trainig": 82, "transform": [24, 393, 595, 1024, 1025, 1036, 1037], "transpar": 1099, "transpos": [11, 12, 353, 370], "trend": [74, 166], "triangl": [1091, 1092], "true": [98, 99, 184, 185, 186, 196, 197, 198, 219, 220, 221, 236, 237, 238, 251, 252, 283, 284, 288, 289, 290, 300, 301, 306, 307, 308, 318, 319, 323, 324, 325, 335, 336, 341, 342, 343, 353, 354, 358, 359, 360, 370, 371, 375, 376, 377, 393, 394, 399, 400, 401, 422, 423, 424, 439, 440, 441, 456, 457, 458, 473, 474, 475, 498, 499, 500, 510, 511, 515, 516, 517, 532, 533, 534, 544, 545, 549, 550, 551, 566, 567, 568, 583, 584, 585, 595, 596, 600, 601, 602, 629, 630, 631, 648, 649, 650, 678, 679, 680, 695, 696, 697, 710, 711, 749, 750, 751, 766, 767, 768, 778, 779, 783, 784, 785, 800, 801, 802, 817, 818, 819, 835, 836, 837, 852, 853, 854, 869, 870, 871, 886, 887, 888, 903, 904, 905, 920, 921, 922, 937, 938, 939, 966, 967, 999, 1000, 1001, 1044, 1110], "truth": [208, 387, 411, 618], "tupl": [157, 184, 1025, 1027, 1034, 1037, 1060, 1062, 1086], "turn": 1018, "two": [5, 9, 10, 11, 12, 16, 26, 29, 38, 672, 932, 1011, 1012, 1019, 1038, 1051, 1054, 1059, 1064, 1068, 1087, 1088, 1090, 1091, 1092, 1100], "type": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 48, 55, 62, 69, 187, 188, 193, 195, 196, 197, 198, 199, 210, 211, 216, 218, 219, 220, 221, 222, 233, 235, 236, 237, 238, 239, 254, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 285, 287, 288, 289, 290, 291, 303, 305, 306, 307, 308, 309, 320, 322, 323, 324, 325, 326, 338, 340, 341, 342, 343, 344, 355, 357, 358, 359, 360, 361, 372, 374, 375, 376, 377, 378, 389, 390, 396, 398, 399, 400, 401, 402, 413, 414, 419, 421, 422, 423, 424, 425, 436, 438, 439, 440, 441, 442, 453, 455, 456, 457, 458, 459, 470, 472, 473, 474, 475, 476, 495, 497, 498, 499, 500, 501, 512, 514, 515, 516, 517, 518, 529, 531, 532, 533, 534, 535, 546, 548, 549, 550, 551, 552, 563, 565, 566, 567, 568, 569, 580, 582, 583, 584, 585, 586, 597, 599, 600, 601, 602, 603, 614, 615, 620, 621, 626, 628, 629, 630, 631, 632, 645, 647, 648, 649, 650, 651, 675, 677, 678, 679, 680, 681, 692, 694, 695, 696, 697, 698, 707, 713, 715, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 746, 748, 749, 750, 751, 752, 763, 765, 766, 767, 768, 769, 780, 782, 783, 784, 785, 786, 797, 799, 800, 801, 802, 803, 814, 816, 817, 818, 819, 820, 832, 834, 835, 836, 837, 838, 849, 851, 852, 853, 854, 855, 866, 868, 869, 870, 871, 872, 883, 885, 886, 887, 888, 889, 900, 902, 903, 904, 905, 906, 917, 919, 920, 921, 922, 923, 934, 936, 937, 938, 939, 940, 949, 950, 952, 953, 954, 955, 956, 959, 960, 963, 969, 971, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099], "typeerror": 707, "u": [283, 318, 353, 370, 510, 544, 595, 778], "unclip": 187, "under": 1099, "understand": 1099, "uniform": [159, 160, 162, 164, 960], "uniformli": 959, "uniniti": [1021, 1022], "unit": [19, 20, 32, 35, 451, 493, 510, 761, 847], "unless": 1020, "unlik": 1099, "unus": 0, "up": [74, 166, 194, 217, 234, 286, 304, 321, 339, 356, 373, 397, 420, 437, 454, 471, 496, 513, 530, 547, 564, 581, 598, 627, 646, 676, 693, 747, 764, 781, 798, 815, 833, 850, 867, 884, 901, 918, 935], "updat": [39, 45, 46, 52, 53, 59, 66, 67, 73, 90, 106, 122, 130, 138, 154, 168, 169, 171, 172, 174, 177, 178, 180, 181, 183, 207, 230, 247, 299, 317, 334, 352, 369, 386, 410, 433, 450, 467, 484, 509, 526, 543, 560, 577, 594, 611, 640, 659, 689, 706, 760, 777, 794, 811, 828, 846, 863, 880, 897, 914, 931, 948, 1099], "upper": [162, 949, 959, 960, 1007, 1092], "upsaml": 932, "upsampl": [38, 353, 370, 932], "us": [6, 7, 9, 10, 11, 12, 15, 16, 18, 21, 25, 31, 45, 52, 59, 66, 67, 73, 90, 130, 154, 156, 157, 169, 191, 208, 214, 231, 283, 300, 318, 335, 353, 370, 393, 417, 434, 451, 468, 493, 510, 527, 544, 561, 578, 595, 624, 643, 673, 690, 744, 761, 778, 795, 812, 829, 847, 864, 881, 898, 915, 932, 949, 951, 963, 1003, 1011, 1012, 1022, 1032, 1034, 1058, 1060, 1061, 1074, 1075, 1096, 1098, 1099, 1100], "use_best_param": [98, 99], "user": 1099, "util": [74, 90, 106, 122, 138, 146, 154, 300, 335, 393, 1099, 1113], "v": [39, 46, 53, 67], "v13": 1099, "v_": [39, 46, 53, 67], "v_0": [39, 46, 53, 67], "v_t": [39, 46, 53, 67], "val_data": 157, "val_dl": 1099, "val_loss": 1099, "valid": [283, 284, 300, 301, 318, 319, 335, 336, 353, 354, 370, 371, 951], "validaton": 157, "validi": 1099, "valu": [4, 7, 17, 27, 30, 38, 39, 44, 46, 51, 53, 58, 65, 67, 72, 98, 156, 158, 159, 160, 162, 163, 164, 187, 191, 194, 211, 217, 234, 250, 253, 267, 272, 273, 274, 275, 277, 283, 286, 300, 304, 318, 321, 335, 339, 353, 356, 370, 373, 390, 393, 397, 414, 417, 420, 437, 454, 471, 496, 510, 513, 530, 544, 547, 564, 581, 595, 598, 615, 621, 624, 627, 646, 665, 667, 670, 672, 676, 693, 709, 712, 726, 731, 732, 733, 734, 736, 747, 764, 778, 781, 798, 815, 833, 850, 867, 884, 901, 918, 932, 935, 949, 953, 954, 956, 957, 959, 960, 965, 968, 982, 987, 988, 989, 990, 992, 998, 1002, 1003, 1004, 1007, 1021, 1022, 1027, 1031, 1032, 1034, 1045, 1066, 1067, 1068, 1070, 1089, 1093, 1099], "valueerror": [667, 670, 950], "var": [214, 231, 561], "variabl": [41, 48, 55, 62, 69, 204, 205, 227, 228, 244, 245, 248, 296, 297, 314, 315, 331, 332, 349, 350, 366, 367, 383, 384, 407, 408, 430, 431, 447, 448, 464, 465, 481, 482, 506, 507, 523, 524, 540, 541, 557, 558, 574, 575, 591, 592, 608, 609, 637, 638, 656, 657, 686, 687, 703, 704, 757, 758, 774, 775, 791, 792, 808, 809, 825, 826, 843, 844, 860, 861, 877, 878, 894, 895, 911, 912, 928, 929, 945, 946], "varianc": [6, 7, 214, 231, 281, 740, 952, 996, 1096], "varieti": 1099, "vector": 434, "veloc": 67, "version": [208, 1099], "view": [262, 280, 721, 739, 977, 995, 1039, 1063, 1064, 1069], "w": [6, 7, 22, 24, 33, 214, 231, 561, 744], "w_": [283, 318, 510, 544, 778], "w_h": [21, 25, 31], "w_i": [21, 25, 31], "wai": 1099, "want": 1099, "warmup": [90, 169], "warmup_step": [90, 91, 169, 170], "weight": [6, 7, 21, 22, 24, 25, 31, 33, 39, 46, 53, 67, 214, 231, 283, 300, 318, 335, 353, 370, 393, 510, 544, 561, 595, 744, 778, 1034], "weight_decai": [39, 40, 46, 47, 53, 54, 67, 68], "weight_init": [300, 301, 335, 336, 393, 394], "well": 1020, "what": [300, 335, 393, 1099], "when": [74, 166, 184, 186, 950, 1073, 1099], "where": [39, 46, 53, 67, 191, 208, 214, 231, 283, 300, 318, 335, 353, 370, 387, 393, 411, 434, 510, 544, 561, 595, 618, 624, 744, 778, 1039, 1071, 1078, 1080, 1096, 1099], "whether": [6, 7, 17, 67, 98, 184, 186, 194, 196, 198, 217, 219, 221, 234, 236, 238, 283, 286, 288, 290, 300, 304, 306, 308, 318, 321, 323, 325, 335, 339, 341, 343, 353, 356, 358, 360, 370, 373, 375, 377, 393, 397, 399, 401, 420, 422, 424, 437, 439, 441, 454, 456, 458, 471, 473, 475, 496, 498, 500, 510, 513, 515, 517, 530, 532, 534, 544, 547, 549, 551, 564, 566, 568, 581, 583, 585, 595, 598, 600, 602, 627, 629, 631, 646, 648, 650, 673, 676, 678, 680, 693, 695, 697, 747, 749, 751, 764, 766, 768, 778, 781, 783, 785, 798, 800, 802, 815, 817, 819, 833, 835, 837, 850, 852, 854, 867, 869, 871, 884, 886, 888, 901, 903, 905, 918, 920, 922, 935, 937, 939, 999, 1001, 1004, 1034, 1050, 1052, 1053, 1056, 1065, 1073, 1082, 1083, 1096], "which": [122, 138, 178, 181, 510, 544, 690, 778, 949, 952, 999, 1001, 1002, 1004, 1010, 1024, 1025, 1027, 1036, 1037, 1050, 1052, 1053, 1056, 1065, 1078, 1081, 1082, 1083, 1089, 1096], "whose": [74, 90, 106, 122, 138, 166, 169, 172, 175, 178, 181, 1022, 1032, 1058, 1098], "width": [28, 29, 231, 318, 335, 370, 1034, 1060], "window": [5, 26, 191, 624, 1063, 1064], "window_s": [1063, 1064], "wise": [250, 673, 709, 965, 998, 1013, 1014, 1023, 1047, 1048, 1049, 1051, 1054, 1072, 1076, 1077, 1079, 1084, 1085, 1087, 1088], "within": [191, 624, 812, 1000, 1003, 1045, 1099], "without": 98, "work": 1099, "write": 1099, "write_to_disk": 1110, "x": [5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 156, 195, 214, 218, 231, 235, 287, 305, 322, 340, 357, 374, 398, 421, 438, 451, 455, 472, 493, 497, 514, 531, 548, 561, 565, 578, 582, 599, 628, 647, 673, 677, 690, 694, 744, 748, 761, 765, 782, 799, 812, 816, 829, 834, 847, 851, 864, 868, 885, 898, 902, 915, 919, 936, 949, 950, 951, 952, 953, 958, 998, 999, 1001, 1002, 1004, 1006, 1007, 1013, 1014, 1018, 1022, 1023, 1024, 1025, 1026, 1027, 1032, 1033, 1034, 1036, 1037, 1039, 1044, 1047, 1048, 1049, 1050, 1052, 1053, 1055, 1056, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1096, 1098, 1099], "x1": [1000, 1011, 1012, 1019, 1051, 1054], "x2": [1000, 1011, 1012, 1019, 1051, 1054], "x_": [283, 318, 335, 370], "x_i": [744, 898], "x_t": 778, "x_train": [157, 1099], "x_tw_": [510, 544], "x_val": 1099, "xavier_uniform": [300, 301, 335, 336, 393, 394], "xw": 595, "y": [156, 208, 214, 231, 283, 318, 387, 411, 451, 493, 561, 578, 595, 618, 673, 690, 744, 761, 812, 829, 847, 864, 898, 915, 1099], "y_": [318, 335, 370], "y_i": [208, 387, 618], "y_n": 411, "y_pred": [4, 30, 1099], "y_train": [157, 1099], "y_true": [4, 30], "y_val": 1099, "yet": 1099, "yield": 184, "you": 1099, "your": 1099, "z": 1099, "z_t": 510, "zero": [17, 38, 165, 214, 231, 300, 301, 335, 336, 393, 394, 417, 561, 932, 1060, 1061, 1098, 1099], "zhang": 744}, "titles": ["compyute.backend.free_memory", "compyute.backend.get_device_count", "compyute.backend.gpu_available", "compyute.backend.synchronize", "compyute.nn.functional.accuracy_score", "compyute.nn.functional.avgpooling2d", "compyute.nn.functional.batchnorm1d", "compyute.nn.functional.batchnorm2d", "compyute.nn.functional.bce_loss", "compyute.nn.functional.conv1d", "compyute.nn.functional.conv2d", "compyute.nn.functional.conv_transpose1d", "compyute.nn.functional.conv_transpose2d", "compyute.nn.functional.cross_entropy_loss", "compyute.nn.functional.dice_loss", "compyute.nn.functional.dilate1d", "compyute.nn.functional.dilate2d", "compyute.nn.functional.dropout", "compyute.nn.functional.embedding", "compyute.nn.functional.fast_gelu", "compyute.nn.functional.gelu", "compyute.nn.functional.gru", "compyute.nn.functional.layernorm", "compyute.nn.functional.leaky_relu", "compyute.nn.functional.linear", "compyute.nn.functional.lstm", "compyute.nn.functional.maxpooling2d", "compyute.nn.functional.mse_loss", "compyute.nn.functional.pad1d", "compyute.nn.functional.pad2d", "compyute.nn.functional.r2_score", "compyute.nn.functional.recurrent", "compyute.nn.functional.relu", "compyute.nn.functional.rmsnorm", "compyute.nn.functional.sigmoid", "compyute.nn.functional.silu", "compyute.nn.functional.softmax", "compyute.nn.functional.tanh", "compyute.nn.functional.upsample2d", "compyute.nn.optimizers.Adam", "compyute.nn.optimizers.Adam.__init__", "compyute.nn.optimizers.Adam.get_state_dict", "compyute.nn.optimizers.Adam.load_state_dict", "compyute.nn.optimizers.Adam.reset_grads", "compyute.nn.optimizers.Adam.set_parameters", "compyute.nn.optimizers.Adam.step", "compyute.nn.optimizers.AdamW", "compyute.nn.optimizers.AdamW.__init__", "compyute.nn.optimizers.AdamW.get_state_dict", "compyute.nn.optimizers.AdamW.load_state_dict", "compyute.nn.optimizers.AdamW.reset_grads", "compyute.nn.optimizers.AdamW.set_parameters", "compyute.nn.optimizers.AdamW.step", "compyute.nn.optimizers.NAdam", "compyute.nn.optimizers.NAdam.__init__", "compyute.nn.optimizers.NAdam.get_state_dict", "compyute.nn.optimizers.NAdam.load_state_dict", "compyute.nn.optimizers.NAdam.reset_grads", "compyute.nn.optimizers.NAdam.set_parameters", "compyute.nn.optimizers.NAdam.step", "compyute.nn.optimizers.Optimizer", "compyute.nn.optimizers.Optimizer.__init__", "compyute.nn.optimizers.Optimizer.get_state_dict", "compyute.nn.optimizers.Optimizer.load_state_dict", "compyute.nn.optimizers.Optimizer.reset_grads", "compyute.nn.optimizers.Optimizer.set_parameters", "compyute.nn.optimizers.Optimizer.step", "compyute.nn.optimizers.SGD", "compyute.nn.optimizers.SGD.__init__", "compyute.nn.optimizers.SGD.get_state_dict", "compyute.nn.optimizers.SGD.load_state_dict", "compyute.nn.optimizers.SGD.reset_grads", "compyute.nn.optimizers.SGD.set_parameters", "compyute.nn.optimizers.SGD.step", "compyute.nn.trainer.callbacks.AdaptiveLrScheduler", "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.__init__", "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_end", "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_epoch_start", "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_end", "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_run_start", "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_end", "compyute.nn.trainer.callbacks.AdaptiveLrScheduler.on_step_start", "compyute.nn.trainer.callbacks.Callback", "compyute.nn.trainer.callbacks.Callback.__init__", "compyute.nn.trainer.callbacks.Callback.on_epoch_end", "compyute.nn.trainer.callbacks.Callback.on_epoch_start", "compyute.nn.trainer.callbacks.Callback.on_run_end", "compyute.nn.trainer.callbacks.Callback.on_run_start", "compyute.nn.trainer.callbacks.Callback.on_step_end", "compyute.nn.trainer.callbacks.Callback.on_step_start", "compyute.nn.trainer.callbacks.CosineLrScheduler", "compyute.nn.trainer.callbacks.CosineLrScheduler.__init__", "compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_end", "compyute.nn.trainer.callbacks.CosineLrScheduler.on_epoch_start", "compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_end", "compyute.nn.trainer.callbacks.CosineLrScheduler.on_run_start", "compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_end", "compyute.nn.trainer.callbacks.CosineLrScheduler.on_step_start", "compyute.nn.trainer.callbacks.EarlyStopping", "compyute.nn.trainer.callbacks.EarlyStopping.__init__", "compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_end", "compyute.nn.trainer.callbacks.EarlyStopping.on_epoch_start", "compyute.nn.trainer.callbacks.EarlyStopping.on_run_end", "compyute.nn.trainer.callbacks.EarlyStopping.on_run_start", "compyute.nn.trainer.callbacks.EarlyStopping.on_step_end", "compyute.nn.trainer.callbacks.EarlyStopping.on_step_start", "compyute.nn.trainer.callbacks.ExponentialLrScheduler", "compyute.nn.trainer.callbacks.ExponentialLrScheduler.__init__", "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_end", "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_epoch_start", "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_end", "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_run_start", "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_end", "compyute.nn.trainer.callbacks.ExponentialLrScheduler.on_step_start", "compyute.nn.trainer.callbacks.History", "compyute.nn.trainer.callbacks.History.__init__", "compyute.nn.trainer.callbacks.History.on_epoch_end", "compyute.nn.trainer.callbacks.History.on_epoch_start", "compyute.nn.trainer.callbacks.History.on_run_end", "compyute.nn.trainer.callbacks.History.on_run_start", "compyute.nn.trainer.callbacks.History.on_step_end", "compyute.nn.trainer.callbacks.History.on_step_start", "compyute.nn.trainer.callbacks.MultistepLrScheduler", "compyute.nn.trainer.callbacks.MultistepLrScheduler.__init__", "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_end", "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_epoch_start", "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_end", "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_run_start", "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_end", "compyute.nn.trainer.callbacks.MultistepLrScheduler.on_step_start", "compyute.nn.trainer.callbacks.ProgressBar", "compyute.nn.trainer.callbacks.ProgressBar.__init__", "compyute.nn.trainer.callbacks.ProgressBar.on_epoch_end", "compyute.nn.trainer.callbacks.ProgressBar.on_epoch_start", "compyute.nn.trainer.callbacks.ProgressBar.on_run_end", "compyute.nn.trainer.callbacks.ProgressBar.on_run_start", "compyute.nn.trainer.callbacks.ProgressBar.on_step_end", "compyute.nn.trainer.callbacks.ProgressBar.on_step_start", "compyute.nn.trainer.callbacks.StepLrScheduler", "compyute.nn.trainer.callbacks.StepLrScheduler.__init__", "compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_end", "compyute.nn.trainer.callbacks.StepLrScheduler.on_epoch_start", "compyute.nn.trainer.callbacks.StepLrScheduler.on_run_end", "compyute.nn.trainer.callbacks.StepLrScheduler.on_run_start", "compyute.nn.trainer.callbacks.StepLrScheduler.on_step_end", "compyute.nn.trainer.callbacks.StepLrScheduler.on_step_start", "compyute.nn.trainer.callbacks.Tensorboard", "compyute.nn.trainer.callbacks.Tensorboard.__init__", "compyute.nn.trainer.callbacks.Tensorboard.on_epoch_end", "compyute.nn.trainer.callbacks.Tensorboard.on_epoch_start", "compyute.nn.trainer.callbacks.Tensorboard.on_run_end", "compyute.nn.trainer.callbacks.Tensorboard.on_run_start", "compyute.nn.trainer.callbacks.Tensorboard.on_step_end", "compyute.nn.trainer.callbacks.Tensorboard.on_step_start", "compyute.nn.trainer.Trainer", "compyute.nn.trainer.Trainer.__init__", "compyute.nn.trainer.Trainer.evaluate_model", "compyute.nn.trainer.Trainer.train", "compyute.nn.utils.initializers.init_kaiming_normal", "compyute.nn.utils.initializers.init_kaiming_uniform", "compyute.nn.utils.initializers.init_normal", "compyute.nn.utils.initializers.init_ones", "compyute.nn.utils.initializers.init_uniform", "compyute.nn.utils.initializers.init_xavier_normal", "compyute.nn.utils.initializers.init_xavier_uniform", "compyute.nn.utils.initializers.init_zeros", "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler", "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.__init__", "compyute.nn.utils.lr_schedulers.AdaptiveLrScheduler.step", "compyute.nn.utils.lr_schedulers.CosineLrScheduler", "compyute.nn.utils.lr_schedulers.CosineLrScheduler.__init__", "compyute.nn.utils.lr_schedulers.CosineLrScheduler.step", "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler", "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.__init__", "compyute.nn.utils.lr_schedulers.ExponentialLrScheduler.step", "compyute.nn.utils.lr_schedulers.LrScheduler", "compyute.nn.utils.lr_schedulers.LrScheduler.__init__", "compyute.nn.utils.lr_schedulers.LrScheduler.step", "compyute.nn.utils.lr_schedulers.MultistepLrScheduler", "compyute.nn.utils.lr_schedulers.MultistepLrScheduler.__init__", "compyute.nn.utils.lr_schedulers.MultistepLrScheduler.step", "compyute.nn.utils.lr_schedulers.StepLrScheduler", "compyute.nn.utils.lr_schedulers.StepLrScheduler.__init__", "compyute.nn.utils.lr_schedulers.StepLrScheduler.step", "compyute.nn.utils.Dataloader", "compyute.nn.utils.Dataloader.__init__", "compyute.nn.utils.batched", "compyute.nn.utils.clip_grad_norm", "compyute.nn.utils.get_module_summary", "compyute.nn.Accuracy", "compyute.nn.Accuracy.__init__", "compyute.nn.AvgPooling2D", "compyute.nn.AvgPooling2D.__init__", "compyute.nn.AvgPooling2D.backward", "compyute.nn.AvgPooling2D.clean", "compyute.nn.AvgPooling2D.forward", "compyute.nn.AvgPooling2D.get_buffers", "compyute.nn.AvgPooling2D.get_modules", "compyute.nn.AvgPooling2D.get_parameters", "compyute.nn.AvgPooling2D.get_state_dict", "compyute.nn.AvgPooling2D.inference", "compyute.nn.AvgPooling2D.load_state_dict", "compyute.nn.AvgPooling2D.register_backward", "compyute.nn.AvgPooling2D.register_forward", "compyute.nn.AvgPooling2D.to_device", "compyute.nn.AvgPooling2D.to_type", "compyute.nn.AvgPooling2D.training", "compyute.nn.AvgPooling2D.update_parameter_grad", "compyute.nn.BCELoss", "compyute.nn.BCELoss.__init__", "compyute.nn.BCELoss.backward", "compyute.nn.BCELoss.forward", "compyute.nn.BCELoss.register_backward", "compyute.nn.BCELoss.register_forward", "compyute.nn.BatchNorm1D", "compyute.nn.BatchNorm1D.__init__", "compyute.nn.BatchNorm1D.backward", "compyute.nn.BatchNorm1D.clean", "compyute.nn.BatchNorm1D.forward", "compyute.nn.BatchNorm1D.get_buffers", "compyute.nn.BatchNorm1D.get_modules", "compyute.nn.BatchNorm1D.get_parameters", "compyute.nn.BatchNorm1D.get_state_dict", "compyute.nn.BatchNorm1D.inference", "compyute.nn.BatchNorm1D.load_state_dict", "compyute.nn.BatchNorm1D.register_backward", "compyute.nn.BatchNorm1D.register_forward", "compyute.nn.BatchNorm1D.to_device", "compyute.nn.BatchNorm1D.to_type", "compyute.nn.BatchNorm1D.training", "compyute.nn.BatchNorm1D.update_parameter_grad", "compyute.nn.BatchNorm2D", "compyute.nn.BatchNorm2D.__init__", "compyute.nn.BatchNorm2D.backward", "compyute.nn.BatchNorm2D.clean", "compyute.nn.BatchNorm2D.forward", "compyute.nn.BatchNorm2D.get_buffers", "compyute.nn.BatchNorm2D.get_modules", "compyute.nn.BatchNorm2D.get_parameters", "compyute.nn.BatchNorm2D.get_state_dict", "compyute.nn.BatchNorm2D.inference", "compyute.nn.BatchNorm2D.load_state_dict", "compyute.nn.BatchNorm2D.register_backward", "compyute.nn.BatchNorm2D.register_forward", "compyute.nn.BatchNorm2D.to_device", "compyute.nn.BatchNorm2D.to_type", "compyute.nn.BatchNorm2D.training", "compyute.nn.BatchNorm2D.update_parameter_grad", "compyute.nn.Buffer", "compyute.nn.Buffer.__init__", "compyute.nn.Buffer.abs", "compyute.nn.Buffer.all", "compyute.nn.Buffer.any", "compyute.nn.Buffer.argmax", "compyute.nn.Buffer.copy", "compyute.nn.Buffer.imag", "compyute.nn.Buffer.item", "compyute.nn.Buffer.ito_device", "compyute.nn.Buffer.ito_type", "compyute.nn.Buffer.max", "compyute.nn.Buffer.mean", "compyute.nn.Buffer.min", "compyute.nn.Buffer.permute", "compyute.nn.Buffer.real", "compyute.nn.Buffer.squeeze", "compyute.nn.Buffer.std", "compyute.nn.Buffer.sum", "compyute.nn.Buffer.to_complex", "compyute.nn.Buffer.to_contiguous", "compyute.nn.Buffer.to_cpu", "compyute.nn.Buffer.to_cuda", "compyute.nn.Buffer.to_device", "compyute.nn.Buffer.to_double", "compyute.nn.Buffer.to_float", "compyute.nn.Buffer.to_half", "compyute.nn.Buffer.to_int", "compyute.nn.Buffer.to_list", "compyute.nn.Buffer.to_long", "compyute.nn.Buffer.to_numpy", "compyute.nn.Buffer.to_type", "compyute.nn.Buffer.transpose", "compyute.nn.Buffer.var", "compyute.nn.Buffer.view", "compyute.nn.Conv1D", "compyute.nn.Conv1D.__init__", "compyute.nn.Conv1D.backward", "compyute.nn.Conv1D.clean", "compyute.nn.Conv1D.forward", "compyute.nn.Conv1D.get_buffers", "compyute.nn.Conv1D.get_modules", "compyute.nn.Conv1D.get_parameters", "compyute.nn.Conv1D.get_state_dict", "compyute.nn.Conv1D.inference", "compyute.nn.Conv1D.load_state_dict", "compyute.nn.Conv1D.register_backward", "compyute.nn.Conv1D.register_forward", "compyute.nn.Conv1D.to_device", "compyute.nn.Conv1D.to_type", "compyute.nn.Conv1D.training", "compyute.nn.Conv1D.update_parameter_grad", "compyute.nn.Conv1DBlock", "compyute.nn.Conv1DBlock.__init__", "compyute.nn.Conv1DBlock.add", "compyute.nn.Conv1DBlock.backward", "compyute.nn.Conv1DBlock.clean", "compyute.nn.Conv1DBlock.forward", "compyute.nn.Conv1DBlock.get_buffers", "compyute.nn.Conv1DBlock.get_modules", "compyute.nn.Conv1DBlock.get_parameters", "compyute.nn.Conv1DBlock.get_state_dict", "compyute.nn.Conv1DBlock.inference", "compyute.nn.Conv1DBlock.load_state_dict", "compyute.nn.Conv1DBlock.register_backward", "compyute.nn.Conv1DBlock.register_forward", "compyute.nn.Conv1DBlock.to_device", "compyute.nn.Conv1DBlock.to_type", "compyute.nn.Conv1DBlock.training", "compyute.nn.Conv1DBlock.update_parameter_grad", "compyute.nn.Conv2D", "compyute.nn.Conv2D.__init__", "compyute.nn.Conv2D.backward", "compyute.nn.Conv2D.clean", "compyute.nn.Conv2D.forward", "compyute.nn.Conv2D.get_buffers", "compyute.nn.Conv2D.get_modules", "compyute.nn.Conv2D.get_parameters", "compyute.nn.Conv2D.get_state_dict", "compyute.nn.Conv2D.inference", "compyute.nn.Conv2D.load_state_dict", "compyute.nn.Conv2D.register_backward", "compyute.nn.Conv2D.register_forward", "compyute.nn.Conv2D.to_device", "compyute.nn.Conv2D.to_type", "compyute.nn.Conv2D.training", "compyute.nn.Conv2D.update_parameter_grad", "compyute.nn.Conv2DBlock", "compyute.nn.Conv2DBlock.__init__", "compyute.nn.Conv2DBlock.add", "compyute.nn.Conv2DBlock.backward", "compyute.nn.Conv2DBlock.clean", "compyute.nn.Conv2DBlock.forward", "compyute.nn.Conv2DBlock.get_buffers", "compyute.nn.Conv2DBlock.get_modules", "compyute.nn.Conv2DBlock.get_parameters", "compyute.nn.Conv2DBlock.get_state_dict", "compyute.nn.Conv2DBlock.inference", "compyute.nn.Conv2DBlock.load_state_dict", "compyute.nn.Conv2DBlock.register_backward", "compyute.nn.Conv2DBlock.register_forward", "compyute.nn.Conv2DBlock.to_device", "compyute.nn.Conv2DBlock.to_type", "compyute.nn.Conv2DBlock.training", "compyute.nn.Conv2DBlock.update_parameter_grad", "compyute.nn.ConvTranspose1D", "compyute.nn.ConvTranspose1D.__init__", "compyute.nn.ConvTranspose1D.backward", "compyute.nn.ConvTranspose1D.clean", "compyute.nn.ConvTranspose1D.forward", "compyute.nn.ConvTranspose1D.get_buffers", "compyute.nn.ConvTranspose1D.get_modules", "compyute.nn.ConvTranspose1D.get_parameters", "compyute.nn.ConvTranspose1D.get_state_dict", "compyute.nn.ConvTranspose1D.inference", "compyute.nn.ConvTranspose1D.load_state_dict", "compyute.nn.ConvTranspose1D.register_backward", "compyute.nn.ConvTranspose1D.register_forward", "compyute.nn.ConvTranspose1D.to_device", "compyute.nn.ConvTranspose1D.to_type", "compyute.nn.ConvTranspose1D.training", "compyute.nn.ConvTranspose1D.update_parameter_grad", "compyute.nn.ConvTranspose2D", "compyute.nn.ConvTranspose2D.__init__", "compyute.nn.ConvTranspose2D.backward", "compyute.nn.ConvTranspose2D.clean", "compyute.nn.ConvTranspose2D.forward", "compyute.nn.ConvTranspose2D.get_buffers", "compyute.nn.ConvTranspose2D.get_modules", "compyute.nn.ConvTranspose2D.get_parameters", "compyute.nn.ConvTranspose2D.get_state_dict", "compyute.nn.ConvTranspose2D.inference", "compyute.nn.ConvTranspose2D.load_state_dict", "compyute.nn.ConvTranspose2D.register_backward", "compyute.nn.ConvTranspose2D.register_forward", "compyute.nn.ConvTranspose2D.to_device", "compyute.nn.ConvTranspose2D.to_type", "compyute.nn.ConvTranspose2D.training", "compyute.nn.ConvTranspose2D.update_parameter_grad", "compyute.nn.CrossEntropyLoss", "compyute.nn.CrossEntropyLoss.__init__", "compyute.nn.CrossEntropyLoss.backward", "compyute.nn.CrossEntropyLoss.forward", "compyute.nn.CrossEntropyLoss.register_backward", "compyute.nn.CrossEntropyLoss.register_forward", "compyute.nn.DenseBlock", "compyute.nn.DenseBlock.__init__", "compyute.nn.DenseBlock.add", "compyute.nn.DenseBlock.backward", "compyute.nn.DenseBlock.clean", "compyute.nn.DenseBlock.forward", "compyute.nn.DenseBlock.get_buffers", "compyute.nn.DenseBlock.get_modules", "compyute.nn.DenseBlock.get_parameters", "compyute.nn.DenseBlock.get_state_dict", "compyute.nn.DenseBlock.inference", "compyute.nn.DenseBlock.load_state_dict", "compyute.nn.DenseBlock.register_backward", "compyute.nn.DenseBlock.register_forward", "compyute.nn.DenseBlock.to_device", "compyute.nn.DenseBlock.to_type", "compyute.nn.DenseBlock.training", "compyute.nn.DenseBlock.update_parameter_grad", "compyute.nn.DiceLoss", "compyute.nn.DiceLoss.__init__", "compyute.nn.DiceLoss.backward", "compyute.nn.DiceLoss.forward", "compyute.nn.DiceLoss.register_backward", "compyute.nn.DiceLoss.register_forward", "compyute.nn.Dropout", "compyute.nn.Dropout.__init__", "compyute.nn.Dropout.backward", "compyute.nn.Dropout.clean", "compyute.nn.Dropout.forward", "compyute.nn.Dropout.get_buffers", "compyute.nn.Dropout.get_modules", "compyute.nn.Dropout.get_parameters", "compyute.nn.Dropout.get_state_dict", "compyute.nn.Dropout.inference", "compyute.nn.Dropout.load_state_dict", "compyute.nn.Dropout.register_backward", "compyute.nn.Dropout.register_forward", "compyute.nn.Dropout.to_device", "compyute.nn.Dropout.to_type", "compyute.nn.Dropout.training", "compyute.nn.Dropout.update_parameter_grad", "compyute.nn.Embedding", "compyute.nn.Embedding.__init__", "compyute.nn.Embedding.backward", "compyute.nn.Embedding.clean", "compyute.nn.Embedding.forward", "compyute.nn.Embedding.get_buffers", "compyute.nn.Embedding.get_modules", "compyute.nn.Embedding.get_parameters", "compyute.nn.Embedding.get_state_dict", "compyute.nn.Embedding.inference", "compyute.nn.Embedding.load_state_dict", "compyute.nn.Embedding.register_backward", "compyute.nn.Embedding.register_forward", "compyute.nn.Embedding.to_device", "compyute.nn.Embedding.to_type", "compyute.nn.Embedding.training", "compyute.nn.Embedding.update_parameter_grad", "compyute.nn.FastGELU", "compyute.nn.FastGELU.__init__", "compyute.nn.FastGELU.backward", "compyute.nn.FastGELU.clean", "compyute.nn.FastGELU.forward", "compyute.nn.FastGELU.get_buffers", "compyute.nn.FastGELU.get_modules", "compyute.nn.FastGELU.get_parameters", "compyute.nn.FastGELU.get_state_dict", "compyute.nn.FastGELU.inference", "compyute.nn.FastGELU.load_state_dict", "compyute.nn.FastGELU.register_backward", "compyute.nn.FastGELU.register_forward", "compyute.nn.FastGELU.to_device", "compyute.nn.FastGELU.to_type", "compyute.nn.FastGELU.training", "compyute.nn.FastGELU.update_parameter_grad", "compyute.nn.Flatten", "compyute.nn.Flatten.__init__", "compyute.nn.Flatten.backward", "compyute.nn.Flatten.clean", "compyute.nn.Flatten.forward", "compyute.nn.Flatten.get_buffers", "compyute.nn.Flatten.get_modules", "compyute.nn.Flatten.get_parameters", "compyute.nn.Flatten.get_state_dict", "compyute.nn.Flatten.inference", "compyute.nn.Flatten.load_state_dict", "compyute.nn.Flatten.register_backward", "compyute.nn.Flatten.register_forward", "compyute.nn.Flatten.to_device", "compyute.nn.Flatten.to_type", "compyute.nn.Flatten.training", "compyute.nn.Flatten.update_parameter_grad", "compyute.nn.Function", "compyute.nn.Function.__init__", "compyute.nn.Function.backward", "compyute.nn.Function.forward", "compyute.nn.FunctionContext", "compyute.nn.FunctionContext.__init__", "compyute.nn.FunctionContext.add", "compyute.nn.FunctionContext.get", "compyute.nn.GELU", "compyute.nn.GELU.__init__", "compyute.nn.GELU.backward", "compyute.nn.GELU.clean", "compyute.nn.GELU.forward", "compyute.nn.GELU.get_buffers", "compyute.nn.GELU.get_modules", "compyute.nn.GELU.get_parameters", "compyute.nn.GELU.get_state_dict", "compyute.nn.GELU.inference", "compyute.nn.GELU.load_state_dict", "compyute.nn.GELU.register_backward", "compyute.nn.GELU.register_forward", "compyute.nn.GELU.to_device", "compyute.nn.GELU.to_type", "compyute.nn.GELU.training", "compyute.nn.GELU.update_parameter_grad", "compyute.nn.GRU", "compyute.nn.GRU.__init__", "compyute.nn.GRU.backward", "compyute.nn.GRU.clean", "compyute.nn.GRU.forward", "compyute.nn.GRU.get_buffers", "compyute.nn.GRU.get_modules", "compyute.nn.GRU.get_parameters", "compyute.nn.GRU.get_state_dict", "compyute.nn.GRU.inference", "compyute.nn.GRU.load_state_dict", "compyute.nn.GRU.register_backward", "compyute.nn.GRU.register_forward", "compyute.nn.GRU.to_device", "compyute.nn.GRU.to_type", "compyute.nn.GRU.training", "compyute.nn.GRU.update_parameter_grad", "compyute.nn.Identity", "compyute.nn.Identity.__init__", "compyute.nn.Identity.backward", "compyute.nn.Identity.clean", "compyute.nn.Identity.forward", "compyute.nn.Identity.get_buffers", "compyute.nn.Identity.get_modules", "compyute.nn.Identity.get_parameters", "compyute.nn.Identity.get_state_dict", "compyute.nn.Identity.inference", "compyute.nn.Identity.load_state_dict", "compyute.nn.Identity.register_backward", "compyute.nn.Identity.register_forward", "compyute.nn.Identity.to_device", "compyute.nn.Identity.to_type", "compyute.nn.Identity.training", "compyute.nn.Identity.update_parameter_grad", "compyute.nn.LSTM", "compyute.nn.LSTM.__init__", "compyute.nn.LSTM.backward", "compyute.nn.LSTM.clean", "compyute.nn.LSTM.forward", "compyute.nn.LSTM.get_buffers", "compyute.nn.LSTM.get_modules", "compyute.nn.LSTM.get_parameters", "compyute.nn.LSTM.get_state_dict", "compyute.nn.LSTM.inference", "compyute.nn.LSTM.load_state_dict", "compyute.nn.LSTM.register_backward", "compyute.nn.LSTM.register_forward", "compyute.nn.LSTM.to_device", "compyute.nn.LSTM.to_type", "compyute.nn.LSTM.training", "compyute.nn.LSTM.update_parameter_grad", "compyute.nn.LayerNorm", "compyute.nn.LayerNorm.__init__", "compyute.nn.LayerNorm.backward", "compyute.nn.LayerNorm.clean", "compyute.nn.LayerNorm.forward", "compyute.nn.LayerNorm.get_buffers", "compyute.nn.LayerNorm.get_modules", "compyute.nn.LayerNorm.get_parameters", "compyute.nn.LayerNorm.get_state_dict", "compyute.nn.LayerNorm.inference", "compyute.nn.LayerNorm.load_state_dict", "compyute.nn.LayerNorm.register_backward", "compyute.nn.LayerNorm.register_forward", "compyute.nn.LayerNorm.to_device", "compyute.nn.LayerNorm.to_type", "compyute.nn.LayerNorm.training", "compyute.nn.LayerNorm.update_parameter_grad", "compyute.nn.LeakyReLU", "compyute.nn.LeakyReLU.__init__", "compyute.nn.LeakyReLU.backward", "compyute.nn.LeakyReLU.clean", "compyute.nn.LeakyReLU.forward", "compyute.nn.LeakyReLU.get_buffers", "compyute.nn.LeakyReLU.get_modules", "compyute.nn.LeakyReLU.get_parameters", "compyute.nn.LeakyReLU.get_state_dict", "compyute.nn.LeakyReLU.inference", "compyute.nn.LeakyReLU.load_state_dict", "compyute.nn.LeakyReLU.register_backward", "compyute.nn.LeakyReLU.register_forward", "compyute.nn.LeakyReLU.to_device", "compyute.nn.LeakyReLU.to_type", "compyute.nn.LeakyReLU.training", "compyute.nn.LeakyReLU.update_parameter_grad", "compyute.nn.Linear", "compyute.nn.Linear.__init__", "compyute.nn.Linear.backward", "compyute.nn.Linear.clean", "compyute.nn.Linear.forward", "compyute.nn.Linear.get_buffers", "compyute.nn.Linear.get_modules", "compyute.nn.Linear.get_parameters", "compyute.nn.Linear.get_state_dict", "compyute.nn.Linear.inference", "compyute.nn.Linear.load_state_dict", "compyute.nn.Linear.register_backward", "compyute.nn.Linear.register_forward", "compyute.nn.Linear.to_device", "compyute.nn.Linear.to_type", "compyute.nn.Linear.training", "compyute.nn.Linear.update_parameter_grad", "compyute.nn.Loss", "compyute.nn.Loss.__init__", "compyute.nn.Loss.backward", "compyute.nn.Loss.forward", "compyute.nn.Loss.register_backward", "compyute.nn.Loss.register_forward", "compyute.nn.MSELoss", "compyute.nn.MSELoss.__init__", "compyute.nn.MSELoss.backward", "compyute.nn.MSELoss.forward", "compyute.nn.MSELoss.register_backward", "compyute.nn.MSELoss.register_forward", "compyute.nn.MaxPooling2D", "compyute.nn.MaxPooling2D.__init__", "compyute.nn.MaxPooling2D.backward", "compyute.nn.MaxPooling2D.clean", "compyute.nn.MaxPooling2D.forward", "compyute.nn.MaxPooling2D.get_buffers", "compyute.nn.MaxPooling2D.get_modules", "compyute.nn.MaxPooling2D.get_parameters", "compyute.nn.MaxPooling2D.get_state_dict", "compyute.nn.MaxPooling2D.inference", "compyute.nn.MaxPooling2D.load_state_dict", "compyute.nn.MaxPooling2D.register_backward", "compyute.nn.MaxPooling2D.register_forward", "compyute.nn.MaxPooling2D.to_device", "compyute.nn.MaxPooling2D.to_type", "compyute.nn.MaxPooling2D.training", "compyute.nn.MaxPooling2D.update_parameter_grad", "compyute.nn.Metric", "compyute.nn.Metric.__init__", "compyute.nn.Module", "compyute.nn.Module.__init__", "compyute.nn.Module.backward", "compyute.nn.Module.clean", "compyute.nn.Module.forward", "compyute.nn.Module.get_buffers", "compyute.nn.Module.get_modules", "compyute.nn.Module.get_parameters", "compyute.nn.Module.get_state_dict", "compyute.nn.Module.inference", "compyute.nn.Module.load_state_dict", "compyute.nn.Module.register_backward", "compyute.nn.Module.register_forward", "compyute.nn.Module.to_device", "compyute.nn.Module.to_type", "compyute.nn.Module.training", "compyute.nn.Module.update_parameter_grad", "compyute.nn.ModuleList", "compyute.nn.ModuleList.__init__", "compyute.nn.ModuleList.append", "compyute.nn.ModuleList.clear", "compyute.nn.ModuleList.copy", "compyute.nn.ModuleList.count", "compyute.nn.ModuleList.extend", "compyute.nn.ModuleList.index", "compyute.nn.ModuleList.insert", "compyute.nn.ModuleList.pop", "compyute.nn.ModuleList.remove", "compyute.nn.ModuleList.reverse", "compyute.nn.ModuleList.sort", "compyute.nn.ParallelAdd", "compyute.nn.ParallelAdd.__init__", "compyute.nn.ParallelAdd.backward", "compyute.nn.ParallelAdd.clean", "compyute.nn.ParallelAdd.forward", "compyute.nn.ParallelAdd.get_buffers", "compyute.nn.ParallelAdd.get_modules", "compyute.nn.ParallelAdd.get_parameters", "compyute.nn.ParallelAdd.get_state_dict", "compyute.nn.ParallelAdd.inference", "compyute.nn.ParallelAdd.load_state_dict", "compyute.nn.ParallelAdd.register_backward", "compyute.nn.ParallelAdd.register_forward", "compyute.nn.ParallelAdd.to_device", "compyute.nn.ParallelAdd.to_type", "compyute.nn.ParallelAdd.training", "compyute.nn.ParallelAdd.update_parameter_grad", "compyute.nn.ParallelConcat", "compyute.nn.ParallelConcat.__init__", "compyute.nn.ParallelConcat.backward", "compyute.nn.ParallelConcat.clean", "compyute.nn.ParallelConcat.forward", "compyute.nn.ParallelConcat.get_buffers", "compyute.nn.ParallelConcat.get_modules", "compyute.nn.ParallelConcat.get_parameters", "compyute.nn.ParallelConcat.get_state_dict", "compyute.nn.ParallelConcat.inference", "compyute.nn.ParallelConcat.load_state_dict", "compyute.nn.ParallelConcat.register_backward", "compyute.nn.ParallelConcat.register_forward", "compyute.nn.ParallelConcat.to_device", "compyute.nn.ParallelConcat.to_type", "compyute.nn.ParallelConcat.training", "compyute.nn.ParallelConcat.update_parameter_grad", "compyute.nn.Parameter", "compyute.nn.Parameter.__init__", "compyute.nn.Parameter.abs", "compyute.nn.Parameter.all", "compyute.nn.Parameter.any", "compyute.nn.Parameter.argmax", "compyute.nn.Parameter.copy", "compyute.nn.Parameter.imag", "compyute.nn.Parameter.item", "compyute.nn.Parameter.ito_device", "compyute.nn.Parameter.ito_type", "compyute.nn.Parameter.max", "compyute.nn.Parameter.mean", "compyute.nn.Parameter.min", "compyute.nn.Parameter.permute", "compyute.nn.Parameter.real", "compyute.nn.Parameter.squeeze", "compyute.nn.Parameter.std", "compyute.nn.Parameter.sum", "compyute.nn.Parameter.to_complex", "compyute.nn.Parameter.to_contiguous", "compyute.nn.Parameter.to_cpu", "compyute.nn.Parameter.to_cuda", "compyute.nn.Parameter.to_device", "compyute.nn.Parameter.to_double", "compyute.nn.Parameter.to_float", "compyute.nn.Parameter.to_half", "compyute.nn.Parameter.to_int", "compyute.nn.Parameter.to_list", "compyute.nn.Parameter.to_long", "compyute.nn.Parameter.to_numpy", "compyute.nn.Parameter.to_type", "compyute.nn.Parameter.transpose", "compyute.nn.Parameter.var", "compyute.nn.Parameter.view", "compyute.nn.R2", "compyute.nn.R2.__init__", "compyute.nn.RMSNorm", "compyute.nn.RMSNorm.__init__", "compyute.nn.RMSNorm.backward", "compyute.nn.RMSNorm.clean", "compyute.nn.RMSNorm.forward", "compyute.nn.RMSNorm.get_buffers", "compyute.nn.RMSNorm.get_modules", "compyute.nn.RMSNorm.get_parameters", "compyute.nn.RMSNorm.get_state_dict", "compyute.nn.RMSNorm.inference", "compyute.nn.RMSNorm.load_state_dict", "compyute.nn.RMSNorm.register_backward", "compyute.nn.RMSNorm.register_forward", "compyute.nn.RMSNorm.to_device", "compyute.nn.RMSNorm.to_type", "compyute.nn.RMSNorm.training", "compyute.nn.RMSNorm.update_parameter_grad", "compyute.nn.ReLU", "compyute.nn.ReLU.__init__", "compyute.nn.ReLU.backward", "compyute.nn.ReLU.clean", "compyute.nn.ReLU.forward", "compyute.nn.ReLU.get_buffers", "compyute.nn.ReLU.get_modules", "compyute.nn.ReLU.get_parameters", "compyute.nn.ReLU.get_state_dict", "compyute.nn.ReLU.inference", "compyute.nn.ReLU.load_state_dict", "compyute.nn.ReLU.register_backward", "compyute.nn.ReLU.register_forward", "compyute.nn.ReLU.to_device", "compyute.nn.ReLU.to_type", "compyute.nn.ReLU.training", "compyute.nn.ReLU.update_parameter_grad", "compyute.nn.Recurrent", "compyute.nn.Recurrent.__init__", "compyute.nn.Recurrent.backward", "compyute.nn.Recurrent.clean", "compyute.nn.Recurrent.forward", "compyute.nn.Recurrent.get_buffers", "compyute.nn.Recurrent.get_modules", "compyute.nn.Recurrent.get_parameters", "compyute.nn.Recurrent.get_state_dict", "compyute.nn.Recurrent.inference", "compyute.nn.Recurrent.load_state_dict", "compyute.nn.Recurrent.register_backward", "compyute.nn.Recurrent.register_forward", "compyute.nn.Recurrent.to_device", "compyute.nn.Recurrent.to_type", "compyute.nn.Recurrent.training", "compyute.nn.Recurrent.update_parameter_grad", "compyute.nn.Reshape", "compyute.nn.Reshape.__init__", "compyute.nn.Reshape.backward", "compyute.nn.Reshape.clean", "compyute.nn.Reshape.forward", "compyute.nn.Reshape.get_buffers", "compyute.nn.Reshape.get_modules", "compyute.nn.Reshape.get_parameters", "compyute.nn.Reshape.get_state_dict", "compyute.nn.Reshape.inference", "compyute.nn.Reshape.load_state_dict", "compyute.nn.Reshape.register_backward", "compyute.nn.Reshape.register_forward", "compyute.nn.Reshape.to_device", "compyute.nn.Reshape.to_type", "compyute.nn.Reshape.training", "compyute.nn.Reshape.update_parameter_grad", "compyute.nn.ResidualConnection", "compyute.nn.ResidualConnection.__init__", "compyute.nn.ResidualConnection.backward", "compyute.nn.ResidualConnection.clean", "compyute.nn.ResidualConnection.forward", "compyute.nn.ResidualConnection.get_buffers", "compyute.nn.ResidualConnection.get_modules", "compyute.nn.ResidualConnection.get_parameters", "compyute.nn.ResidualConnection.get_state_dict", "compyute.nn.ResidualConnection.inference", "compyute.nn.ResidualConnection.load_state_dict", "compyute.nn.ResidualConnection.register_backward", "compyute.nn.ResidualConnection.register_forward", "compyute.nn.ResidualConnection.to_device", "compyute.nn.ResidualConnection.to_type", "compyute.nn.ResidualConnection.training", "compyute.nn.ResidualConnection.update_parameter_grad", "compyute.nn.Sequential", "compyute.nn.Sequential.__init__", "compyute.nn.Sequential.add", "compyute.nn.Sequential.backward", "compyute.nn.Sequential.clean", "compyute.nn.Sequential.forward", "compyute.nn.Sequential.get_buffers", "compyute.nn.Sequential.get_modules", "compyute.nn.Sequential.get_parameters", "compyute.nn.Sequential.get_state_dict", "compyute.nn.Sequential.inference", "compyute.nn.Sequential.load_state_dict", "compyute.nn.Sequential.register_backward", "compyute.nn.Sequential.register_forward", "compyute.nn.Sequential.to_device", "compyute.nn.Sequential.to_type", "compyute.nn.Sequential.training", "compyute.nn.Sequential.update_parameter_grad", "compyute.nn.SiLU", "compyute.nn.SiLU.__init__", "compyute.nn.SiLU.backward", "compyute.nn.SiLU.clean", "compyute.nn.SiLU.forward", "compyute.nn.SiLU.get_buffers", "compyute.nn.SiLU.get_modules", "compyute.nn.SiLU.get_parameters", "compyute.nn.SiLU.get_state_dict", "compyute.nn.SiLU.inference", "compyute.nn.SiLU.load_state_dict", "compyute.nn.SiLU.register_backward", "compyute.nn.SiLU.register_forward", "compyute.nn.SiLU.to_device", "compyute.nn.SiLU.to_type", "compyute.nn.SiLU.training", "compyute.nn.SiLU.update_parameter_grad", "compyute.nn.Sigmoid", "compyute.nn.Sigmoid.__init__", "compyute.nn.Sigmoid.backward", "compyute.nn.Sigmoid.clean", "compyute.nn.Sigmoid.forward", "compyute.nn.Sigmoid.get_buffers", "compyute.nn.Sigmoid.get_modules", "compyute.nn.Sigmoid.get_parameters", "compyute.nn.Sigmoid.get_state_dict", "compyute.nn.Sigmoid.inference", "compyute.nn.Sigmoid.load_state_dict", "compyute.nn.Sigmoid.register_backward", "compyute.nn.Sigmoid.register_forward", "compyute.nn.Sigmoid.to_device", "compyute.nn.Sigmoid.to_type", "compyute.nn.Sigmoid.training", "compyute.nn.Sigmoid.update_parameter_grad", "compyute.nn.Slice", "compyute.nn.Slice.__init__", "compyute.nn.Slice.backward", "compyute.nn.Slice.clean", "compyute.nn.Slice.forward", "compyute.nn.Slice.get_buffers", "compyute.nn.Slice.get_modules", "compyute.nn.Slice.get_parameters", "compyute.nn.Slice.get_state_dict", "compyute.nn.Slice.inference", "compyute.nn.Slice.load_state_dict", "compyute.nn.Slice.register_backward", "compyute.nn.Slice.register_forward", "compyute.nn.Slice.to_device", "compyute.nn.Slice.to_type", "compyute.nn.Slice.training", "compyute.nn.Slice.update_parameter_grad", "compyute.nn.Softmax", "compyute.nn.Softmax.__init__", "compyute.nn.Softmax.backward", "compyute.nn.Softmax.clean", "compyute.nn.Softmax.forward", "compyute.nn.Softmax.get_buffers", "compyute.nn.Softmax.get_modules", "compyute.nn.Softmax.get_parameters", "compyute.nn.Softmax.get_state_dict", "compyute.nn.Softmax.inference", "compyute.nn.Softmax.load_state_dict", "compyute.nn.Softmax.register_backward", "compyute.nn.Softmax.register_forward", "compyute.nn.Softmax.to_device", "compyute.nn.Softmax.to_type", "compyute.nn.Softmax.training", "compyute.nn.Softmax.update_parameter_grad", "compyute.nn.Tanh", "compyute.nn.Tanh.__init__", "compyute.nn.Tanh.backward", "compyute.nn.Tanh.clean", "compyute.nn.Tanh.forward", "compyute.nn.Tanh.get_buffers", "compyute.nn.Tanh.get_modules", "compyute.nn.Tanh.get_parameters", "compyute.nn.Tanh.get_state_dict", "compyute.nn.Tanh.inference", "compyute.nn.Tanh.load_state_dict", "compyute.nn.Tanh.register_backward", "compyute.nn.Tanh.register_forward", "compyute.nn.Tanh.to_device", "compyute.nn.Tanh.to_type", "compyute.nn.Tanh.training", "compyute.nn.Tanh.update_parameter_grad", "compyute.nn.Upsample2D", "compyute.nn.Upsample2D.__init__", "compyute.nn.Upsample2D.backward", "compyute.nn.Upsample2D.clean", "compyute.nn.Upsample2D.forward", "compyute.nn.Upsample2D.get_buffers", "compyute.nn.Upsample2D.get_modules", "compyute.nn.Upsample2D.get_parameters", "compyute.nn.Upsample2D.get_state_dict", "compyute.nn.Upsample2D.inference", "compyute.nn.Upsample2D.load_state_dict", "compyute.nn.Upsample2D.register_backward", "compyute.nn.Upsample2D.register_forward", "compyute.nn.Upsample2D.to_device", "compyute.nn.Upsample2D.to_type", "compyute.nn.Upsample2D.training", "compyute.nn.Upsample2D.update_parameter_grad", "compyute.preprocessing.normalize", "compyute.preprocessing.one_hot_encode", "compyute.preprocessing.split_train_val_test", "compyute.preprocessing.standardize", "compyute.random.multinomial", "compyute.random.normal", "compyute.random.permutation", "compyute.random.random", "compyute.random.set_seed", "compyute.random.shuffle", "compyute.random.uniform", "compyute.random.uniform_int", "compyute.Device", "compyute.Device.__init__", "compyute.Tensor", "compyute.Tensor.__init__", "compyute.Tensor.abs", "compyute.Tensor.all", "compyute.Tensor.any", "compyute.Tensor.argmax", "compyute.Tensor.copy", "compyute.Tensor.imag", "compyute.Tensor.item", "compyute.Tensor.ito_device", "compyute.Tensor.ito_type", "compyute.Tensor.max", "compyute.Tensor.mean", "compyute.Tensor.min", "compyute.Tensor.permute", "compyute.Tensor.real", "compyute.Tensor.squeeze", "compyute.Tensor.std", "compyute.Tensor.sum", "compyute.Tensor.to_complex", "compyute.Tensor.to_contiguous", "compyute.Tensor.to_cpu", "compyute.Tensor.to_cuda", "compyute.Tensor.to_device", "compyute.Tensor.to_double", "compyute.Tensor.to_float", "compyute.Tensor.to_half", "compyute.Tensor.to_int", "compyute.Tensor.to_list", "compyute.Tensor.to_long", "compyute.Tensor.to_numpy", "compyute.Tensor.to_type", "compyute.Tensor.transpose", "compyute.Tensor.var", "compyute.Tensor.view", "compyute.abs", "compyute.all", "compyute.allclose", "compyute.any", "compyute.append", "compyute.arange", "compyute.argmax", "compyute.bool_", "compyute.broadcast_to", "compyute.clip", "compyute.complex128", "compyute.complex64", "compyute.concat", "compyute.convolve1d_fft", "compyute.convolve2d_fft", "compyute.cos", "compyute.cosh", "compyute.cpu", "compyute.cuda", "compyute.debug", "compyute.diagonal", "compyute.dot", "compyute.einsum", "compyute.empty", "compyute.empty_like", "compyute.exp", "compyute.fft1d", "compyute.fft2d", "compyute.flatten", "compyute.flip", "compyute.float16", "compyute.float32", "compyute.float64", "compyute.full", "compyute.full_like", "compyute.get_diagonal", "compyute.histogram", "compyute.identity", "compyute.ifft1d", "compyute.ifft2d", "compyute.inner", "compyute.insert_dim", "compyute.int16", "compyute.int32", "compyute.int64", "compyute.int8", "compyute.is_nan", "compyute.linspace", "compyute.load", "compyute.log", "compyute.log10", "compyute.log2", "compyute.max", "compyute.maximum", "compyute.mean", "compyute.min", "compyute.minimum", "compyute.movedim", "compyute.norm", "compyute.ones", "compyute.ones_like", "compyute.outer", "compyute.pad", "compyute.pad_to_shape", "compyute.permute", "compyute.pooling1d", "compyute.pooling2d", "compyute.prod", "compyute.real", "compyute.repeat1d", "compyute.repeat2d", "compyute.reshape", "compyute.round", "compyute.save", "compyute.sech", "compyute.set_debug_mode", "compyute.set_default_device", "compyute.set_default_dtype", "compyute.sin", "compyute.sinh", "compyute.split", "compyute.sqrt", "compyute.squeeze", "compyute.stack", "compyute.std", "compyute.sum", "compyute.tan", "compyute.tanh", "compyute.tensor", "compyute.tensorprod", "compyute.tensorsum", "compyute.tile", "compyute.transpose", "compyute.tril", "compyute.triu", "compyute.unique", "compyute.use_device", "compyute.use_dtype", "compyute.var", "compyute.zeros", "compyute.zeros_like", "Compyute documentation", "compyute", "compyute.backend", "compyute.nn", "compyute.nn.functional", "compyute.nn.optimizers", "compyute.nn.trainer", "compyute.nn.trainer.callbacks", "compyute.nn.utils", "compyute.nn.utils.initializers", "compyute.nn.utils.lr_schedulers", "compyute.nn.utils.tensorboard", "compyute.preprocessing", "compyute.random", "Compyute reference"], "titleterms": {"__init__": [40, 47, 54, 61, 68, 75, 83, 91, 99, 107, 115, 123, 131, 139, 147, 155, 167, 170, 173, 176, 179, 182, 185, 190, 192, 209, 215, 232, 249, 284, 301, 319, 336, 354, 371, 388, 394, 412, 418, 435, 452, 469, 486, 490, 494, 511, 528, 545, 562, 579, 596, 613, 619, 625, 642, 644, 661, 674, 691, 708, 743, 745, 762, 779, 796, 813, 830, 848, 865, 882, 899, 916, 933, 962, 964], "ab": [250, 709, 965, 998], "accuraci": [189, 190], "accuracy_scor": 4, "activ": [1102, 1103], "adam": [39, 40, 41, 42, 43, 44, 45], "adamw": [46, 47, 48, 49, 50, 51, 52], "adaptivelrschedul": [74, 75, 76, 77, 78, 79, 80, 81, 166, 167, 168], "add": [302, 337, 395, 491, 831], "all": [251, 710, 966, 999], "allclos": 1000, "ani": [252, 711, 967, 1001], "api": 1113, "append": [662, 1002], "arang": 1003, "argmax": [253, 712, 968, 1004], "avgpooling2d": [5, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "backend": [0, 1, 2, 3, 1101], "backward": [193, 210, 216, 233, 285, 303, 320, 338, 355, 372, 389, 396, 413, 419, 436, 453, 470, 487, 495, 512, 529, 546, 563, 580, 597, 614, 620, 626, 645, 675, 692, 746, 763, 780, 797, 814, 832, 849, 866, 883, 900, 917, 934], "basic": 1111, "batch": 186, "batchnorm1d": [6, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "batchnorm2d": [7, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "bce_loss": 8, "bceloss": [208, 209, 210, 211, 212, 213], "block": 1102, "bool_": 1005, "broadcast_to": 1006, "buffer": [248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 1102], "build": 1099, "callback": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 1106], "clean": [194, 217, 234, 286, 304, 321, 339, 356, 373, 397, 420, 437, 454, 471, 496, 513, 530, 547, 564, 581, 598, 627, 646, 676, 693, 747, 764, 781, 798, 815, 833, 850, 867, 884, 901, 918, 935], "clear": 663, "clip": 1007, "clip_grad_norm": 187, "co": 1013, "combin": 1100, "complex128": 1008, "complex64": 1009, "compyut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113], "concat": 1010, "constant": 1100, "contain": 1102, "conv1d": [9, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "conv1dblock": [300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "conv2d": [10, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334], "conv2dblock": [335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "conv_transpose1d": 11, "conv_transpose2d": 12, "convolut": [1102, 1103], "convolve1d_fft": 1011, "convolve2d_fft": 1012, "convtranspose1d": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "convtranspose2d": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "copi": [254, 664, 713, 969], "cosh": 1014, "cosinelrschedul": [90, 91, 92, 93, 94, 95, 96, 97, 169, 170, 171], "count": 665, "cpu": 1015, "creat": 1100, "cross_entropy_loss": 13, "crossentropyloss": [387, 388, 389, 390, 391, 392], "cuda": 1016, "data": 1100, "dataload": [184, 185, 1107], "debug": 1017, "denseblock": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "devic": [961, 962, 1100], "diagon": 1018, "dice_loss": 14, "diceloss": [411, 412, 413, 414, 415, 416], "dilate1d": 15, "dilate2d": 16, "document": 1099, "dot": 1019, "dropout": [17, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "earli": 1106, "earlystop": [98, 99, 100, 101, 102, 103, 104, 105], "einsum": 1020, "embed": [18, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 1102, 1103], "empti": 1021, "empty_lik": 1022, "evaluate_model": 156, "exampl": 1099, "exp": 1023, "exponentiallrschedul": [106, 107, 108, 109, 110, 111, 112, 113, 172, 173, 174], "extend": 666, "fast_gelu": 19, "fastgelu": [451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "fft1d": 1024, "fft2d": 1025, "final": 1099, "flatten": [468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 1026], "flip": 1027, "float16": 1028, "float32": 1029, "float64": 1030, "forward": [195, 211, 218, 235, 287, 305, 322, 340, 357, 374, 390, 398, 414, 421, 438, 455, 472, 488, 497, 514, 531, 548, 565, 582, 599, 615, 621, 628, 647, 677, 694, 748, 765, 782, 799, 816, 834, 851, 868, 885, 902, 919, 936], "free_memori": 0, "full": 1031, "full_lik": 1032, "function": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 485, 486, 487, 488, 1100, 1103], "functioncontext": [489, 490, 491, 492], "gelu": [20, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "get": 492, "get_buff": [196, 219, 236, 288, 306, 323, 341, 358, 375, 399, 422, 439, 456, 473, 498, 515, 532, 549, 566, 583, 600, 629, 648, 678, 695, 749, 766, 783, 800, 817, 835, 852, 869, 886, 903, 920, 937], "get_device_count": 1, "get_diagon": 1033, "get_modul": [197, 220, 237, 289, 307, 324, 342, 359, 376, 400, 423, 440, 457, 474, 499, 516, 533, 550, 567, 584, 601, 630, 649, 679, 696, 750, 767, 784, 801, 818, 836, 853, 870, 887, 904, 921, 938], "get_module_summari": 188, "get_paramet": [198, 221, 238, 290, 308, 325, 343, 360, 377, 401, 424, 441, 458, 475, 500, 517, 534, 551, 568, 585, 602, 631, 650, 680, 697, 751, 768, 785, 802, 819, 837, 854, 871, 888, 905, 922, 939], "get_state_dict": [41, 48, 55, 62, 69, 199, 222, 239, 291, 309, 326, 344, 361, 378, 402, 425, 442, 459, 476, 501, 518, 535, 552, 569, 586, 603, 632, 651, 681, 698, 752, 769, 786, 803, 820, 838, 855, 872, 889, 906, 923, 940], "gpu_avail": 2, "gru": [21, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "histogram": 1034, "histori": [114, 115, 116, 117, 118, 119, 120, 121], "ident": [527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 1035], "ifft1d": 1036, "ifft2d": 1037, "imag": [255, 714, 970], "index": 667, "infer": [200, 223, 240, 292, 310, 327, 345, 362, 379, 403, 426, 443, 460, 477, 502, 519, 536, 553, 570, 587, 604, 633, 652, 682, 699, 753, 770, 787, 804, 821, 839, 856, 873, 890, 907, 924, 941], "init_kaiming_norm": 158, "init_kaiming_uniform": 159, "init_norm": 160, "init_on": 161, "init_uniform": 162, "init_xavier_norm": 163, "init_xavier_uniform": 164, "init_zero": 165, "initi": [158, 159, 160, 161, 162, 163, 164, 165, 1108], "inner": 1038, "insert": 668, "insert_dim": 1039, "instal": 1099, "int16": 1040, "int32": 1041, "int64": 1042, "int8": 1043, "is_nan": 1044, "item": [256, 715, 971], "ito_devic": [257, 716, 972], "ito_typ": [258, 717, 973], "layernorm": [22, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577], "leaky_relu": 23, "leakyrelu": [578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "learn": 1106, "linear": [24, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 1102, 1103], "linspac": 1045, "load": 1046, "load_state_dict": [42, 49, 56, 63, 70, 201, 224, 241, 293, 311, 328, 346, 363, 380, 404, 427, 444, 461, 478, 503, 520, 537, 554, 571, 588, 605, 634, 653, 683, 700, 754, 771, 788, 805, 822, 840, 857, 874, 891, 908, 925, 942], "log": [1047, 1106], "log10": 1048, "log2": 1049, "loss": [612, 613, 614, 615, 616, 617, 1102, 1103], "lr_schedul": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1109], "lrschedul": [175, 176, 177], "lstm": [25, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560], "max": [259, 718, 974, 1050], "maximum": 1051, "maxpooling2d": [26, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640], "mean": [260, 719, 975, 1052], "metric": [641, 642, 1102, 1103], "min": [261, 720, 976, 1053], "minimum": 1054, "model": 1099, "modul": [643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 1102, 1107], "modulelist": [660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672], "movedim": 1055, "mse_loss": 27, "mseloss": [618, 619, 620, 621, 622, 623], "multinari": 1100, "multinomi": 953, "multisteplrschedul": [122, 123, 124, 125, 126, 127, 128, 129, 178, 179, 180], "nadam": [53, 54, 55, 56, 57, 58, 59], "nn": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110], "norm": 1056, "normal": [949, 954, 1102, 1103], "note": 1099, "on_epoch_end": [76, 84, 92, 100, 108, 116, 124, 132, 140, 148], "on_epoch_start": [77, 85, 93, 101, 109, 117, 125, 133, 141, 149], "on_run_end": [78, 86, 94, 102, 110, 118, 126, 134, 142, 150], "on_run_start": [79, 87, 95, 103, 111, 119, 127, 135, 143, 151], "on_step_end": [80, 88, 96, 104, 112, 120, 128, 136, 144, 152], "on_step_start": [81, 89, 97, 105, 113, 121, 129, 137, 145, 153], "one_hot_encod": 950, "ones": 1057, "ones_lik": 1058, "oper": 1100, "optim": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 1104], "outer": 1059, "pad": 1060, "pad1d": 28, "pad2d": 29, "pad_to_shap": 1061, "paralleladd": [673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689], "parallelconcat": [690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "paramet": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 1102], "permut": [262, 721, 955, 977, 1062], "pool": [1102, 1103], "pooling1d": 1063, "pooling2d": 1064, "pop": 669, "preprocess": [949, 950, 951, 952, 1111], "prod": 1065, "progressbar": [130, 131, 132, 133, 134, 135, 136, 137], "python": 1113, "r2": [742, 743], "r2_score": 30, "random": [953, 954, 955, 956, 957, 958, 959, 960, 1112], "rate": 1106, "real": [263, 722, 978, 1066], "recurr": [31, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 1102, 1103], "reduc": 1100, "refer": 1113, "register_backward": [202, 212, 225, 242, 294, 312, 329, 347, 364, 381, 391, 405, 415, 428, 445, 462, 479, 504, 521, 538, 555, 572, 589, 606, 616, 622, 635, 654, 684, 701, 755, 772, 789, 806, 823, 841, 858, 875, 892, 909, 926, 943], "register_forward": [203, 213, 226, 243, 295, 313, 330, 348, 365, 382, 392, 406, 416, 429, 446, 463, 480, 505, 522, 539, 556, 573, 590, 607, 617, 623, 636, 655, 685, 702, 756, 773, 790, 807, 824, 842, 859, 876, 893, 910, 927, 944], "regular": [1102, 1103], "relu": [32, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777], "remov": 670, "repeat1d": 1067, "repeat2d": 1068, "reset_grad": [43, 50, 57, 64, 71], "reshap": [795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 1069], "residualconnect": [812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828], "revers": 671, "rmsnorm": [33, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760], "round": 1070, "save": 1071, "schedul": 1106, "sech": 1072, "select": 1100, "sequenti": [829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846], "set_debug_mod": 1073, "set_default_devic": 1074, "set_default_dtyp": 1075, "set_paramet": [44, 51, 58, 65, 72], "set_se": 957, "sgd": [67, 68, 69, 70, 71, 72, 73], "shape": [1100, 1102], "shuffl": 958, "sigmoid": [34, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880], "silu": [35, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863], "sin": 1076, "sinh": 1077, "slice": [881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897], "softmax": [36, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914], "sort": 672, "split": 1078, "split_train_val_test": 951, "sqrt": 1079, "squeez": [264, 723, 979, 1080], "stack": 1081, "standard": 952, "std": [265, 724, 980, 1082], "step": [45, 52, 59, 66, 73, 168, 171, 174, 177, 180, 183], "steplrschedul": [138, 139, 140, 141, 142, 143, 144, 145, 181, 182, 183], "stop": 1106, "sum": [266, 725, 981, 1083], "synchron": 3, "tan": 1084, "tanh": [37, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 1085], "tensor": [963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1086, 1099, 1100], "tensorboard": [146, 147, 148, 149, 150, 151, 152, 153, 1110], "tensorprod": 1087, "tensorsum": 1088, "tile": 1089, "to_complex": [267, 726, 982], "to_contigu": [268, 727, 983], "to_cpu": [269, 728, 984], "to_cuda": [270, 729, 985], "to_devic": [204, 227, 244, 271, 296, 314, 331, 349, 366, 383, 407, 430, 447, 464, 481, 506, 523, 540, 557, 574, 591, 608, 637, 656, 686, 703, 730, 757, 774, 791, 808, 825, 843, 860, 877, 894, 911, 928, 945, 986], "to_doubl": [272, 731, 987], "to_float": [273, 732, 988], "to_half": [274, 733, 989], "to_int": [275, 734, 990], "to_list": [276, 735, 991], "to_long": [277, 736, 992], "to_numpi": [278, 737, 993], "to_typ": [205, 228, 245, 279, 297, 315, 332, 350, 367, 384, 408, 431, 448, 465, 482, 507, 524, 541, 558, 575, 592, 609, 638, 657, 687, 704, 738, 758, 775, 792, 809, 826, 844, 861, 878, 895, 912, 929, 946, 994], "train": [157, 206, 229, 246, 298, 316, 333, 351, 368, 385, 409, 432, 449, 466, 483, 508, 525, 542, 559, 576, 593, 610, 639, 658, 688, 705, 759, 776, 793, 810, 827, 845, 862, 879, 896, 913, 930, 947, 1099, 1107], "trainer": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 1105, 1106], "transpos": [280, 739, 995, 1090], "tril": 1091, "triu": 1092, "type": 1100, "unari": 1100, "uniform": 959, "uniform_int": 960, "uniqu": 1093, "update_parameter_grad": [207, 230, 247, 299, 317, 334, 352, 369, 386, 410, 433, 450, 467, 484, 509, 526, 543, 560, 577, 594, 611, 640, 659, 689, 706, 760, 777, 794, 811, 828, 846, 863, 880, 897, 914, 931, 948], "upsample2d": [38, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948], "usag": 1099, "use_devic": 1094, "use_dtyp": 1095, "util": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 1100, 1107, 1108, 1109, 1110], "var": [281, 740, 996, 1096], "view": [282, 741, 997], "zero": 1097, "zeros_lik": 1098}})